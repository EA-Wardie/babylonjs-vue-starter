{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nvar name = \"bakedVertexAnimationDeclaration\";\nvar shader = \"#ifdef BAKED_VERTEX_ANIMATION_TEXTURE\\nuniform bakedVertexAnimationTime: f32;\\nuniform bakedVertexAnimationTextureSizeInverted: vec2<f32>;\\nuniform bakedVertexAnimationSettings: vec4<f32>;\\nvar bakedVertexAnimationTexture : texture_2d<f32>;\\n#ifdef INSTANCES\\nattribute bakedVertexAnimationSettingsInstanced : vec4<f32>;\\n#endif\\nfn readMatrixFromRawSamplerVAT(smp : texture_2d<f32>,index : f32,frame : f32)->mat4x4<f32>\\n{\\nlet offset=i32(index)*4;\\nlet frameUV=i32(frame);\\nlet m0=textureLoad(smp,vec2<i32>(offset+0,frameUV),0);\\nlet m1=textureLoad(smp,vec2<i32>(offset+1,frameUV),0);\\nlet m2=textureLoad(smp,vec2<i32>(offset+2,frameUV),0);\\nlet m3=textureLoad(smp,vec2<i32>(offset+3,frameUV),0);\\nreturn mat4x4<f32>(m0,m1,m2,m3);\\n}\\n#endif\\n\"; // Sideeffect\n\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @hidden */\n\nexport var bakedVertexAnimationDeclaration = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,8BAA5B;AAEA,IAAMC,IAAI,GAAG,iCAAb;AACA,IAAMC,MAAM,GAAG,2uBAAf,C,CAoBA;;AACAF,WAAW,CAACG,wBAAZ,CAAqCF,IAArC,IAA6CC,MAA7C;AACA;;AACA,OAAO,IAAME,+BAA+B,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAAxC","names":["ShaderStore","name","shader","IncludesShadersStoreWGSL","bakedVertexAnimationDeclaration"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bakedVertexAnimationDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bakedVertexAnimationDeclaration\";\nconst shader = `#ifdef BAKED_VERTEX_ANIMATION_TEXTURE\nuniform bakedVertexAnimationTime: f32;\runiform bakedVertexAnimationTextureSizeInverted: vec2<f32>;\runiform bakedVertexAnimationSettings: vec4<f32>;\rvar bakedVertexAnimationTexture : texture_2d<f32>;\r#ifdef INSTANCES\nattribute bakedVertexAnimationSettingsInstanced : vec4<f32>;\r#endif\nfn readMatrixFromRawSamplerVAT(smp : texture_2d<f32>,index : f32,frame : f32)->mat4x4<f32>\r{\rlet offset=i32(index)*4;\rlet frameUV=i32(frame);\rlet m0=textureLoad(smp,vec2<i32>(offset+0,frameUV),0);\rlet m1=textureLoad(smp,vec2<i32>(offset+1,frameUV),0);\rlet m2=textureLoad(smp,vec2<i32>(offset+2,frameUV),0);\rlet m3=textureLoad(smp,vec2<i32>(offset+3,frameUV),0);\rreturn mat4x4<f32>(m0,m1,m2,m3);\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @hidden */\nexport const bakedVertexAnimationDeclaration = { name, shader };\n"]},"metadata":{},"sourceType":"module"}