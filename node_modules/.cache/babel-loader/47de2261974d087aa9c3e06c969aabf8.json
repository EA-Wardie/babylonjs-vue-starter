{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.is-array.js\";\n\n/**\n * Class used to provide helpers for slicing\n */\nvar SliceTools =\n/** @class */\nfunction () {\n  function SliceTools() {}\n  /**\n   * Provides a slice function that will work even on IE\n   * @param data defines the array to slice\n   * @param start defines the start of the data (optional)\n   * @param end defines the end of the data (optional)\n   * @returns the new sliced array\n   */\n\n\n  SliceTools.Slice = function (data, start, end) {\n    if (data.slice) {\n      return data.slice(start, end);\n    }\n\n    return Array.prototype.slice.call(data, start, end);\n  };\n  /**\n   * Provides a slice function that will work even on IE\n   * The difference between this and Slice is that this will force-convert to array\n   * @param data defines the array to slice\n   * @param start defines the start of the data (optional)\n   * @param end defines the end of the data (optional)\n   * @returns the new sliced array\n   */\n\n\n  SliceTools.SliceToArray = function (data, start, end) {\n    if (Array.isArray(data)) {\n      return data.slice(start, end);\n    }\n\n    return Array.prototype.slice.call(data, start, end);\n  };\n\n  return SliceTools;\n}();\n\nexport { SliceTools };","map":{"version":3,"mappings":";;;AAAA;;;AAGA;AAAA;AAAA;AAAA,yBA+BC;AA9BG;;;;;;;;;AAOcA,qBAAd,UAAuBC,IAAvB,EAAgCC,KAAhC,EAAgDC,GAAhD,EAA4D;AACxD,QAAKF,IAAY,CAACG,KAAlB,EAAyB;AACrB,aAAQH,IAAY,CAACG,KAAb,CAAmBF,KAAnB,EAA0BC,GAA1B,CAAR;AACH;;AAED,WAAOE,KAAK,CAACC,SAAN,CAAgBF,KAAhB,CAAsBG,IAAtB,CAA2BN,IAA3B,EAAiCC,KAAjC,EAAwCC,GAAxC,CAAP;AACH,GANa;AAQd;;;;;;;;;;AAQcH,4BAAd,UAAiCC,IAAjC,EAA0CC,KAA1C,EAA0DC,GAA1D,EAAsE;AAClE,QAAIE,KAAK,CAACG,OAAN,CAAcP,IAAd,CAAJ,EAAyB;AACrB,aAAQA,IAAiB,CAACG,KAAlB,CAAwBF,KAAxB,EAA+BC,GAA/B,CAAR;AACH;;AAED,WAAOE,KAAK,CAACC,SAAN,CAAgBF,KAAhB,CAAsBG,IAAtB,CAA2BN,IAA3B,EAAiCC,KAAjC,EAAwCC,GAAxC,CAAP;AACH,GANa;;AAOlB;AAAC,CA/BD","names":["SliceTools","data","start","end","slice","Array","prototype","call","isArray"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Misc/sliceTools.ts"],"sourcesContent":["/**\r\n * Class used to provide helpers for slicing\r\n */\r\nexport class SliceTools {\r\n    /**\r\n     * Provides a slice function that will work even on IE\r\n     * @param data defines the array to slice\r\n     * @param start defines the start of the data (optional)\r\n     * @param end defines the end of the data (optional)\r\n     * @returns the new sliced array\r\n     */\r\n    public static Slice<T>(data: T, start?: number, end?: number): T {\r\n        if ((data as any).slice) {\r\n            return (data as any).slice(start, end);\r\n        }\r\n\r\n        return Array.prototype.slice.call(data, start, end);\r\n    }\r\n\r\n    /**\r\n     * Provides a slice function that will work even on IE\r\n     * The difference between this and Slice is that this will force-convert to array\r\n     * @param data defines the array to slice\r\n     * @param start defines the start of the data (optional)\r\n     * @param end defines the end of the data (optional)\r\n     * @returns the new sliced array\r\n     */\r\n    public static SliceToArray<T, P>(data: T, start?: number, end?: number): Array<P> {\r\n        if (Array.isArray(data)) {\r\n            return (data as Array<P>).slice(start, end);\r\n        }\r\n\r\n        return Array.prototype.slice.call(data, start, end);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}