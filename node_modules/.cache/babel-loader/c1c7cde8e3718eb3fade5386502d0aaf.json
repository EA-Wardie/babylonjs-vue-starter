{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialConnectionPointDirection } from \"../../nodeMaterialBlockConnectionPoint.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../nodeMaterialDecorator.js\";\nimport { NodeMaterialConnectionPointCustomObject } from \"../../nodeMaterialConnectionPointCustomObject.js\";\n/**\n * Block used to implement the sheen module of the PBR material\n */\n\nvar SheenBlock =\n/** @class */\nfunction (_super) {\n  __extends(SheenBlock, _super);\n  /**\n   * Create a new SheenBlock\n   * @param name defines the block name\n   */\n\n\n  function SheenBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n    /**\n     * If true, the sheen effect is layered above the base BRDF with the albedo-scaling technique.\n     * It allows the strength of the sheen effect to not depend on the base color of the material,\n     * making it easier to setup and tweak the effect\n     */\n\n\n    _this.albedoScaling = false;\n    /**\n     * Defines if the sheen is linked to the sheen color.\n     */\n\n    _this.linkSheenWithAlbedo = false;\n    _this._isUnique = true;\n\n    _this.registerInput(\"intensity\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3, true, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerInput(\"roughness\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"sheen\", NodeMaterialBlockConnectionPointTypes.Object, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"sheen\", _this, NodeMaterialConnectionPointDirection.Output, SheenBlock, \"SheenBlock\"));\n\n    return _this;\n  }\n  /**\n   * Initialize the block and prepare the context for build\n   * @param state defines the state that will be used for the build\n   */\n\n\n  SheenBlock.prototype.initialize = function (state) {\n    state._excludeVariableName(\"sheenOut\");\n\n    state._excludeVariableName(\"sheenMapData\");\n\n    state._excludeVariableName(\"vSheenColor\");\n\n    state._excludeVariableName(\"vSheenRoughness\");\n  };\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  SheenBlock.prototype.getClassName = function () {\n    return \"SheenBlock\";\n  };\n\n  Object.defineProperty(SheenBlock.prototype, \"intensity\", {\n    /**\n     * Gets the intensity input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SheenBlock.prototype, \"color\", {\n    /**\n     * Gets the color input component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SheenBlock.prototype, \"roughness\", {\n    /**\n     * Gets the roughness input component\n     */\n    get: function get() {\n      return this._inputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SheenBlock.prototype, \"sheen\", {\n    /**\n     * Gets the sheen object output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SheenBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n    _super.prototype.prepareDefines.call(this, mesh, nodeMaterial, defines);\n\n    defines.setValue(\"SHEEN\", true);\n    defines.setValue(\"SHEEN_USE_ROUGHNESS_FROM_MAINTEXTURE\", true, true);\n    defines.setValue(\"SHEEN_LINKWITHALBEDO\", this.linkSheenWithAlbedo, true);\n    defines.setValue(\"SHEEN_ROUGHNESS\", this.roughness.isConnected, true);\n    defines.setValue(\"SHEEN_ALBEDOSCALING\", this.albedoScaling, true);\n  };\n  /**\n   * Gets the main code of the block (fragment side)\n   * @param reflectionBlock instance of a ReflectionBlock null if the code must be generated without an active reflection module\n   * @returns the shader code\n   */\n\n\n  SheenBlock.prototype.getCode = function (reflectionBlock) {\n    var code = \"\";\n    var color = this.color.isConnected ? this.color.associatedVariableName : \"vec3(1.)\";\n    var intensity = this.intensity.isConnected ? this.intensity.associatedVariableName : \"1.\";\n    var roughness = this.roughness.isConnected ? this.roughness.associatedVariableName : \"0.\";\n    var texture = \"vec4(0.)\";\n    code = \"#ifdef SHEEN\\n            sheenOutParams sheenOut;\\n\\n            vec4 vSheenColor = vec4(\".concat(color, \", \").concat(intensity, \");\\n\\n            sheenBlock(\\n                vSheenColor,\\n            #ifdef SHEEN_ROUGHNESS\\n                \").concat(roughness, \",\\n            #endif\\n                roughness,\\n            #ifdef SHEEN_TEXTURE\\n                \").concat(texture, \",\\n                1.0,\\n            #endif\\n                reflectance,\\n            #ifdef SHEEN_LINKWITHALBEDO\\n                baseColor,\\n                surfaceAlbedo,\\n            #endif\\n            #ifdef ENVIRONMENTBRDF\\n                NdotV,\\n                environmentBrdf,\\n            #endif\\n            #if defined(REFLECTION) && defined(ENVIRONMENTBRDF)\\n                AARoughnessFactors,\\n                \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._vReflectionMicrosurfaceInfosName, \",\\n                \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._vReflectionInfosName, \",\\n                \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock.reflectionColor, \",\\n                vLightingIntensity,\\n                #ifdef \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName, \"\\n                    \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._cubeSamplerName, \",\\n                #else\\n                    \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._2DSamplerName, \",\\n                #endif\\n                reflectionOut.reflectionCoords,\\n                NdotVUnclamped,\\n                #ifndef LODBASEDMICROSFURACE\\n                    #ifdef \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName, \"\\n                        \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._cubeSamplerName, \",\\n                        \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._cubeSamplerName, \",\\n                    #else\\n                        \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._2DSamplerName, \",\\n                        \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._2DSamplerName, \",\\n                    #endif\\n                #endif\\n                #if !defined(\").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName, \") && defined(RADIANCEOCCLUSION)\\n                    seo,\\n                #endif\\n                #if !defined(\").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName, \") && defined(HORIZONOCCLUSION) && defined(BUMP) && defined(\").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName, \")\\n                    eho,\\n                #endif\\n            #endif\\n                sheenOut\\n            );\\n\\n            #ifdef SHEEN_LINKWITHALBEDO\\n                surfaceAlbedo = sheenOut.surfaceAlbedo;\\n            #endif\\n        #endif\\r\\n\");\n    return code;\n  };\n\n  SheenBlock.prototype._buildBlock = function (state) {\n    if (state.target === NodeMaterialBlockTargets.Fragment) {\n      state.sharedData.blocksWithDefines.push(this);\n    }\n\n    return this;\n  };\n\n  SheenBlock.prototype._dumpPropertiesCode = function () {\n    var codeString = _super.prototype._dumpPropertiesCode.call(this);\n\n    codeString += \"\".concat(this._codeVariableName, \".albedoScaling = \").concat(this.albedoScaling, \";\\r\\n\");\n    codeString += \"\".concat(this._codeVariableName, \".linkSheenWithAlbedo = \").concat(this.linkSheenWithAlbedo, \";\\r\\n\");\n    return codeString;\n  };\n\n  SheenBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.albedoScaling = this.albedoScaling;\n    serializationObject.linkSheenWithAlbedo = this.linkSheenWithAlbedo;\n    return serializationObject;\n  };\n\n  SheenBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.albedoScaling = serializationObject.albedoScaling;\n    this.linkSheenWithAlbedo = serializationObject.linkSheenWithAlbedo;\n  };\n\n  __decorate([editableInPropertyPage(\"Albedo scaling\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", {\n    notifiers: {\n      update: true\n    }\n  })], SheenBlock.prototype, \"albedoScaling\", void 0);\n\n  __decorate([editableInPropertyPage(\"Link sheen with albedo\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", {\n    notifiers: {\n      update: true\n    }\n  })], SheenBlock.prototype, \"linkSheenWithAlbedo\", void 0);\n\n  return SheenBlock;\n}(NodeMaterialBlock);\n\nexport { SheenBlock };\nRegisterClass(\"BABYLON.SheenBlock\", SheenBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialConnectionPointDirection","NodeMaterialBlockTargets","RegisterClass","editableInPropertyPage","PropertyTypeForEdition","NodeMaterialConnectionPointCustomObject","__extends","name","_super","Fragment","_this","_isUnique","registerInput","Float","Color3","registerOutput","Object","Output","SheenBlock","state","_excludeVariableName","_inputs","_outputs","mesh","nodeMaterial","defines","prepareDefines","call","setValue","linkSheenWithAlbedo","roughness","isConnected","albedoScaling","reflectionBlock","code","color","associatedVariableName","intensity","texture","concat","_vReflectionMicrosurfaceInfosName","_vReflectionInfosName","reflectionColor","_define3DName","_cubeSamplerName","_2DSamplerName","_defineSkyboxName","target","sharedData","blocksWithDefines","push","codeString","_dumpPropertiesCode","_codeVariableName","serializationObject","serialize","scene","rootUrl","_deserialize","__decorate","Boolean","notifiers","update"],"sourceRoot":"","sources":["../../../../../../../../lts/core/generated/Materials/Node/Blocks/PBR/sheenBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialConnectionPointDirection } from \"../../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../nodeMaterialDecorator\";\r\nimport { NodeMaterialConnectionPointCustomObject } from \"../../nodeMaterialConnectionPointCustomObject\";\r\nimport type { NodeMaterial, NodeMaterialDefines } from \"../../nodeMaterial\";\r\nimport type { AbstractMesh } from \"../../../../Meshes/abstractMesh\";\r\nimport type { ReflectionBlock } from \"./reflectionBlock\";\r\nimport type { Scene } from \"../../../../scene\";\r\nimport type { Nullable } from \"../../../../types\";\r\n\r\n/**\r\n * Block used to implement the sheen module of the PBR material\r\n */\r\nexport class SheenBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Create a new SheenBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Fragment);\r\n\r\n        this._isUnique = true;\r\n\r\n        this.registerInput(\"intensity\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\r\n        this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3, true, NodeMaterialBlockTargets.Fragment);\r\n        this.registerInput(\"roughness\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\r\n\r\n        this.registerOutput(\r\n            \"sheen\",\r\n            NodeMaterialBlockConnectionPointTypes.Object,\r\n            NodeMaterialBlockTargets.Fragment,\r\n            new NodeMaterialConnectionPointCustomObject(\"sheen\", this, NodeMaterialConnectionPointDirection.Output, SheenBlock, \"SheenBlock\")\r\n        );\r\n    }\r\n\r\n    /**\r\n     * If true, the sheen effect is layered above the base BRDF with the albedo-scaling technique.\r\n     * It allows the strength of the sheen effect to not depend on the base color of the material,\r\n     * making it easier to setup and tweak the effect\r\n     */\r\n    @editableInPropertyPage(\"Albedo scaling\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", { notifiers: { update: true } })\r\n    public albedoScaling: boolean = false;\r\n\r\n    /**\r\n     * Defines if the sheen is linked to the sheen color.\r\n     */\r\n    @editableInPropertyPage(\"Link sheen with albedo\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", { notifiers: { update: true } })\r\n    public linkSheenWithAlbedo: boolean = false;\r\n\r\n    /**\r\n     * Initialize the block and prepare the context for build\r\n     * @param state defines the state that will be used for the build\r\n     */\r\n    public initialize(state: NodeMaterialBuildState) {\r\n        state._excludeVariableName(\"sheenOut\");\r\n        state._excludeVariableName(\"sheenMapData\");\r\n        state._excludeVariableName(\"vSheenColor\");\r\n        state._excludeVariableName(\"vSheenRoughness\");\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"SheenBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the intensity input component\r\n     */\r\n    public get intensity(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the color input component\r\n     */\r\n    public get color(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the roughness input component\r\n     */\r\n    public get roughness(): NodeMaterialConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the sheen object output component\r\n     */\r\n    public get sheen(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    public prepareDefines(mesh: AbstractMesh, nodeMaterial: NodeMaterial, defines: NodeMaterialDefines) {\r\n        super.prepareDefines(mesh, nodeMaterial, defines);\r\n\r\n        defines.setValue(\"SHEEN\", true);\r\n        defines.setValue(\"SHEEN_USE_ROUGHNESS_FROM_MAINTEXTURE\", true, true);\r\n        defines.setValue(\"SHEEN_LINKWITHALBEDO\", this.linkSheenWithAlbedo, true);\r\n        defines.setValue(\"SHEEN_ROUGHNESS\", this.roughness.isConnected, true);\r\n        defines.setValue(\"SHEEN_ALBEDOSCALING\", this.albedoScaling, true);\r\n    }\r\n\r\n    /**\r\n     * Gets the main code of the block (fragment side)\r\n     * @param reflectionBlock instance of a ReflectionBlock null if the code must be generated without an active reflection module\r\n     * @returns the shader code\r\n     */\r\n    public getCode(reflectionBlock: Nullable<ReflectionBlock>): string {\r\n        let code = \"\";\r\n\r\n        const color = this.color.isConnected ? this.color.associatedVariableName : \"vec3(1.)\";\r\n        const intensity = this.intensity.isConnected ? this.intensity.associatedVariableName : \"1.\";\r\n        const roughness = this.roughness.isConnected ? this.roughness.associatedVariableName : \"0.\";\r\n        const texture = \"vec4(0.)\";\r\n\r\n        code = `#ifdef SHEEN\r\n            sheenOutParams sheenOut;\r\n\r\n            vec4 vSheenColor = vec4(${color}, ${intensity});\r\n\r\n            sheenBlock(\r\n                vSheenColor,\r\n            #ifdef SHEEN_ROUGHNESS\r\n                ${roughness},\r\n            #endif\r\n                roughness,\r\n            #ifdef SHEEN_TEXTURE\r\n                ${texture},\r\n                1.0,\r\n            #endif\r\n                reflectance,\r\n            #ifdef SHEEN_LINKWITHALBEDO\r\n                baseColor,\r\n                surfaceAlbedo,\r\n            #endif\r\n            #ifdef ENVIRONMENTBRDF\r\n                NdotV,\r\n                environmentBrdf,\r\n            #endif\r\n            #if defined(REFLECTION) && defined(ENVIRONMENTBRDF)\r\n                AARoughnessFactors,\r\n                ${reflectionBlock?._vReflectionMicrosurfaceInfosName},\r\n                ${reflectionBlock?._vReflectionInfosName},\r\n                ${reflectionBlock?.reflectionColor},\r\n                vLightingIntensity,\r\n                #ifdef ${reflectionBlock?._define3DName}\r\n                    ${reflectionBlock?._cubeSamplerName},\r\n                #else\r\n                    ${reflectionBlock?._2DSamplerName},\r\n                #endif\r\n                reflectionOut.reflectionCoords,\r\n                NdotVUnclamped,\r\n                #ifndef LODBASEDMICROSFURACE\r\n                    #ifdef ${reflectionBlock?._define3DName}\r\n                        ${reflectionBlock?._cubeSamplerName},\r\n                        ${reflectionBlock?._cubeSamplerName},\r\n                    #else\r\n                        ${reflectionBlock?._2DSamplerName},\r\n                        ${reflectionBlock?._2DSamplerName},\r\n                    #endif\r\n                #endif\r\n                #if !defined(${reflectionBlock?._defineSkyboxName}) && defined(RADIANCEOCCLUSION)\r\n                    seo,\r\n                #endif\r\n                #if !defined(${reflectionBlock?._defineSkyboxName}) && defined(HORIZONOCCLUSION) && defined(BUMP) && defined(${reflectionBlock?._define3DName})\r\n                    eho,\r\n                #endif\r\n            #endif\r\n                sheenOut\r\n            );\r\n\r\n            #ifdef SHEEN_LINKWITHALBEDO\r\n                surfaceAlbedo = sheenOut.surfaceAlbedo;\r\n            #endif\r\n        #endif\\r\\n`;\r\n\r\n        return code;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        if (state.target === NodeMaterialBlockTargets.Fragment) {\r\n            state.sharedData.blocksWithDefines.push(this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    protected _dumpPropertiesCode() {\r\n        let codeString = super._dumpPropertiesCode();\r\n\r\n        codeString += `${this._codeVariableName}.albedoScaling = ${this.albedoScaling};\\r\\n`;\r\n        codeString += `${this._codeVariableName}.linkSheenWithAlbedo = ${this.linkSheenWithAlbedo};\\r\\n`;\r\n\r\n        return codeString;\r\n    }\r\n\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.albedoScaling = this.albedoScaling;\r\n        serializationObject.linkSheenWithAlbedo = this.linkSheenWithAlbedo;\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.albedoScaling = serializationObject.albedoScaling;\r\n        this.linkSheenWithAlbedo = serializationObject.linkSheenWithAlbedo;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.SheenBlock\", SheenBlock);\r\n"]},"metadata":{},"sourceType":"module"}