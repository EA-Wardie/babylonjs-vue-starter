{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { FreeCamera } from \"./freeCamera.js\";\nimport { Vector3 } from \"../Maths/math.vector.js\";\nimport { Node } from \"../node.js\";\nimport \"./Inputs/freeCameraVirtualJoystickInput.js\";\nNode.AddNodeConstructor(\"VirtualJoysticksCamera\", function (name, scene) {\n  return function () {\n    return new VirtualJoysticksCamera(name, Vector3.Zero(), scene);\n  };\n});\n/**\n * This represents a free type of camera. It can be useful in First Person Shooter game for instance.\n * It is identical to the Free Camera and simply adds by default a virtual joystick.\n * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\n * @see https://doc.babylonjs.com/features/cameras#virtual-joysticks-camera\n */\n\nvar VirtualJoysticksCamera =\n/** @class */\nfunction (_super) {\n  __extends(VirtualJoysticksCamera, _super);\n  /**\n   * Instantiates a VirtualJoysticksCamera. It can be useful in First Person Shooter game for instance.\n   * It is identical to the Free Camera and simply adds by default a virtual joystick.\n   * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\n   * @see https://doc.babylonjs.com/features/cameras#virtual-joysticks-camera\n   * @param name Define the name of the camera in the scene\n   * @param position Define the start position of the camera in the scene\n   * @param scene Define the scene the camera belongs to\n   */\n\n\n  function VirtualJoysticksCamera(name, position, scene) {\n    var _this = _super.call(this, name, position, scene) || this;\n\n    _this.inputs.addVirtualJoystick();\n\n    return _this;\n  }\n  /**\n   * Gets the current object class name.\n   * @return the class name\n   */\n\n\n  VirtualJoysticksCamera.prototype.getClassName = function () {\n    return \"VirtualJoysticksCamera\";\n  };\n\n  return VirtualJoysticksCamera;\n}(FreeCamera);\n\nexport { VirtualJoysticksCamera };","map":{"version":3,"mappings":";AAAA,SAASA,UAAT,QAA2B,iBAA3B;AAEA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,IAAT,QAAqB,YAArB;AAEA,OAAO,4CAAP;AAEAA,IAAI,CAACC,kBAAL,CAAwB,wBAAxB,EAAkD,UAACC,IAAD,EAAOC,KAAP,EAAY;AAC1D,SAAO;AAAM,eAAIC,sBAAJ,CAA2BF,IAA3B,EAAiCH,OAAO,CAACM,IAAR,EAAjC,EAAiDF,KAAjD;AAAuD,GAApE;AACH,CAFD;AAIA;;;;;;;AAMA;AAAA;AAAA;AAA4CG;AACxC;;;;;;;;;;;AASA,kCAAYJ,IAAZ,EAA0BK,QAA1B,EAA6CJ,KAA7C,EAA0D;AAA1D,gBACIK,kBAAMN,IAAN,EAAYK,QAAZ,EAAsBJ,KAAtB,KAA4B,IADhC;;AAEIM,SAAI,CAACC,MAAL,CAAYC,kBAAZ;;;AACH;AAED;;;;;;AAIOP,kDAAP;AACI,WAAO,wBAAP;AACH,GAFM;;AAGX;AAAC,CAtBD,CAA4CN,UAA5C","names":["FreeCamera","Vector3","Node","AddNodeConstructor","name","scene","VirtualJoysticksCamera","Zero","__extends","position","_super","_this","inputs","addVirtualJoystick"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Cameras/virtualJoysticksCamera.ts"],"sourcesContent":["import { FreeCamera } from \"./freeCamera\";\r\nimport type { Scene } from \"../scene\";\r\nimport { Vector3 } from \"../Maths/math.vector\";\r\nimport { Node } from \"../node\";\r\n\r\nimport \"./Inputs/freeCameraVirtualJoystickInput\";\r\n\r\nNode.AddNodeConstructor(\"VirtualJoysticksCamera\", (name, scene) => {\r\n    return () => new VirtualJoysticksCamera(name, Vector3.Zero(), scene);\r\n});\r\n\r\n/**\r\n * This represents a free type of camera. It can be useful in First Person Shooter game for instance.\r\n * It is identical to the Free Camera and simply adds by default a virtual joystick.\r\n * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\r\n * @see https://doc.babylonjs.com/features/cameras#virtual-joysticks-camera\r\n */\r\nexport class VirtualJoysticksCamera extends FreeCamera {\r\n    /**\r\n     * Instantiates a VirtualJoysticksCamera. It can be useful in First Person Shooter game for instance.\r\n     * It is identical to the Free Camera and simply adds by default a virtual joystick.\r\n     * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\r\n     * @see https://doc.babylonjs.com/features/cameras#virtual-joysticks-camera\r\n     * @param name Define the name of the camera in the scene\r\n     * @param position Define the start position of the camera in the scene\r\n     * @param scene Define the scene the camera belongs to\r\n     */\r\n    constructor(name: string, position: Vector3, scene?: Scene) {\r\n        super(name, position, scene);\r\n        this.inputs.addVirtualJoystick();\r\n    }\r\n\r\n    /**\r\n     * Gets the current object class name.\r\n     * @return the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"VirtualJoysticksCamera\";\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}