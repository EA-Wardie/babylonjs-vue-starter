{"ast":null,"code":"import { Scene, Engine, FreeCamera, Vector3, HemisphericLight, MeshBuilder, StandardMaterial, Texture } from \"@babylonjs/core\";\nimport '@babylonjs/loaders';\nimport '@/tools/noise';\nexport default {\n  data: function data() {\n    return {\n      engine: null,\n      scene: null,\n      camera: null,\n      light: null,\n      ground: null\n    };\n  },\n  methods: {\n    initGame: function initGame(canvas) {\n      //Setup game environment\n      this.createEngine(canvas);\n      this.createScene();\n      this.createLight();\n      this.createCamera(); // //Create game meshes\n      // this.createGround();\n\n      this.generateVoxelTerrain(); //Start game render\n\n      this.renderGame();\n    },\n    //Environment\n    createEngine: function createEngine(canvas) {\n      this.engine = new Engine(canvas, true);\n    },\n    createScene: function createScene() {\n      this.scene = new Scene(this.engine);\n    },\n    createLight: function createLight() {\n      this.light = new HemisphericLight('light', new Vector3(0, 1, 0), this.scene);\n      this.light.intensity = 0.75;\n    },\n    createCamera: function createCamera() {\n      this.camera = new FreeCamera('camera', new Vector3(0, 7, -12), this.scene);\n      this.camera.speed = 0.25;\n      this.camera.rotation = new Vector3(0.5, 0, 0);\n    },\n    //Meshes\n    createGround: function createGround() {\n      this.ground = MeshBuilder.CreateGround('ground', {\n        width: 200,\n        height: 100\n      }, this.scene);\n      this.setGroundTexture();\n    },\n    generateVoxelTerrain: function generateVoxelTerrain() {\n      var voxel = MeshBuilder.CreateBox('voxel', {\n        size: 1\n      }, this.scene);\n    },\n    //Render Main Game\n    renderGame: function renderGame() {\n      var _this = this;\n\n      this.engine.runRenderLoop(function () {\n        _this.scene.render();\n      });\n    },\n    //Helpers\n    setGroundTexture: function setGroundTexture() {\n      var groundMaterial = new StandardMaterial('ground_texture', this.scene);\n      groundMaterial.diffuseTexture = new Texture('./assets/textures/mars_1k_color.jpg');\n      this.ground.material = groundMaterial;\n    }\n  }\n};","map":{"version":3,"sources":["/home/ea/Development/Babylon/red/src/framework/GameInitializer.js"],"names":["Scene","Engine","FreeCamera","Vector3","HemisphericLight","MeshBuilder","StandardMaterial","Texture","data","engine","scene","camera","light","ground","methods","initGame","canvas","createEngine","createScene","createLight","createCamera","generateVoxelTerrain","renderGame","intensity","speed","rotation","createGround","CreateGround","width","height","setGroundTexture","voxel","CreateBox","size","runRenderLoop","render","groundMaterial","diffuseTexture","material"],"mappings":"AAAA,SACIA,KADJ,EAEIC,MAFJ,EAGIC,UAHJ,EAIIC,OAJJ,EAKIC,gBALJ,EAMIC,WANJ,EAOIC,gBAPJ,EAQIC,OARJ,QASO,iBATP;AAUA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,eAAe;AACXC,EAAAA,IADW,kBACJ;AACH,WAAO;AACHC,MAAAA,MAAM,EAAE,IADL;AAEHC,MAAAA,KAAK,EAAE,IAFJ;AAGHC,MAAAA,MAAM,EAAE,IAHL;AAIHC,MAAAA,KAAK,EAAE,IAJJ;AAKHC,MAAAA,MAAM,EAAE;AALL,KAAP;AAOH,GATU;AAUXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QADK,oBACIC,MADJ,EACY;AACb;AACA,WAAKC,YAAL,CAAkBD,MAAlB;AACA,WAAKE,WAAL;AACA,WAAKC,WAAL;AACA,WAAKC,YAAL,GALa,CAOb;AACA;;AACA,WAAKC,oBAAL,GATa,CAWb;;AACA,WAAKC,UAAL;AACH,KAdI;AAgBL;AACAL,IAAAA,YAjBK,wBAiBQD,MAjBR,EAiBgB;AACjB,WAAKP,MAAL,GAAc,IAAIR,MAAJ,CAAWe,MAAX,EAAmB,IAAnB,CAAd;AACH,KAnBI;AAoBLE,IAAAA,WApBK,yBAoBS;AACV,WAAKR,KAAL,GAAa,IAAIV,KAAJ,CAAU,KAAKS,MAAf,CAAb;AACH,KAtBI;AAuBLU,IAAAA,WAvBK,yBAuBS;AACV,WAAKP,KAAL,GAAa,IAAIR,gBAAJ,CAAqB,OAArB,EAA8B,IAAID,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA9B,EAAoD,KAAKO,KAAzD,CAAb;AACA,WAAKE,KAAL,CAAWW,SAAX,GAAuB,IAAvB;AACH,KA1BI;AA2BLH,IAAAA,YA3BK,0BA2BU;AACX,WAAKT,MAAL,GAAc,IAAIT,UAAJ,CAAe,QAAf,EAAyB,IAAIC,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,EAAnB,CAAzB,EAAiD,KAAKO,KAAtD,CAAd;AACA,WAAKC,MAAL,CAAYa,KAAZ,GAAoB,IAApB;AACA,WAAKb,MAAL,CAAYc,QAAZ,GAAuB,IAAItB,OAAJ,CAAY,GAAZ,EAAiB,CAAjB,EAAoB,CAApB,CAAvB;AACH,KA/BI;AAiCL;AACAuB,IAAAA,YAlCK,0BAkCU;AACX,WAAKb,MAAL,GAAcR,WAAW,CAACsB,YAAZ,CAAyB,QAAzB,EAAmC;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAAnC,EAA8D,KAAKnB,KAAnE,CAAd;AAEA,WAAKoB,gBAAL;AACH,KAtCI;AAuCLT,IAAAA,oBAvCK,kCAuCkB;AACnB,UAAMU,KAAK,GAAG1B,WAAW,CAAC2B,SAAZ,CAAsB,OAAtB,EAA+B;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA/B,EAA0C,KAAKvB,KAA/C,CAAd;AACH,KAzCI;AA0CL;AACAY,IAAAA,UA3CK,wBA2CQ;AAAA;;AACT,WAAKb,MAAL,CAAYyB,aAAZ,CAA0B,YAAM;AAC5B,QAAA,KAAI,CAACxB,KAAL,CAAWyB,MAAX;AACH,OAFD;AAGH,KA/CI;AAiDL;AACAL,IAAAA,gBAlDK,8BAkDc;AACf,UAAMM,cAAc,GAAG,IAAI9B,gBAAJ,CAAqB,gBAArB,EAAuC,KAAKI,KAA5C,CAAvB;AACA0B,MAAAA,cAAc,CAACC,cAAf,GAAgC,IAAI9B,OAAJ,CAAY,qCAAZ,CAAhC;AAEA,WAAKM,MAAL,CAAYyB,QAAZ,GAAuBF,cAAvB;AACH;AAvDI;AAVE,CAAf","sourcesContent":["import {\n    Scene,\n    Engine,\n    FreeCamera,\n    Vector3,\n    HemisphericLight,\n    MeshBuilder,\n    StandardMaterial,\n    Texture,\n} from \"@babylonjs/core\";\nimport '@babylonjs/loaders';\nimport '@/tools/noise'\nexport default {\n    data() {\n        return {\n            engine: null,\n            scene: null,\n            camera: null,\n            light: null,\n            ground: null,\n        };\n    },\n    methods: {\n        initGame(canvas) {\n            //Setup game environment\n            this.createEngine(canvas);\n            this.createScene();\n            this.createLight();\n            this.createCamera();\n\n            // //Create game meshes\n            // this.createGround();\n            this.generateVoxelTerrain();\n\n            //Start game render\n            this.renderGame();\n        },\n\n        //Environment\n        createEngine(canvas) {\n            this.engine = new Engine(canvas, true);\n        },\n        createScene() {\n            this.scene = new Scene(this.engine);\n        },\n        createLight() {\n            this.light = new HemisphericLight('light', new Vector3(0, 1, 0), this.scene);\n            this.light.intensity = 0.75;\n        },\n        createCamera() {\n            this.camera = new FreeCamera('camera', new Vector3(0, 7, -12), this.scene);\n            this.camera.speed = 0.25;\n            this.camera.rotation = new Vector3(0.5, 0, 0);\n        },\n\n        //Meshes\n        createGround() {\n            this.ground = MeshBuilder.CreateGround('ground', {width: 200, height: 100}, this.scene);\n\n            this.setGroundTexture();\n        },\n        generateVoxelTerrain() {\n            const voxel = MeshBuilder.CreateBox('voxel', {size: 1}, this.scene);\n        },\n        //Render Main Game\n        renderGame() {\n            this.engine.runRenderLoop(() => {\n                this.scene.render();\n            });\n        },\n\n        //Helpers\n        setGroundTexture() {\n            const groundMaterial = new StandardMaterial('ground_texture', this.scene);\n            groundMaterial.diffuseTexture = new Texture('./assets/textures/mars_1k_color.jpg');\n\n            this.ground.material = groundMaterial;\n        },\n    },\n}"]},"metadata":{},"sourceType":"module"}