{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nvar name = \"blackAndWhitePixelShader\";\nvar shader = \"varying vec2 vUV;\\nuniform sampler2D textureSampler;\\nuniform float degree;\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) \\n{\\nvec3 color=texture2D(textureSampler,vUV).rgb;\\nfloat luminance=dot(color,vec3(0.3,0.59,0.11)); \\nvec3 blackAndWhite=vec3(luminance,luminance,luminance);\\ngl_FragColor=vec4(color-((color-blackAndWhite)*degree),1.0);\\n}\"; // Sideeffect\n\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\n\nexport var blackAndWhitePixelShader = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,2BAA5B;AAEA,IAAMC,IAAI,GAAG,0BAAb;AACA,IAAMC,MAAM,GAAG,kWAAf,C,CAWA;;AACAF,WAAW,CAACG,YAAZ,CAAyBF,IAAzB,IAAiCC,MAAjC;AACA;;AACA,OAAO,IAAME,wBAAwB,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAAjC","names":["ShaderStore","name","shader","ShadersStore","blackAndWhitePixelShader"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/blackAndWhite.fragment.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"blackAndWhitePixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\runiform float degree;\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) \r{\rvec3 color=texture2D(textureSampler,vUV).rgb;\rfloat luminance=dot(color,vec3(0.3,0.59,0.11)); \rvec3 blackAndWhite=vec3(luminance,luminance,luminance);\rgl_FragColor=vec4(color-((color-blackAndWhite)*degree),1.0);\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const blackAndWhitePixelShader = { name, shader };\n"]},"metadata":{},"sourceType":"module"}