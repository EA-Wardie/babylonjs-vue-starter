{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\n\n/**\n * Class used to store gfx data (like WebGLBuffer)\n */\nvar DataBuffer =\n/** @class */\nfunction () {\n  /**\n   * Constructs the buffer\n   */\n  function DataBuffer() {\n    /**\n     * Gets or sets the number of objects referencing this buffer\n     */\n    this.references = 0;\n    /** Gets or sets the size of the underlying buffer */\n\n    this.capacity = 0;\n    /**\n     * Gets or sets a boolean indicating if the buffer contains 32bits indices\n     */\n\n    this.is32Bits = false;\n    this.uniqueId = DataBuffer._Counter++;\n  }\n\n  Object.defineProperty(DataBuffer.prototype, \"underlyingResource\", {\n    /**\n     * Gets the underlying buffer\n     */\n    get: function get() {\n      return null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  DataBuffer._Counter = 0;\n  return DataBuffer;\n}();\n\nexport { DataBuffer };","map":{"version":3,"mappings":";;AAAA;;;AAGA;AAAA;AAAA;AA0BI;;;AAGA;AA1BA;;;AAGO,sBAAqB,CAArB;AACP;;AACO,oBAAmB,CAAnB;AACP;;;;AAGO,oBAAoB,KAApB;AAkBH,SAAKA,QAAL,GAAgBC,UAAU,CAACC,QAAX,EAAhB;AACH;;AAdDC,wBAAWF,oBAAX,EAAW,oBAAX,EAA6B;AAH7B;;;SAGA;AACI,aAAO,IAAP;AACH,KAF4B;qBAAA;;AAAA,GAA7B;AAhBeA,wBAAW,CAAX;AA+BnB;AAAC,CAhCD;;SAAaA","names":["uniqueId","DataBuffer","_Counter","Object"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Buffers/dataBuffer.ts"],"sourcesContent":["/**\r\n * Class used to store gfx data (like WebGLBuffer)\r\n */\r\nexport class DataBuffer {\r\n    private static _Counter = 0;\r\n\r\n    /**\r\n     * Gets or sets the number of objects referencing this buffer\r\n     */\r\n    public references: number = 0;\r\n    /** Gets or sets the size of the underlying buffer */\r\n    public capacity: number = 0;\r\n    /**\r\n     * Gets or sets a boolean indicating if the buffer contains 32bits indices\r\n     */\r\n    public is32Bits: boolean = false;\r\n\r\n    /**\r\n     * Gets the underlying buffer\r\n     */\r\n    public get underlyingResource(): any {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets the unique id of this buffer\r\n     */\r\n    public readonly uniqueId: number;\r\n\r\n    /**\r\n     * Constructs the buffer\r\n     */\r\n    constructor() {\r\n        this.uniqueId = DataBuffer._Counter++;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}