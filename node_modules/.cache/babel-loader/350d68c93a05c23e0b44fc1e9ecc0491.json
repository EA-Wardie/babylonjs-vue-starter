{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\n\n/**\n * @hidden\n **/\nvar StencilState =\n/** @class */\nfunction () {\n  function StencilState() {\n    this.reset();\n  }\n\n  StencilState.prototype.reset = function () {\n    this.enabled = false;\n    this.mask = 0xff;\n    this.func = StencilState.ALWAYS;\n    this.funcRef = 1;\n    this.funcMask = 0xff;\n    this.opStencilFail = StencilState.KEEP;\n    this.opDepthFail = StencilState.KEEP;\n    this.opStencilDepthPass = StencilState.REPLACE;\n  };\n\n  Object.defineProperty(StencilState.prototype, \"stencilFunc\", {\n    get: function get() {\n      return this.func;\n    },\n    set: function set(value) {\n      this.func = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilFuncRef\", {\n    get: function get() {\n      return this.funcRef;\n    },\n    set: function set(value) {\n      this.funcRef = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilFuncMask\", {\n    get: function get() {\n      return this.funcMask;\n    },\n    set: function set(value) {\n      this.funcMask = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilOpStencilFail\", {\n    get: function get() {\n      return this.opStencilFail;\n    },\n    set: function set(value) {\n      this.opStencilFail = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilOpDepthFail\", {\n    get: function get() {\n      return this.opDepthFail;\n    },\n    set: function set(value) {\n      this.opDepthFail = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilOpStencilDepthPass\", {\n    get: function get() {\n      return this.opStencilDepthPass;\n    },\n    set: function set(value) {\n      this.opStencilDepthPass = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilMask\", {\n    get: function get() {\n      return this.mask;\n    },\n    set: function set(value) {\n      this.mask = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilTest\", {\n    get: function get() {\n      return this.enabled;\n    },\n    set: function set(value) {\n      this.enabled = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\n\n  StencilState.ALWAYS = 519;\n  /** Passed to stencilOperation to specify that stencil value must be kept */\n\n  StencilState.KEEP = 7680;\n  /** Passed to stencilOperation to specify that stencil value must be replaced */\n\n  StencilState.REPLACE = 7681;\n  return StencilState;\n}();\n\nexport { StencilState };","map":{"version":3,"mappings":";;AAGA;;;AAGA;AAAA;AAAA;AAQI;AACI,SAAKA,KAAL;AACH;;AAEMC,iCAAP;AACI,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,IAAL,GAAY,IAAZ;AAEA,SAAKC,IAAL,GAAYH,YAAY,CAACI,MAAzB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,QAAL,GAAgB,IAAhB;AAEA,SAAKC,aAAL,GAAqBP,YAAY,CAACQ,IAAlC;AACA,SAAKC,WAAL,GAAmBT,YAAY,CAACQ,IAAhC;AACA,SAAKE,kBAAL,GAA0BV,YAAY,CAACW,OAAvC;AACH,GAXM;;AAcPC,wBAAWZ,sBAAX,EAAW,aAAX,EAAsB;SAAtB;AACI,aAAO,KAAKG,IAAZ;AACH,KAFqB;SAItB,aAAuBU,KAAvB,EAAoC;AAChC,WAAKV,IAAL,GAAYU,KAAZ;AACH,KANqB;qBAAA;;AAAA,GAAtB;AASAD,wBAAWZ,sBAAX,EAAW,gBAAX,EAAyB;SAAzB;AACI,aAAO,KAAKK,OAAZ;AACH,KAFwB;SAIzB,aAA0BQ,KAA1B,EAAuC;AACnC,WAAKR,OAAL,GAAeQ,KAAf;AACH,KANwB;qBAAA;;AAAA,GAAzB;AASAD,wBAAWZ,sBAAX,EAAW,iBAAX,EAA0B;SAA1B;AACI,aAAO,KAAKM,QAAZ;AACH,KAFyB;SAI1B,aAA2BO,KAA3B,EAAwC;AACpC,WAAKP,QAAL,GAAgBO,KAAhB;AACH,KANyB;qBAAA;;AAAA,GAA1B;AASAD,wBAAWZ,sBAAX,EAAW,sBAAX,EAA+B;SAA/B;AACI,aAAO,KAAKO,aAAZ;AACH,KAF8B;SAI/B,aAAgCM,KAAhC,EAA6C;AACzC,WAAKN,aAAL,GAAqBM,KAArB;AACH,KAN8B;qBAAA;;AAAA,GAA/B;AASAD,wBAAWZ,sBAAX,EAAW,oBAAX,EAA6B;SAA7B;AACI,aAAO,KAAKS,WAAZ;AACH,KAF4B;SAI7B,aAA8BI,KAA9B,EAA2C;AACvC,WAAKJ,WAAL,GAAmBI,KAAnB;AACH,KAN4B;qBAAA;;AAAA,GAA7B;AASAD,wBAAWZ,sBAAX,EAAW,2BAAX,EAAoC;SAApC;AACI,aAAO,KAAKU,kBAAZ;AACH,KAFmC;SAIpC,aAAqCG,KAArC,EAAkD;AAC9C,WAAKH,kBAAL,GAA0BG,KAA1B;AACH,KANmC;qBAAA;;AAAA,GAApC;AASAD,wBAAWZ,sBAAX,EAAW,aAAX,EAAsB;SAAtB;AACI,aAAO,KAAKE,IAAZ;AACH,KAFqB;SAItB,aAAuBW,KAAvB,EAAoC;AAChC,WAAKX,IAAL,GAAYW,KAAZ;AACH,KANqB;qBAAA;;AAAA,GAAtB;AASAD,wBAAWZ,sBAAX,EAAW,aAAX,EAAsB;SAAtB;AACI,aAAO,KAAKC,OAAZ;AACH,KAFqB;SAItB,aAAuBY,KAAvB,EAAqC;AACjC,WAAKZ,OAAL,GAAeY,KAAf;AACH,KANqB;qBAAA;;AAAA,GAAtB;AAxFA;;AACuBb,wBAAS,GAAT;AACvB;;AACuBA,sBAAO,IAAP;AACvB;;AACuBA,yBAAU,IAAV;AA0F3B;AAAC,CAhGD;;SAAaA","names":["reset","StencilState","enabled","mask","func","ALWAYS","funcRef","funcMask","opStencilFail","KEEP","opDepthFail","opStencilDepthPass","REPLACE","Object","value"],"sourceRoot":"","sources":["../../../../../lts/core/generated/States/stencilState.ts"],"sourcesContent":["import { Constants } from \"../Engines/constants\";\r\nimport type { IStencilState } from \"./IStencilState\";\r\n\r\n/**\r\n * @hidden\r\n **/\r\nexport class StencilState implements IStencilState {\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\r\n    public static readonly ALWAYS = Constants.ALWAYS;\r\n    /** Passed to stencilOperation to specify that stencil value must be kept */\r\n    public static readonly KEEP = Constants.KEEP;\r\n    /** Passed to stencilOperation to specify that stencil value must be replaced */\r\n    public static readonly REPLACE = Constants.REPLACE;\r\n\r\n    public constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.enabled = false;\r\n        this.mask = 0xff;\r\n\r\n        this.func = StencilState.ALWAYS;\r\n        this.funcRef = 1;\r\n        this.funcMask = 0xff;\r\n\r\n        this.opStencilFail = StencilState.KEEP;\r\n        this.opDepthFail = StencilState.KEEP;\r\n        this.opStencilDepthPass = StencilState.REPLACE;\r\n    }\r\n\r\n    public func: number;\r\n    public get stencilFunc(): number {\r\n        return this.func;\r\n    }\r\n\r\n    public set stencilFunc(value: number) {\r\n        this.func = value;\r\n    }\r\n\r\n    public funcRef: number;\r\n    public get stencilFuncRef(): number {\r\n        return this.funcRef;\r\n    }\r\n\r\n    public set stencilFuncRef(value: number) {\r\n        this.funcRef = value;\r\n    }\r\n\r\n    public funcMask: number;\r\n    public get stencilFuncMask(): number {\r\n        return this.funcMask;\r\n    }\r\n\r\n    public set stencilFuncMask(value: number) {\r\n        this.funcMask = value;\r\n    }\r\n\r\n    public opStencilFail: number;\r\n    public get stencilOpStencilFail(): number {\r\n        return this.opStencilFail;\r\n    }\r\n\r\n    public set stencilOpStencilFail(value: number) {\r\n        this.opStencilFail = value;\r\n    }\r\n\r\n    public opDepthFail: number;\r\n    public get stencilOpDepthFail(): number {\r\n        return this.opDepthFail;\r\n    }\r\n\r\n    public set stencilOpDepthFail(value: number) {\r\n        this.opDepthFail = value;\r\n    }\r\n\r\n    public opStencilDepthPass: number;\r\n    public get stencilOpStencilDepthPass(): number {\r\n        return this.opStencilDepthPass;\r\n    }\r\n\r\n    public set stencilOpStencilDepthPass(value: number) {\r\n        this.opStencilDepthPass = value;\r\n    }\r\n\r\n    public mask: number;\r\n    public get stencilMask(): number {\r\n        return this.mask;\r\n    }\r\n\r\n    public set stencilMask(value: number) {\r\n        this.mask = value;\r\n    }\r\n\r\n    public enabled: boolean;\r\n    public get stencilTest(): boolean {\r\n        return this.enabled;\r\n    }\r\n\r\n    public set stencilTest(value: boolean) {\r\n        this.enabled = value;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}