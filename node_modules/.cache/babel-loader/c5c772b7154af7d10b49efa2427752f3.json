{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to compute arc tangent of 2 values\n */\n\nvar ArcTan2Block =\n/** @class */\nfunction (_super) {\n  __extends(ArcTan2Block, _super);\n  /**\n   * Creates a new ArcTan2Block\n   * @param name defines the block name\n   */\n\n\n  function ArcTan2Block(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerInput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  ArcTan2Block.prototype.getClassName = function () {\n    return \"ArcTan2Block\";\n  };\n\n  Object.defineProperty(ArcTan2Block.prototype, \"x\", {\n    /**\n     * Gets the x operand input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ArcTan2Block.prototype, \"y\", {\n    /**\n     * Gets the y operand input component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ArcTan2Block.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ArcTan2Block.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + \" = atan(\".concat(this.x.associatedVariableName, \", \").concat(this.y.associatedVariableName, \");\\r\\n\");\n    return this;\n  };\n\n  return ArcTan2Block;\n}(NodeMaterialBlock);\n\nexport { ArcTan2Block };\nRegisterClass(\"BABYLON.ArcTan2Block\", ArcTan2Block);","map":{"version":3,"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,yBAAlC;AACA,SAASC,qCAAT,QAAsD,mDAAtD;AAGA,SAASC,wBAAT,QAAyC,sCAAzC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA;;;;AAGA;AAAA;AAAA;AAAkCC;AAC9B;;;;;;AAIA,wBAAmBC,IAAnB,EAA+B;AAA/B,gBACIC,kBAAMD,IAAN,EAAYH,wBAAwB,CAACK,OAArC,KAA6C,IADjD;;AAGIC,SAAI,CAACC,aAAL,CAAmB,GAAnB,EAAwBR,qCAAqC,CAACS,KAA9D;;AACAF,SAAI,CAACC,aAAL,CAAmB,GAAnB,EAAwBR,qCAAqC,CAACS,KAA9D;;AACAF,SAAI,CAACG,cAAL,CAAoB,QAApB,EAA8BV,qCAAqC,CAACS,KAApE;;;AACH;AAED;;;;;;AAIOE,wCAAP;AACI,WAAO,cAAP;AACH,GAFM;;AAOPC,wBAAWD,sBAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA;AACI,aAAO,KAAKE,OAAL,CAAa,CAAb,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAOAD,wBAAWD,sBAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA;AACI,aAAO,KAAKE,OAAL,CAAa,CAAb,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAOAD,wBAAWD,sBAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA;AACI,aAAO,KAAKG,QAAL,CAAc,CAAd,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;;AAIUH,uCAAV,UAAsBI,KAAtB,EAAmD;AAC/CV,qBAAMW,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBF,KAAlB;;AAEA,QAAMG,MAAM,GAAG,KAAKJ,QAAL,CAAc,CAAd,CAAf;AAEAC,SAAK,CAACI,iBAAN,IAA2B,KAAKC,cAAL,CAAoBF,MAApB,EAA4BH,KAA5B,IAAqC,kBAAW,KAAKM,CAAL,CAAOC,sBAAlB,EAAwC,IAAxC,EAAwCC,MAAxC,CAA6C,KAAKC,CAAL,CAAOF,sBAApD,EAA0E,QAA1E,CAAhE;AAEA,WAAO,IAAP;AACH,GARS;;AASd;AAAC,CAnDD,CAAkCvB,iBAAlC;;;AAqDAG,aAAa,CAAC,sBAAD,EAAyBS,YAAzB,CAAb","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Neutral","_this","registerInput","Float","registerOutput","ArcTan2Block","Object","_inputs","_outputs","state","_buildBlock","call","output","compilationString","_declareOutput","x","associatedVariableName","concat","y"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/arcTan2Block.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * Block used to compute arc tangent of 2 values\r\n */\r\nexport class ArcTan2Block extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new ArcTan2Block\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerInput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"ArcTan2Block\";\r\n    }\r\n\r\n    /**\r\n     * Gets the x operand input component\r\n     */\r\n    public get x(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the y operand input component\r\n     */\r\n    public get y(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        state.compilationString += this._declareOutput(output, state) + ` = atan(${this.x.associatedVariableName}, ${this.y.associatedVariableName});\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.ArcTan2Block\", ArcTan2Block);\r\n"]},"metadata":{},"sourceType":"module"}