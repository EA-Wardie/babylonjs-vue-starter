{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PostProcess } from \"./postProcess.js\";\nimport \"../Shaders/anaglyph.fragment.js\";\nimport { RegisterClass } from \"../Misc/typeStore.js\";\n/**\n * Postprocess used to generate anaglyphic rendering\n */\n\nvar AnaglyphPostProcess =\n/** @class */\nfunction (_super) {\n  __extends(AnaglyphPostProcess, _super);\n  /**\n   * Creates a new AnaglyphPostProcess\n   * @param name defines postprocess name\n   * @param options defines creation options or target ratio scale\n   * @param rigCameras defines cameras using this postprocess\n   * @param samplingMode defines required sampling mode (BABYLON.Texture.NEAREST_SAMPLINGMODE by default)\n   * @param engine defines hosting engine\n   * @param reusable defines if the postprocess will be reused multiple times per frame\n   */\n\n\n  function AnaglyphPostProcess(name, options, rigCameras, samplingMode, engine, reusable) {\n    var _this = _super.call(this, name, \"anaglyph\", null, [\"leftSampler\"], options, rigCameras[1], samplingMode, engine, reusable) || this;\n\n    _this._passedProcess = rigCameras[0]._rigPostProcess;\n\n    _this.onApplyObservable.add(function (effect) {\n      effect.setTextureFromPostProcess(\"leftSampler\", _this._passedProcess);\n    });\n\n    return _this;\n  }\n  /**\n   * Gets a string identifying the name of the class\n   * @returns \"AnaglyphPostProcess\" string\n   */\n\n\n  AnaglyphPostProcess.prototype.getClassName = function () {\n    return \"AnaglyphPostProcess\";\n  };\n\n  return AnaglyphPostProcess;\n}(PostProcess);\n\nexport { AnaglyphPostProcess };\nRegisterClass(\"BABYLON.AnaglyphPostProcess\", AnaglyphPostProcess);","map":{"version":3,"mappings":";AAGA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,OAAO,iCAAP;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA;;;;AAGA;AAAA;AAAA;AAAyCC;AAWrC;;;;;;;;;;;AASA,+BAAYC,IAAZ,EAA0BC,OAA1B,EAAgEC,UAAhE,EAAsFC,YAAtF,EAA6GC,MAA7G,EAA8HC,QAA9H,EAAgJ;AAAhJ,gBACIC,kBAAMN,IAAN,EAAY,UAAZ,EAAwB,IAAxB,EAA8B,CAAC,aAAD,CAA9B,EAA+CC,OAA/C,EAAwDC,UAAU,CAAC,CAAD,CAAlE,EAAuEC,YAAvE,EAAqFC,MAArF,EAA6FC,QAA7F,KAAsG,IAD1G;;AAEIE,SAAI,CAACC,cAAL,GAAsBN,UAAU,CAAC,CAAD,CAAV,CAAcO,eAApC;;AAEAF,SAAI,CAACG,iBAAL,CAAuBC,GAAvB,CAA2B,UAACC,MAAD,EAAe;AACtCA,YAAM,CAACC,yBAAP,CAAiC,aAAjC,EAAgDN,KAAI,CAACC,cAArD;AACH,KAFD;;;AAGH;AAxBD;;;;;;AAIOM,+CAAP;AACI,WAAO,qBAAP;AACH,GAFM;;AAqBX;AAAC,CA5BD,CAAyCjB,WAAzC;;;AA8BAC,aAAa,CAAC,6BAAD,EAAgCgB,mBAAhC,CAAb","names":["PostProcess","RegisterClass","__extends","name","options","rigCameras","samplingMode","engine","reusable","_super","_this","_passedProcess","_rigPostProcess","onApplyObservable","add","effect","setTextureFromPostProcess","AnaglyphPostProcess"],"sourceRoot":"","sources":["../../../../../lts/core/generated/PostProcesses/anaglyphPostProcess.ts"],"sourcesContent":["import type { Nullable } from \"../types\";\r\nimport type { Engine } from \"../Engines/engine\";\r\nimport type { PostProcessOptions } from \"./postProcess\";\r\nimport { PostProcess } from \"./postProcess\";\r\nimport type { Camera } from \"../Cameras/camera\";\r\nimport type { Effect } from \"../Materials/effect\";\r\n\r\nimport \"../Shaders/anaglyph.fragment\";\r\nimport { RegisterClass } from \"../Misc/typeStore\";\r\n\r\n/**\r\n * Postprocess used to generate anaglyphic rendering\r\n */\r\nexport class AnaglyphPostProcess extends PostProcess {\r\n    private _passedProcess: Nullable<PostProcess>;\r\n\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"AnaglyphPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"AnaglyphPostProcess\";\r\n    }\r\n\r\n    /**\r\n     * Creates a new AnaglyphPostProcess\r\n     * @param name defines postprocess name\r\n     * @param options defines creation options or target ratio scale\r\n     * @param rigCameras defines cameras using this postprocess\r\n     * @param samplingMode defines required sampling mode (BABYLON.Texture.NEAREST_SAMPLINGMODE by default)\r\n     * @param engine defines hosting engine\r\n     * @param reusable defines if the postprocess will be reused multiple times per frame\r\n     */\r\n    constructor(name: string, options: number | PostProcessOptions, rigCameras: Camera[], samplingMode?: number, engine?: Engine, reusable?: boolean) {\r\n        super(name, \"anaglyph\", null, [\"leftSampler\"], options, rigCameras[1], samplingMode, engine, reusable);\r\n        this._passedProcess = rigCameras[0]._rigPostProcess;\r\n\r\n        this.onApplyObservable.add((effect: Effect) => {\r\n            effect.setTextureFromPostProcess(\"leftSampler\", this._passedProcess);\r\n        });\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.AnaglyphPostProcess\", AnaglyphPostProcess);\r\n"]},"metadata":{},"sourceType":"module"}