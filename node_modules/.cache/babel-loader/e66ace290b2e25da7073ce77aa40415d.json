{"ast":null,"code":"import { DetailMapConfiguration } from \"./material.detailMapConfiguration.js\";\nimport { PBRAnisotropicConfiguration } from \"./PBR/pbrAnisotropicConfiguration.js\";\nimport { PBRBaseMaterial } from \"./PBR/pbrBaseMaterial.js\";\nimport { PBRBRDFConfiguration } from \"./PBR/pbrBRDFConfiguration.js\";\nimport { PBRClearCoatConfiguration } from \"./PBR/pbrClearCoatConfiguration.js\";\nimport { PBRIridescenceConfiguration } from \"./PBR/pbrIridescenceConfiguration.js\";\nimport { PBRSheenConfiguration } from \"./PBR/pbrSheenConfiguration.js\";\nimport { PBRSubSurfaceConfiguration } from \"./PBR/pbrSubSurfaceConfiguration.js\";\nimport { StandardMaterial } from \"./standardMaterial.js\";\n/**\n * Creates an instance of the anisotropic plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\n\nexport function createPBRAnisotropicPlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRAnisotropicConfiguration(material);\n  }\n\n  return null;\n}\n/**\n * Creates an instance of the brdf plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\n\nexport function createPBRBRDFPlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRBRDFConfiguration(material);\n  }\n\n  return null;\n}\n/**\n * Creates an instance of the clear coat plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\n\nexport function createPBRClearCoatPlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRClearCoatConfiguration(material);\n  }\n\n  return null;\n}\n/**\n * Creates an instance of the iridescence plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\n\nexport function createPBRIridescencePlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRIridescenceConfiguration(material);\n  }\n\n  return null;\n}\n/**\n * Creates an instance of the sheen plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\n\nexport function createPBRSheenPlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRSheenConfiguration(material);\n  }\n\n  return null;\n}\n/**\n * Creates an instance of the sub surface plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\n\nexport function createPBRSubSurfacePlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRSubSurfaceConfiguration(material);\n  }\n\n  return null;\n}\n/**\n * Creates an instance of the detail map plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\n\nexport function createDetailMapPlugin(material) {\n  if (material instanceof PBRBaseMaterial || material instanceof StandardMaterial) {\n    return new DetailMapConfiguration(material);\n  }\n\n  return null;\n}","map":{"version":3,"mappings":"AACA,SAASA,sBAAT,QAAuC,sCAAvC;AAEA,SAASC,2BAAT,QAA4C,sCAA5C;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AACA,SAASC,2BAAT,QAA4C,sCAA5C;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,SAASC,0BAAT,QAA2C,qCAA3C;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AAIA;;;;;;AAKA,OAAM,SAAUC,0BAAV,CAAqCC,QAArC,EAAuD;AACzD,MAAIA,QAAQ,YAAYR,eAAxB,EAAyC;AACrC,WAAO,IAAID,2BAAJ,CAAgCS,QAAhC,CAAP;AACH;;AACD,SAAO,IAAP;AACH;AAED;;;;;;AAKA,OAAM,SAAUC,mBAAV,CAA8BD,QAA9B,EAAgD;AAClD,MAAIA,QAAQ,YAAYR,eAAxB,EAAyC;AACrC,WAAO,IAAIC,oBAAJ,CAAyBO,QAAzB,CAAP;AACH;;AACD,SAAO,IAAP;AACH;AAED;;;;;;AAKA,OAAM,SAAUE,wBAAV,CAAmCF,QAAnC,EAAqD;AACvD,MAAIA,QAAQ,YAAYR,eAAxB,EAAyC;AACrC,WAAO,IAAIE,yBAAJ,CAA8BM,QAA9B,CAAP;AACH;;AACD,SAAO,IAAP;AACH;AAED;;;;;;AAKA,OAAM,SAAUG,0BAAV,CAAqCH,QAArC,EAAuD;AACzD,MAAIA,QAAQ,YAAYR,eAAxB,EAAyC;AACrC,WAAO,IAAIG,2BAAJ,CAAgCK,QAAhC,CAAP;AACH;;AACD,SAAO,IAAP;AACH;AAED;;;;;;AAKA,OAAM,SAAUI,oBAAV,CAA+BJ,QAA/B,EAAiD;AACnD,MAAIA,QAAQ,YAAYR,eAAxB,EAAyC;AACrC,WAAO,IAAII,qBAAJ,CAA0BI,QAA1B,CAAP;AACH;;AACD,SAAO,IAAP;AACH;AAED;;;;;;AAKA,OAAM,SAAUK,yBAAV,CAAoCL,QAApC,EAAsD;AACxD,MAAIA,QAAQ,YAAYR,eAAxB,EAAyC;AACrC,WAAO,IAAIK,0BAAJ,CAA+BG,QAA/B,CAAP;AACH;;AACD,SAAO,IAAP;AACH;AAED;;;;;;AAKA,OAAM,SAAUM,qBAAV,CAAgCN,QAAhC,EAAkD;AACpD,MAAIA,QAAQ,YAAYR,eAApB,IAAuCQ,QAAQ,YAAYF,gBAA/D,EAAiF;AAC7E,WAAO,IAAIR,sBAAJ,CAA2BU,QAA3B,CAAP;AACH;;AACD,SAAO,IAAP;AACH","names":["DetailMapConfiguration","PBRAnisotropicConfiguration","PBRBaseMaterial","PBRBRDFConfiguration","PBRClearCoatConfiguration","PBRIridescenceConfiguration","PBRSheenConfiguration","PBRSubSurfaceConfiguration","StandardMaterial","createPBRAnisotropicPlugin","material","createPBRBRDFPlugin","createPBRClearCoatPlugin","createPBRIridescencePlugin","createPBRSheenPlugin","createPBRSubSurfacePlugin","createDetailMapPlugin"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Materials/materialPluginFactoryExport.ts"],"sourcesContent":["import type { Nullable } from \"../types\";\r\nimport { DetailMapConfiguration } from \"./material.detailMapConfiguration\";\r\nimport type { MaterialPluginBase } from \"./materialPluginBase\";\r\nimport { PBRAnisotropicConfiguration } from \"./PBR/pbrAnisotropicConfiguration\";\r\nimport { PBRBaseMaterial } from \"./PBR/pbrBaseMaterial\";\r\nimport { PBRBRDFConfiguration } from \"./PBR/pbrBRDFConfiguration\";\r\nimport { PBRClearCoatConfiguration } from \"./PBR/pbrClearCoatConfiguration\";\r\nimport { PBRIridescenceConfiguration } from \"./PBR/pbrIridescenceConfiguration\";\r\nimport { PBRSheenConfiguration } from \"./PBR/pbrSheenConfiguration\";\r\nimport { PBRSubSurfaceConfiguration } from \"./PBR/pbrSubSurfaceConfiguration\";\r\nimport { StandardMaterial } from \"./standardMaterial\";\r\n\r\ndeclare type Material = import(\"./material\").Material;\r\n\r\n/**\r\n * Creates an instance of the anisotropic plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRAnisotropicPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRAnisotropicConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the brdf plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRBRDFPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRBRDFConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the clear coat plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRClearCoatPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRClearCoatConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the iridescence plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRIridescencePlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRIridescenceConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the sheen plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRSheenPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRSheenConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the sub surface plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRSubSurfacePlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRSubSurfaceConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the detail map plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createDetailMapPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial || material instanceof StandardMaterial) {\r\n        return new DetailMapConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}