{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager.js\";\n/**\n * A generic hand controller class that supports select and a secondary grasp\n */\n\nvar WebXRGenericHandController =\n/** @class */\nfunction (_super) {\n  __extends(WebXRGenericHandController, _super);\n  /**\n   * Create a new hand controller object, without loading a controller model\n   * @param scene the scene to use to create this controller\n   * @param gamepadObject the corresponding gamepad object\n   * @param handedness the handedness of the controller\n   */\n\n\n  function WebXRGenericHandController(scene, gamepadObject, handedness) {\n    var _this = // Don't load the controller model - for now, hands have no real model.\n    _super.call(this, scene, GenericHandSelectGraspProfile[handedness], gamepadObject, handedness, true) || this;\n\n    _this.profileId = \"generic-hand-select-grasp\";\n    return _this;\n  }\n\n  WebXRGenericHandController.prototype._getFilenameAndPath = function () {\n    return {\n      filename: \"generic.babylon\",\n      path: \"https://controllers.babylonjs.com/generic/\"\n    };\n  };\n\n  WebXRGenericHandController.prototype._getModelLoadingConstraints = function () {\n    return true;\n  };\n\n  WebXRGenericHandController.prototype._processLoadedModel = function (_meshes) {// no-op\n  };\n\n  WebXRGenericHandController.prototype._setRootMesh = function (meshes) {// no-op\n  };\n\n  WebXRGenericHandController.prototype._updateModel = function () {// no-op\n  };\n\n  return WebXRGenericHandController;\n}(WebXRAbstractMotionController);\n\nexport { WebXRGenericHandController }; // register the profiles\n\nWebXRMotionControllerManager.RegisterController(\"generic-hand-select-grasp\", function (xrInput, scene) {\n  return new WebXRGenericHandController(scene, xrInput.gamepad, xrInput.handedness);\n}); // https://github.com/immersive-web/webxr-input-profiles/blob/main/packages/registry/profiles/generic/generic-hand-select-grasp.json\n\nvar GenericHandSelectGraspProfile = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr-standard-trigger\",\n        visualResponses: {}\n      },\n      grasp: {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"grasp\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-hand-select-grasp-left\",\n    assetPath: \"left.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr-standard-trigger\",\n        visualResponses: {}\n      },\n      grasp: {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"grasp\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-hand-select-grasp-right\",\n    assetPath: \"right.glb\"\n  },\n  none: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr-standard-trigger\",\n        visualResponses: {}\n      },\n      grasp: {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"grasp\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-hand-select-grasp-none\",\n    assetPath: \"none.glb\"\n  }\n};","map":{"version":3,"mappings":"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","names":["WebXRAbstractMotionController","WebXRMotionControllerManager","__extends","scene","gamepadObject","handedness","_super","GenericHandSelectGraspProfile","_this","WebXRGenericHandController","filename","path","_meshes","meshes","RegisterController","xrInput","gamepad","left","selectComponentId","components","type","gamepadIndices","button","rootNodeName","visualResponses","grasp","gamepadMapping","assetPath","right","none"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/XR/motionController/webXRGenericHandController.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport type { IMotionControllerLayoutMap, IMinimalMotionControllerObject, MotionControllerHandedness } from \"./webXRAbstractMotionController\";\r\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\r\nimport type { Scene } from \"../../scene\";\r\nimport type { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager\";\r\n\r\n/**\r\n * A generic hand controller class that supports select and a secondary grasp\r\n */\r\nexport class WebXRGenericHandController extends WebXRAbstractMotionController {\r\n    public profileId = \"generic-hand-select-grasp\";\r\n\r\n    /**\r\n     * Create a new hand controller object, without loading a controller model\r\n     * @param scene the scene to use to create this controller\r\n     * @param gamepadObject the corresponding gamepad object\r\n     * @param handedness the handedness of the controller\r\n     */\r\n    constructor(scene: Scene, gamepadObject: IMinimalMotionControllerObject, handedness: MotionControllerHandedness) {\r\n        // Don't load the controller model - for now, hands have no real model.\r\n        super(scene, GenericHandSelectGraspProfile[handedness], gamepadObject, handedness, true);\r\n    }\r\n\r\n    protected _getFilenameAndPath(): { filename: string; path: string } {\r\n        return {\r\n            filename: \"generic.babylon\",\r\n            path: \"https://controllers.babylonjs.com/generic/\",\r\n        };\r\n    }\r\n\r\n    protected _getModelLoadingConstraints(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected _processLoadedModel(_meshes: AbstractMesh[]): void {\r\n        // no-op\r\n    }\r\n\r\n    protected _setRootMesh(meshes: AbstractMesh[]): void {\r\n        // no-op\r\n    }\r\n\r\n    protected _updateModel(): void {\r\n        // no-op\r\n    }\r\n}\r\n\r\n// register the profiles\r\nWebXRMotionControllerManager.RegisterController(\"generic-hand-select-grasp\", (xrInput: XRInputSource, scene: Scene) => {\r\n    return new WebXRGenericHandController(scene, <any>xrInput.gamepad, xrInput.handedness);\r\n});\r\n\r\n// https://github.com/immersive-web/webxr-input-profiles/blob/main/packages/registry/profiles/generic/generic-hand-select-grasp.json\r\nconst GenericHandSelectGraspProfile: IMotionControllerLayoutMap = {\r\n    left: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr-standard-trigger\",\r\n                visualResponses: {},\r\n            },\r\n            grasp: {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"grasp\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-hand-select-grasp-left\",\r\n        assetPath: \"left.glb\",\r\n    },\r\n    right: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr-standard-trigger\",\r\n                visualResponses: {},\r\n            },\r\n            grasp: {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"grasp\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-hand-select-grasp-right\",\r\n        assetPath: \"right.glb\",\r\n    },\r\n    none: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr-standard-trigger\",\r\n                visualResponses: {},\r\n            },\r\n            grasp: {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"grasp\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-hand-select-grasp-none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}