{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used to make gl_FragCoord available\n */\n\nvar FragCoordBlock =\n/** @class */\nfunction (_super) {\n  __extends(FragCoordBlock, _super);\n  /**\n   * Creates a new FragCoordBlock\n   * @param name defines the block name\n   */\n\n\n  function FragCoordBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n\n    _this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  FragCoordBlock.prototype.getClassName = function () {\n    return \"FragCoordBlock\";\n  };\n\n  Object.defineProperty(FragCoordBlock.prototype, \"xy\", {\n    /**\n     * Gets the xy component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"xyz\", {\n    /**\n     * Gets the xyz component\n     */\n    get: function get() {\n      return this._outputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"xyzw\", {\n    /**\n     * Gets the xyzw component\n     */\n    get: function get() {\n      return this._outputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"x\", {\n    /**\n     * Gets the x component\n     */\n    get: function get() {\n      return this._outputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"y\", {\n    /**\n     * Gets the y component\n     */\n    get: function get() {\n      return this._outputs[4];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"z\", {\n    /**\n     * Gets the z component\n     */\n    get: function get() {\n      return this._outputs[5];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"output\", {\n    /**\n     * Gets the w component\n     */\n    get: function get() {\n      return this._outputs[6];\n    },\n    enumerable: false,\n    configurable: true\n  }); // eslint-disable-next-line @typescript-eslint/naming-convention\n\n  FragCoordBlock.prototype.writeOutputs = function (state) {\n    var code = \"\";\n\n    for (var _i = 0, _a = this._outputs; _i < _a.length; _i++) {\n      var output = _a[_i];\n\n      if (output.hasEndpoints) {\n        code += \"\".concat(this._declareOutput(output, state), \" = gl_FragCoord.\").concat(output.name, \";\\r\\n\");\n      }\n    }\n\n    return code;\n  };\n\n  FragCoordBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    if (state.target === NodeMaterialBlockTargets.Vertex) {\n      throw \"FragCoordBlock must only be used in a fragment shader\";\n    }\n\n    state.compilationString += this.writeOutputs(state);\n    return this;\n  };\n\n  return FragCoordBlock;\n}(NodeMaterialBlock);\n\nexport { FragCoordBlock };\nRegisterClass(\"BABYLON.FragCoordBlock\", FragCoordBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Fragment","_this","registerOutput","Vector2","Vector3","Vector4","Float","FragCoordBlock","Object","_outputs","state","code","_i","output","hasEndpoints","_declareOutput","concat","_buildBlock","call","target","Vertex","compilationString","writeOutputs"],"sourceRoot":"","sources":["../../../../../../../../lts/core/generated/Materials/Node/Blocks/Fragment/fragCoordBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\n\r\n/**\r\n * Block used to make gl_FragCoord available\r\n */\r\nexport class FragCoordBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new FragCoordBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Fragment);\r\n\r\n        this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"FragCoordBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the xy component\r\n     */\r\n    public get xy(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyz component\r\n     */\r\n    public get xyz(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyzw component\r\n     */\r\n    public get xyzw(): NodeMaterialConnectionPoint {\r\n        return this._outputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the x component\r\n     */\r\n    public get x(): NodeMaterialConnectionPoint {\r\n        return this._outputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the y component\r\n     */\r\n    public get y(): NodeMaterialConnectionPoint {\r\n        return this._outputs[4];\r\n    }\r\n\r\n    /**\r\n     * Gets the z component\r\n     */\r\n    public get z(): NodeMaterialConnectionPoint {\r\n        return this._outputs[5];\r\n    }\r\n\r\n    /**\r\n     * Gets the w component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[6];\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    protected writeOutputs(state: NodeMaterialBuildState): string {\r\n        let code = \"\";\r\n\r\n        for (const output of this._outputs) {\r\n            if (output.hasEndpoints) {\r\n                code += `${this._declareOutput(output, state)} = gl_FragCoord.${output.name};\\r\\n`;\r\n            }\r\n        }\r\n\r\n        return code;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        if (state.target === NodeMaterialBlockTargets.Vertex) {\r\n            throw \"FragCoordBlock must only be used in a fragment shader\";\r\n        }\r\n\r\n        state.compilationString += this.writeOutputs(state);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.FragCoordBlock\", FragCoordBlock);\r\n"]},"metadata":{},"sourceType":"module"}