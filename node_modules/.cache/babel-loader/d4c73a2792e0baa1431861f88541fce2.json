{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { Scene } from \"../scene.js\";\nimport { SceneComponentConstants } from \"../sceneComponent.js\";\nimport { GamepadManager } from \"./gamepadManager.js\";\nimport { FreeCameraInputsManager } from \"../Cameras/freeCameraInputsManager.js\";\nimport { FreeCameraGamepadInput } from \"../Cameras/Inputs/freeCameraGamepadInput.js\";\nimport { ArcRotateCameraInputsManager } from \"../Cameras/arcRotateCameraInputsManager.js\";\nimport { ArcRotateCameraGamepadInput } from \"../Cameras/Inputs/arcRotateCameraGamepadInput.js\";\nObject.defineProperty(Scene.prototype, \"gamepadManager\", {\n  get: function get() {\n    if (!this._gamepadManager) {\n      this._gamepadManager = new GamepadManager(this);\n\n      var component = this._getComponent(SceneComponentConstants.NAME_GAMEPAD);\n\n      if (!component) {\n        component = new GamepadSystemSceneComponent(this);\n\n        this._addComponent(component);\n      }\n    }\n\n    return this._gamepadManager;\n  },\n  enumerable: true,\n  configurable: true\n});\n/**\n * Adds a gamepad to the free camera inputs manager\n */\n\nFreeCameraInputsManager.prototype.addGamepad = function () {\n  this.add(new FreeCameraGamepadInput());\n  return this;\n};\n/**\n * Adds a gamepad to the arc rotate camera inputs manager\n */\n\n\nArcRotateCameraInputsManager.prototype.addGamepad = function () {\n  this.add(new ArcRotateCameraGamepadInput());\n  return this;\n};\n/**\n * Defines the gamepad scene component responsible to manage gamepads in a given scene\n */\n\n\nvar GamepadSystemSceneComponent =\n/** @class */\nfunction () {\n  /**\n   * Creates a new instance of the component for the given scene\n   * @param scene Defines the scene to register the component in\n   */\n  function GamepadSystemSceneComponent(scene) {\n    /**\n     * The component name helpfull to identify the component in the list of scene components.\n     */\n    this.name = SceneComponentConstants.NAME_GAMEPAD;\n    this.scene = scene;\n  }\n  /**\n   * Registers the component in a given scene\n   */\n\n\n  GamepadSystemSceneComponent.prototype.register = function () {\n    this.scene._beforeCameraUpdateStage.registerStep(SceneComponentConstants.STEP_BEFORECAMERAUPDATE_GAMEPAD, this, this._beforeCameraUpdate);\n  };\n  /**\n   * Rebuilds the elements related to this component in case of\n   * context lost for instance.\n   */\n\n\n  GamepadSystemSceneComponent.prototype.rebuild = function () {// Nothing to do for gamepads\n  };\n  /**\n   * Disposes the component and the associated resources\n   */\n\n\n  GamepadSystemSceneComponent.prototype.dispose = function () {\n    var gamepadManager = this.scene._gamepadManager;\n\n    if (gamepadManager) {\n      gamepadManager.dispose();\n      this.scene._gamepadManager = null;\n    }\n  };\n\n  GamepadSystemSceneComponent.prototype._beforeCameraUpdate = function () {\n    var gamepadManager = this.scene._gamepadManager;\n\n    if (gamepadManager && gamepadManager._isMonitoring) {\n      gamepadManager._checkGamepadsStatus();\n    }\n  };\n\n  return GamepadSystemSceneComponent;\n}();\n\nexport { GamepadSystemSceneComponent };","map":{"version":3,"mappings":";;AACA,SAASA,KAAT,QAAsB,aAAtB;AAEA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,SAASC,uBAAT,QAAwC,uCAAxC;AACA,SAASC,sBAAT,QAAuC,6CAAvC;AACA,SAASC,4BAAT,QAA6C,4CAA7C;AACA,SAASC,2BAAT,QAA4C,kDAA5C;AAeAC,MAAM,CAACC,cAAP,CAAsBR,KAAK,CAACS,SAA5B,EAAuC,gBAAvC,EAAyD;AACrDC,KAAG,EAAE;AACD,QAAI,CAAC,KAAKC,eAAV,EAA2B;AACvB,WAAKA,eAAL,GAAuB,IAAIT,cAAJ,CAAmB,IAAnB,CAAvB;;AACA,UAAIU,SAAS,GAAG,KAAKC,aAAL,CAAmBZ,uBAAuB,CAACa,YAA3C,CAAhB;;AACA,UAAI,CAACF,SAAL,EAAgB;AACZA,iBAAS,GAAG,IAAIG,2BAAJ,CAAgC,IAAhC,CAAZ;;AACA,aAAKC,aAAL,CAAmBJ,SAAnB;AACH;AACJ;;AAED,WAAO,KAAKD,eAAZ;AACH,GAZoD;AAarDM,YAAU,EAAE,IAbyC;AAcrDC,cAAY,EAAE;AAduC,CAAzD;AA8BA;;;;AAGAf,uBAAuB,CAACM,SAAxB,CAAkCU,UAAlC,GAA+C;AAC3C,OAAKC,GAAL,CAAS,IAAIhB,sBAAJ,EAAT;AACA,SAAO,IAAP;AACH,CAHD;AAkBA;;;;;AAGAC,4BAA4B,CAACI,SAA7B,CAAuCU,UAAvC,GAAoD;AAChD,OAAKC,GAAL,CAAS,IAAId,2BAAJ,EAAT;AACA,SAAO,IAAP;AACH,CAHD;AAKA;;;;;AAGA;AAAA;AAAA;AAWI;;;;AAIA,uCAAYe,KAAZ,EAAwB;AAdxB;;;AAGgB,gBAAOpB,uBAAuB,CAACa,YAA/B;AAYZ,SAAKO,KAAL,GAAaA,KAAb;AACH;AAED;;;;;AAGON,mDAAP;AACI,SAAKM,KAAL,CAAWC,wBAAX,CAAoCC,YAApC,CAAiDtB,uBAAuB,CAACuB,+BAAzE,EAA0G,IAA1G,EAAgH,KAAKC,mBAArH;AACH,GAFM;AAIP;;;;;;AAIOV,kDAAP,aACI;AACH,GAFM;AAIP;;;;;AAGOA,kDAAP;AACI,QAAMW,cAAc,GAAG,KAAKL,KAAL,CAAWV,eAAlC;;AACA,QAAIe,cAAJ,EAAoB;AAChBA,oBAAc,CAACC,OAAf;AACA,WAAKN,KAAL,CAAWV,eAAX,GAA6B,IAA7B;AACH;AACJ,GANM;;AAQCI,8DAAR;AACI,QAAMW,cAAc,GAAG,KAAKL,KAAL,CAAWV,eAAlC;;AAEA,QAAIe,cAAc,IAAIA,cAAc,CAACE,aAArC,EAAoD;AAChDF,oBAAc,CAACG,oBAAf;AACH;AACJ,GANO;;AAOZ;AAAC,CApDD","names":["Scene","SceneComponentConstants","GamepadManager","FreeCameraInputsManager","FreeCameraGamepadInput","ArcRotateCameraInputsManager","ArcRotateCameraGamepadInput","Object","defineProperty","prototype","get","_gamepadManager","component","_getComponent","NAME_GAMEPAD","GamepadSystemSceneComponent","_addComponent","enumerable","configurable","addGamepad","add","scene","_beforeCameraUpdateStage","registerStep","STEP_BEFORECAMERAUPDATE_GAMEPAD","_beforeCameraUpdate","gamepadManager","dispose","_isMonitoring","_checkGamepadsStatus"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Gamepads/gamepadSceneComponent.ts"],"sourcesContent":["import type { Nullable } from \"../types\";\r\nimport { Scene } from \"../scene\";\r\nimport type { ISceneComponent } from \"../sceneComponent\";\r\nimport { SceneComponentConstants } from \"../sceneComponent\";\r\nimport { GamepadManager } from \"./gamepadManager\";\r\n\r\nimport { FreeCameraInputsManager } from \"../Cameras/freeCameraInputsManager\";\r\nimport { FreeCameraGamepadInput } from \"../Cameras/Inputs/freeCameraGamepadInput\";\r\nimport { ArcRotateCameraInputsManager } from \"../Cameras/arcRotateCameraInputsManager\";\r\nimport { ArcRotateCameraGamepadInput } from \"../Cameras/Inputs/arcRotateCameraGamepadInput\";\r\n\r\ndeclare module \"../scene\" {\r\n    export interface Scene {\r\n        /** @hidden */\r\n        _gamepadManager: Nullable<GamepadManager>;\r\n\r\n        /**\r\n         * Gets the gamepad manager associated with the scene\r\n         * @see https://doc.babylonjs.com/how_to/how_to_use_gamepads\r\n         */\r\n        gamepadManager: GamepadManager;\r\n    }\r\n}\r\n\r\nObject.defineProperty(Scene.prototype, \"gamepadManager\", {\r\n    get: function (this: Scene) {\r\n        if (!this._gamepadManager) {\r\n            this._gamepadManager = new GamepadManager(this);\r\n            let component = this._getComponent(SceneComponentConstants.NAME_GAMEPAD) as GamepadSystemSceneComponent;\r\n            if (!component) {\r\n                component = new GamepadSystemSceneComponent(this);\r\n                this._addComponent(component);\r\n            }\r\n        }\r\n\r\n        return this._gamepadManager;\r\n    },\r\n    enumerable: true,\r\n    configurable: true,\r\n});\r\n\r\ndeclare module \"../Cameras/freeCameraInputsManager\" {\r\n    /**\r\n     * Interface representing a free camera inputs manager\r\n     */\r\n    export interface FreeCameraInputsManager {\r\n        /**\r\n         * Adds gamepad input support to the FreeCameraInputsManager.\r\n         * @returns the FreeCameraInputsManager\r\n         */\r\n        addGamepad(): FreeCameraInputsManager;\r\n    }\r\n}\r\n\r\n/**\r\n * Adds a gamepad to the free camera inputs manager\r\n */\r\nFreeCameraInputsManager.prototype.addGamepad = function (): FreeCameraInputsManager {\r\n    this.add(new FreeCameraGamepadInput());\r\n    return this;\r\n};\r\n\r\ndeclare module \"../Cameras/arcRotateCameraInputsManager\" {\r\n    /**\r\n     * Interface representing an arc rotate camera inputs manager\r\n     */\r\n    export interface ArcRotateCameraInputsManager {\r\n        /**\r\n         * Adds gamepad input support to the ArcRotateCamera InputManager.\r\n         * @returns the camera inputs manager\r\n         */\r\n        addGamepad(): ArcRotateCameraInputsManager;\r\n    }\r\n}\r\n\r\n/**\r\n * Adds a gamepad to the arc rotate camera inputs manager\r\n */\r\nArcRotateCameraInputsManager.prototype.addGamepad = function (): ArcRotateCameraInputsManager {\r\n    this.add(new ArcRotateCameraGamepadInput());\r\n    return this;\r\n};\r\n\r\n/**\r\n * Defines the gamepad scene component responsible to manage gamepads in a given scene\r\n */\r\nexport class GamepadSystemSceneComponent implements ISceneComponent {\r\n    /**\r\n     * The component name helpfull to identify the component in the list of scene components.\r\n     */\r\n    public readonly name = SceneComponentConstants.NAME_GAMEPAD;\r\n\r\n    /**\r\n     * The scene the component belongs to.\r\n     */\r\n    public scene: Scene;\r\n\r\n    /**\r\n     * Creates a new instance of the component for the given scene\r\n     * @param scene Defines the scene to register the component in\r\n     */\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    /**\r\n     * Registers the component in a given scene\r\n     */\r\n    public register(): void {\r\n        this.scene._beforeCameraUpdateStage.registerStep(SceneComponentConstants.STEP_BEFORECAMERAUPDATE_GAMEPAD, this, this._beforeCameraUpdate);\r\n    }\r\n\r\n    /**\r\n     * Rebuilds the elements related to this component in case of\r\n     * context lost for instance.\r\n     */\r\n    public rebuild(): void {\r\n        // Nothing to do for gamepads\r\n    }\r\n\r\n    /**\r\n     * Disposes the component and the associated resources\r\n     */\r\n    public dispose(): void {\r\n        const gamepadManager = this.scene._gamepadManager;\r\n        if (gamepadManager) {\r\n            gamepadManager.dispose();\r\n            this.scene._gamepadManager = null;\r\n        }\r\n    }\r\n\r\n    private _beforeCameraUpdate(): void {\r\n        const gamepadManager = this.scene._gamepadManager;\r\n\r\n        if (gamepadManager && gamepadManager._isMonitoring) {\r\n            gamepadManager._checkGamepadsStatus();\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}