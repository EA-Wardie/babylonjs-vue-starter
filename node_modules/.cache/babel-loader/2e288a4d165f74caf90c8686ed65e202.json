{"ast":null,"code":"import { WebGPUEngine } from \"../../webgpuEngine.js\";\n\nWebGPUEngine.prototype._debugPushGroup = function (groupName, targetObject) {\n  if (!this._options.enableGPUDebugMarkers) {\n    return;\n  }\n\n  if (targetObject === 0 || targetObject === 1) {\n    var encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\n    encoder.pushDebugGroup(groupName);\n  } else if (this._currentRenderPass) {\n    this._currentRenderPass.pushDebugGroup(groupName);\n  } else {\n    this._pendingDebugCommands.push([\"push\", groupName]);\n  }\n};\n\nWebGPUEngine.prototype._debugPopGroup = function (targetObject) {\n  if (!this._options.enableGPUDebugMarkers) {\n    return;\n  }\n\n  if (targetObject === 0 || targetObject === 1) {\n    var encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\n    encoder.popDebugGroup();\n  } else if (this._currentRenderPass) {\n    this._currentRenderPass.popDebugGroup();\n  } else {\n    this._pendingDebugCommands.push([\"pop\", null]);\n  }\n};\n\nWebGPUEngine.prototype._debugInsertMarker = function (text, targetObject) {\n  if (!this._options.enableGPUDebugMarkers) {\n    return;\n  }\n\n  if (targetObject === 0 || targetObject === 1) {\n    var encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\n    encoder.insertDebugMarker(text);\n  } else if (this._currentRenderPass) {\n    this._currentRenderPass.insertDebugMarker(text);\n  } else {\n    this._pendingDebugCommands.push([\"insert\", text]);\n  }\n};\n\nWebGPUEngine.prototype._debugFlushPendingCommands = function () {\n  for (var i = 0; i < this._pendingDebugCommands.length; ++i) {\n    var _a = this._pendingDebugCommands[i],\n        name_1 = _a[0],\n        param = _a[1];\n\n    switch (name_1) {\n      case \"push\":\n        this._debugPushGroup(param);\n\n        break;\n\n      case \"pop\":\n        this._debugPopGroup();\n\n        break;\n\n      case \"insert\":\n        this._debugInsertMarker(param);\n\n        break;\n    }\n  }\n\n  this._pendingDebugCommands.length = 0;\n};","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,uBAA7B;;AAEAA,YAAY,CAACC,SAAb,CAAuBC,eAAvB,GAAyC,UAAUC,SAAV,EAA6BC,YAA7B,EAAkD;AACvF,MAAI,CAAC,KAAKC,QAAL,CAAcC,qBAAnB,EAA0C;AACtC;AACH;;AAED,MAAIF,YAAY,KAAK,CAAjB,IAAsBA,YAAY,KAAK,CAA3C,EAA8C;AAC1C,QAAMG,OAAO,GAAGH,YAAY,KAAK,CAAjB,GAAqB,KAAKI,cAA1B,GAA2C,KAAKC,oBAAhE;AACAF,WAAO,CAACG,cAAR,CAAuBP,SAAvB;AACH,GAHD,MAGO,IAAI,KAAKQ,kBAAT,EAA6B;AAChC,SAAKA,kBAAL,CAAwBD,cAAxB,CAAuCP,SAAvC;AACH,GAFM,MAEA;AACH,SAAKS,qBAAL,CAA2BC,IAA3B,CAAgC,CAAC,MAAD,EAASV,SAAT,CAAhC;AACH;AACJ,CAbD;;AAeAH,YAAY,CAACC,SAAb,CAAuBa,cAAvB,GAAwC,UAAUV,YAAV,EAA+B;AACnE,MAAI,CAAC,KAAKC,QAAL,CAAcC,qBAAnB,EAA0C;AACtC;AACH;;AAED,MAAIF,YAAY,KAAK,CAAjB,IAAsBA,YAAY,KAAK,CAA3C,EAA8C;AAC1C,QAAMG,OAAO,GAAGH,YAAY,KAAK,CAAjB,GAAqB,KAAKI,cAA1B,GAA2C,KAAKC,oBAAhE;AACAF,WAAO,CAACQ,aAAR;AACH,GAHD,MAGO,IAAI,KAAKJ,kBAAT,EAA6B;AAChC,SAAKA,kBAAL,CAAwBI,aAAxB;AACH,GAFM,MAEA;AACH,SAAKH,qBAAL,CAA2BC,IAA3B,CAAgC,CAAC,KAAD,EAAQ,IAAR,CAAhC;AACH;AACJ,CAbD;;AAeAb,YAAY,CAACC,SAAb,CAAuBe,kBAAvB,GAA4C,UAAUC,IAAV,EAAwBb,YAAxB,EAA6C;AACrF,MAAI,CAAC,KAAKC,QAAL,CAAcC,qBAAnB,EAA0C;AACtC;AACH;;AAED,MAAIF,YAAY,KAAK,CAAjB,IAAsBA,YAAY,KAAK,CAA3C,EAA8C;AAC1C,QAAMG,OAAO,GAAGH,YAAY,KAAK,CAAjB,GAAqB,KAAKI,cAA1B,GAA2C,KAAKC,oBAAhE;AACAF,WAAO,CAACW,iBAAR,CAA0BD,IAA1B;AACH,GAHD,MAGO,IAAI,KAAKN,kBAAT,EAA6B;AAChC,SAAKA,kBAAL,CAAwBO,iBAAxB,CAA0CD,IAA1C;AACH,GAFM,MAEA;AACH,SAAKL,qBAAL,CAA2BC,IAA3B,CAAgC,CAAC,QAAD,EAAWI,IAAX,CAAhC;AACH;AACJ,CAbD;;AAeAjB,YAAY,CAACC,SAAb,CAAuBkB,0BAAvB,GAAoD;AAChD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,qBAAL,CAA2BS,MAA/C,EAAuD,EAAED,CAAzD,EAA4D;AAClD,aAAgB,KAAKR,qBAAL,CAA2BQ,CAA3B,CAAhB;AAAA,QAACE,MAAI,QAAL;AAAA,QAAOC,KAAK,QAAZ;;AAEN,YAAQD,MAAR;AACI,WAAK,MAAL;AACI,aAAKpB,eAAL,CAAqBqB,KAArB;;AACA;;AACJ,WAAK,KAAL;AACI,aAAKT,cAAL;;AACA;;AACJ,WAAK,QAAL;AACI,aAAKE,kBAAL,CAAwBO,KAAxB;;AACA;AATR;AAWH;;AACD,OAAKX,qBAAL,CAA2BS,MAA3B,GAAoC,CAApC;AACH,CAjBD","names":["WebGPUEngine","prototype","_debugPushGroup","groupName","targetObject","_options","enableGPUDebugMarkers","encoder","_renderEncoder","_renderTargetEncoder","pushDebugGroup","_currentRenderPass","_pendingDebugCommands","push","_debugPopGroup","popDebugGroup","_debugInsertMarker","text","insertDebugMarker","_debugFlushPendingCommands","i","length","name_1","param"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Engines/WebGPU/Extensions/engine.debugging.ts"],"sourcesContent":["import { WebGPUEngine } from \"../../webgpuEngine\";\r\n\r\nWebGPUEngine.prototype._debugPushGroup = function (groupName: string, targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        const encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\r\n        encoder.pushDebugGroup(groupName);\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.pushDebugGroup(groupName);\r\n    } else {\r\n        this._pendingDebugCommands.push([\"push\", groupName]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugPopGroup = function (targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        const encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\r\n        encoder.popDebugGroup();\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.popDebugGroup();\r\n    } else {\r\n        this._pendingDebugCommands.push([\"pop\", null]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugInsertMarker = function (text: string, targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        const encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\r\n        encoder.insertDebugMarker(text);\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.insertDebugMarker(text);\r\n    } else {\r\n        this._pendingDebugCommands.push([\"insert\", text]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugFlushPendingCommands = function (): void {\r\n    for (let i = 0; i < this._pendingDebugCommands.length; ++i) {\r\n        const [name, param] = this._pendingDebugCommands[i];\r\n\r\n        switch (name) {\r\n            case \"push\":\r\n                this._debugPushGroup(param!);\r\n                break;\r\n            case \"pop\":\r\n                this._debugPopGroup();\r\n                break;\r\n            case \"insert\":\r\n                this._debugInsertMarker(param!);\r\n                break;\r\n        }\r\n    }\r\n    this._pendingDebugCommands.length = 0;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}