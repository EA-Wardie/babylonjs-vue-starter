{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get negative version of a value (i.e. x * -1)\n */\n\nvar NegateBlock =\n/** @class */\nfunction (_super) {\n  __extends(NegateBlock, _super);\n  /**\n   * Creates a new NegateBlock\n   * @param name defines the block name\n   */\n\n\n  function NegateBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  NegateBlock.prototype.getClassName = function () {\n    return \"NegateBlock\";\n  };\n\n  Object.defineProperty(NegateBlock.prototype, \"value\", {\n    /**\n     * Gets the value input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NegateBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  NegateBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + \" = -1.0 * \".concat(this.value.associatedVariableName, \";\\r\\n\");\n    return this;\n  };\n\n  return NegateBlock;\n}(NodeMaterialBlock);\n\nexport { NegateBlock };\nRegisterClass(\"BABYLON.NegateBlock\", NegateBlock);","map":{"version":3,"mappings":";;AAAA,SAASA,iBAAT,QAAkC,yBAAlC;AACA,SAASC,qCAAT,QAAsD,mDAAtD;AAGA,SAASC,wBAAT,QAAyC,sCAAzC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA;;;;AAGA;AAAA;AAAA;AAAiCC;AAC7B;;;;;;AAIA,uBAAmBC,IAAnB,EAA+B;AAA/B,gBACIC,kBAAMD,IAAN,EAAYH,wBAAwB,CAACK,OAArC,KAA6C,IADjD;;AAGIC,SAAI,CAACC,aAAL,CAAmB,OAAnB,EAA4BR,qCAAqC,CAACS,UAAlE;;AACAF,SAAI,CAACG,cAAL,CAAoB,QAApB,EAA8BV,qCAAqC,CAACW,YAApE;;AAEAJ,SAAI,CAACK,QAAL,CAAc,CAAd,EAAiBC,qBAAjB,GAAyCN,KAAI,CAACO,OAAL,CAAa,CAAb,CAAzC;;AACH;AAED;;;;;;AAIOC,uCAAP;AACI,WAAO,aAAP;AACH,GAFM;;AAOPC,wBAAWD,qBAAX,EAAW,OAAX,EAAgB;AAHhB;;;SAGA;AACI,aAAO,KAAKD,OAAL,CAAa,CAAb,CAAP;AACH,KAFe;qBAAA;;AAAA,GAAhB;AAOAE,wBAAWD,qBAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA;AACI,aAAO,KAAKH,QAAL,CAAc,CAAd,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;;AAIUG,sCAAV,UAAsBE,KAAtB,EAAmD;AAC/CZ,qBAAMa,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBF,KAAlB;;AAEA,QAAMG,MAAM,GAAG,KAAKR,QAAL,CAAc,CAAd,CAAf;AAEAK,SAAK,CAACI,iBAAN,IAA2B,KAAKC,cAAL,CAAoBF,MAApB,EAA4BH,KAA5B,IAAqC,oBAAa,KAAKM,KAAL,CAAWC,sBAAxB,EAA8C,OAA9C,CAAhE;AAEA,WAAO,IAAP;AACH,GARS;;AASd;AAAC,CA7CD,CAAiCzB,iBAAjC;;;AA+CAG,aAAa,CAAC,qBAAD,EAAwBa,WAAxB,CAAb","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Neutral","_this","registerInput","AutoDetect","registerOutput","BasedOnInput","_outputs","_typeConnectionSource","_inputs","NegateBlock","Object","state","_buildBlock","call","output","compilationString","_declareOutput","value","associatedVariableName"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/negateBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * Block used to get negative version of a value (i.e. x * -1)\r\n */\r\nexport class NegateBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new NegateBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"NegateBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the value input component\r\n     */\r\n    public get value(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        state.compilationString += this._declareOutput(output, state) + ` = -1.0 * ${this.value.associatedVariableName};\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.NegateBlock\", NegateBlock);\r\n"]},"metadata":{},"sourceType":"module"}