{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to blend normals\n */\n\nvar NormalBlendBlock =\n/** @class */\nfunction (_super) {\n  __extends(NormalBlendBlock, _super);\n  /**\n   * Creates a new NormalBlendBlock\n   * @param name defines the block name\n   */\n\n\n  function NormalBlendBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"normalMap0\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerInput(\"normalMap1\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  NormalBlendBlock.prototype.getClassName = function () {\n    return \"NormalBlendBlock\";\n  };\n\n  Object.defineProperty(NormalBlendBlock.prototype, \"normalMap0\", {\n    /**\n     * Gets the first input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NormalBlendBlock.prototype, \"normalMap1\", {\n    /**\n     * Gets the second input component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NormalBlendBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  NormalBlendBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    var input0 = this._inputs[0];\n    var input1 = this._inputs[1];\n\n    var stepR = state._getFreeVariableName(\"stepR\");\n\n    var stepG = state._getFreeVariableName(\"stepG\");\n\n    state.compilationString += \"float \".concat(stepR, \" = step(0.5, \").concat(input0.associatedVariableName, \".r);\\r\\n\");\n    state.compilationString += \"float \".concat(stepG, \" = step(0.5, \").concat(input0.associatedVariableName, \".g);\\r\\n\");\n    state.compilationString += this._declareOutput(output, state) + \";\\r\\n\";\n    state.compilationString += \"\".concat(output.associatedVariableName, \".r = (1.0 - \").concat(stepR, \") * \").concat(input0.associatedVariableName, \".r * \").concat(input1.associatedVariableName, \".r * 2.0 + \").concat(stepR, \" * (1.0 - (1.0 - \").concat(input0.associatedVariableName, \".r) * (1.0 - \").concat(input1.associatedVariableName, \".r) * 2.0);\\r\\n\");\n    state.compilationString += \"\".concat(output.associatedVariableName, \".g = (1.0 - \").concat(stepG, \") * \").concat(input0.associatedVariableName, \".g * \").concat(input1.associatedVariableName, \".g * 2.0 + \").concat(stepG, \" * (1.0 - (1.0 - \").concat(input0.associatedVariableName, \".g) * (1.0 - \").concat(input1.associatedVariableName, \".g) * 2.0);\\r\\n\");\n    state.compilationString += \"\".concat(output.associatedVariableName, \".b = \").concat(input0.associatedVariableName, \".b * \").concat(input1.associatedVariableName, \".b;\\r\\n\");\n    return this;\n  };\n\n  return NormalBlendBlock;\n}(NodeMaterialBlock);\n\nexport { NormalBlendBlock };\nRegisterClass(\"BABYLON.NormalBlendBlock\", NormalBlendBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Neutral","_this","registerInput","Vector3","registerOutput","_inputs","acceptedConnectionPointTypes","push","Color3","Color4","Vector4","NormalBlendBlock","Object","_outputs","state","_buildBlock","call","output","input0","input1","stepR","_getFreeVariableName","stepG","compilationString","concat","associatedVariableName","_declareOutput"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/normalBlendBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * Block used to blend normals\r\n */\r\nexport class NormalBlendBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new NormalBlendBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"normalMap0\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this.registerInput(\"normalMap1\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\r\n\r\n        this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\r\n        this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"NormalBlendBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the first input component\r\n     */\r\n    public get normalMap0(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the second input component\r\n     */\r\n    public get normalMap1(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n        const input0 = this._inputs[0];\r\n        const input1 = this._inputs[1];\r\n        const stepR = state._getFreeVariableName(\"stepR\");\r\n        const stepG = state._getFreeVariableName(\"stepG\");\r\n\r\n        state.compilationString += `float ${stepR} = step(0.5, ${input0.associatedVariableName}.r);\\r\\n`;\r\n        state.compilationString += `float ${stepG} = step(0.5, ${input0.associatedVariableName}.g);\\r\\n`;\r\n        state.compilationString += this._declareOutput(output, state) + `;\\r\\n`;\r\n        state.compilationString += `${output.associatedVariableName}.r = (1.0 - ${stepR}) * ${input0.associatedVariableName}.r * ${input1.associatedVariableName}.r * 2.0 + ${stepR} * (1.0 - (1.0 - ${input0.associatedVariableName}.r) * (1.0 - ${input1.associatedVariableName}.r) * 2.0);\\r\\n`;\r\n        state.compilationString += `${output.associatedVariableName}.g = (1.0 - ${stepG}) * ${input0.associatedVariableName}.g * ${input1.associatedVariableName}.g * 2.0 + ${stepG} * (1.0 - (1.0 - ${input0.associatedVariableName}.g) * (1.0 - ${input1.associatedVariableName}.g) * 2.0);\\r\\n`;\r\n        state.compilationString += `${output.associatedVariableName}.b = ${input0.associatedVariableName}.b * ${input1.associatedVariableName}.b;\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.NormalBlendBlock\", NormalBlendBlock);\r\n"]},"metadata":{},"sourceType":"module"}