{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\n\n/**\n * Class used to represent data loading progression\n */\nvar SceneLoaderFlags =\n/** @class */\nfunction () {\n  function SceneLoaderFlags() {}\n\n  Object.defineProperty(SceneLoaderFlags, \"ForceFullSceneLoadingForIncremental\", {\n    /**\n     * Gets or sets a boolean indicating if entire scene must be loaded even if scene contains incremental data\n     */\n    get: function get() {\n      return SceneLoaderFlags._ForceFullSceneLoadingForIncremental;\n    },\n    set: function set(value) {\n      SceneLoaderFlags._ForceFullSceneLoadingForIncremental = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SceneLoaderFlags, \"ShowLoadingScreen\", {\n    /**\n     * Gets or sets a boolean indicating if loading screen must be displayed while loading a scene\n     */\n    get: function get() {\n      return SceneLoaderFlags._ShowLoadingScreen;\n    },\n    set: function set(value) {\n      SceneLoaderFlags._ShowLoadingScreen = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SceneLoaderFlags, \"loggingLevel\", {\n    /**\n     * Defines the current logging level (while loading the scene)\n     * @ignorenaming\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    get: function get() {\n      return SceneLoaderFlags._LoggingLevel;\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    set: function set(value) {\n      SceneLoaderFlags._LoggingLevel = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SceneLoaderFlags, \"CleanBoneMatrixWeights\", {\n    /**\n     * Gets or set a boolean indicating if matrix weights must be cleaned upon loading\n     */\n    get: function get() {\n      return SceneLoaderFlags._CleanBoneMatrixWeights;\n    },\n    set: function set(value) {\n      SceneLoaderFlags._CleanBoneMatrixWeights = value;\n    },\n    enumerable: false,\n    configurable: true\n  }); // Flags\n\n  SceneLoaderFlags._ForceFullSceneLoadingForIncremental = false;\n  SceneLoaderFlags._ShowLoadingScreen = true;\n  SceneLoaderFlags._CleanBoneMatrixWeights = false;\n  SceneLoaderFlags._LoggingLevel = 0;\n  return SceneLoaderFlags;\n}();\n\nexport { SceneLoaderFlags };","map":{"version":3,"mappings":";;AAEA;;;AAGA;AAAA;AAAA;AAAA,+BAqDC;;AA3CGA,wBAAkBC,gBAAlB,EAAkB,qCAAlB,EAAqD;AAHrD;;;SAGA;AACI,aAAOA,gBAAgB,CAACC,oCAAxB;AACH,KAFoD;SAIrD,aAAsDC,KAAtD,EAAoE;AAChEF,sBAAgB,CAACC,oCAAjB,GAAwDC,KAAxD;AACH,KANoD;qBAAA;;AAAA,GAArD;AAWAH,wBAAkBC,gBAAlB,EAAkB,mBAAlB,EAAmC;AAHnC;;;SAGA;AACI,aAAOA,gBAAgB,CAACG,kBAAxB;AACH,KAFkC;SAInC,aAAoCD,KAApC,EAAkD;AAC9CF,sBAAgB,CAACG,kBAAjB,GAAsCD,KAAtC;AACH,KANkC;qBAAA;;AAAA,GAAnC;AAaAH,wBAAkBC,gBAAlB,EAAkB,cAAlB,EAA8B;AAL9B;;;;AAIA;SACA;AACI,aAAOA,gBAAgB,CAACI,aAAxB;AACH,KAF6B;AAI9B;SACA,aAA+BF,KAA/B,EAA4C;AACxCF,sBAAgB,CAACI,aAAjB,GAAiCF,KAAjC;AACH,KAP6B;qBAAA;;AAAA,GAA9B;AAYAH,wBAAkBC,gBAAlB,EAAkB,wBAAlB,EAAwC;AAHxC;;;SAGA;AACI,aAAOA,gBAAgB,CAACK,uBAAxB;AACH,KAFuC;SAIxC,aAAyCH,KAAzC,EAAuD;AACnDF,sBAAgB,CAACK,uBAAjB,GAA2CH,KAA3C;AACH,KANuC;qBAAA;;AAAA,GAAxC,EA9CJ,CACI;;AACeF,0DAAuC,KAAvC;AACAA,wCAAqB,IAArB;AACAA,6CAA0B,KAA1B;AACAA,mCAAgB,CAAhB;AAgDnB;AAAC,CArDD;;SAAaA","names":["Object","SceneLoaderFlags","_ForceFullSceneLoadingForIncremental","value","_ShowLoadingScreen","_LoggingLevel","_CleanBoneMatrixWeights"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Loading/sceneLoaderFlags.ts"],"sourcesContent":["import { Constants } from \"../Engines/constants\";\r\n\r\n/**\r\n * Class used to represent data loading progression\r\n */\r\nexport class SceneLoaderFlags {\r\n    // Flags\r\n    private static _ForceFullSceneLoadingForIncremental = false;\r\n    private static _ShowLoadingScreen = true;\r\n    private static _CleanBoneMatrixWeights = false;\r\n    private static _LoggingLevel = Constants.SCENELOADER_NO_LOGGING;\r\n\r\n    /**\r\n     * Gets or sets a boolean indicating if entire scene must be loaded even if scene contains incremental data\r\n     */\r\n    public static get ForceFullSceneLoadingForIncremental() {\r\n        return SceneLoaderFlags._ForceFullSceneLoadingForIncremental;\r\n    }\r\n\r\n    public static set ForceFullSceneLoadingForIncremental(value: boolean) {\r\n        SceneLoaderFlags._ForceFullSceneLoadingForIncremental = value;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets a boolean indicating if loading screen must be displayed while loading a scene\r\n     */\r\n    public static get ShowLoadingScreen(): boolean {\r\n        return SceneLoaderFlags._ShowLoadingScreen;\r\n    }\r\n\r\n    public static set ShowLoadingScreen(value: boolean) {\r\n        SceneLoaderFlags._ShowLoadingScreen = value;\r\n    }\r\n\r\n    /**\r\n     * Defines the current logging level (while loading the scene)\r\n     * @ignorenaming\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    public static get loggingLevel(): number {\r\n        return SceneLoaderFlags._LoggingLevel;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    public static set loggingLevel(value: number) {\r\n        SceneLoaderFlags._LoggingLevel = value;\r\n    }\r\n\r\n    /**\r\n     * Gets or set a boolean indicating if matrix weights must be cleaned upon loading\r\n     */\r\n    public static get CleanBoneMatrixWeights(): boolean {\r\n        return SceneLoaderFlags._CleanBoneMatrixWeights;\r\n    }\r\n\r\n    public static set CleanBoneMatrixWeights(value: boolean) {\r\n        SceneLoaderFlags._CleanBoneMatrixWeights = value;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}