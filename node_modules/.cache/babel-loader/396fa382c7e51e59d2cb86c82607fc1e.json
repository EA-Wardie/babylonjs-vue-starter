{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { __extends } from \"tslib\";\nimport { FreeCamera } from \"./freeCamera.js\";\nimport { Vector3 } from \"../Maths/math.vector.js\";\nimport { Node } from \"../node.js\";\nNode.AddNodeConstructor(\"TouchCamera\", function (name, scene) {\n  return function () {\n    return new TouchCamera(name, Vector3.Zero(), scene);\n  };\n});\n/**\n * This represents a FPS type of camera controlled by touch.\n * This is like a universal camera minus the Gamepad controls.\n * @see https://doc.babylonjs.com/features/cameras#universal-camera\n */\n\nvar TouchCamera =\n/** @class */\nfunction (_super) {\n  __extends(TouchCamera, _super);\n  /**\n   * Instantiates a new touch camera.\n   * This represents a FPS type of camera controlled by touch.\n   * This is like a universal camera minus the Gamepad controls.\n   * @see https://doc.babylonjs.com/features/cameras#universal-camera\n   * @param name Define the name of the camera in the scene\n   * @param position Define the start position of the camera in the scene\n   * @param scene Define the scene the camera belongs to\n   */\n\n\n  function TouchCamera(name, position, scene) {\n    var _this = _super.call(this, name, position, scene) || this;\n\n    _this.inputs.addTouch();\n\n    _this._setupInputs();\n\n    return _this;\n  }\n\n  Object.defineProperty(TouchCamera.prototype, \"touchAngularSensibility\", {\n    /**\n     * Defines the touch sensibility for rotation.\n     * The higher the faster.\n     */\n    get: function get() {\n      var touch = this.inputs.attached[\"touch\"];\n\n      if (touch) {\n        return touch.touchAngularSensibility;\n      }\n\n      return 0;\n    },\n    set: function set(value) {\n      var touch = this.inputs.attached[\"touch\"];\n\n      if (touch) {\n        touch.touchAngularSensibility = value;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TouchCamera.prototype, \"touchMoveSensibility\", {\n    /**\n     * Defines the touch sensibility for move.\n     * The higher the faster.\n     */\n    get: function get() {\n      var touch = this.inputs.attached[\"touch\"];\n\n      if (touch) {\n        return touch.touchMoveSensibility;\n      }\n\n      return 0;\n    },\n    set: function set(value) {\n      var touch = this.inputs.attached[\"touch\"];\n\n      if (touch) {\n        touch.touchMoveSensibility = value;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Gets the current object class name.\n   * @return the class name\n   */\n\n  TouchCamera.prototype.getClassName = function () {\n    return \"TouchCamera\";\n  };\n  /** @hidden */\n\n\n  TouchCamera.prototype._setupInputs = function () {\n    var touch = this.inputs.attached[\"touch\"];\n    var mouse = this.inputs.attached[\"mouse\"];\n\n    if (mouse) {\n      mouse.touchEnabled = false;\n    } else {\n      touch.allowMouse = true;\n    }\n  };\n\n  return TouchCamera;\n}(FreeCamera);\n\nexport { TouchCamera };","map":{"version":3,"mappings":";;AAAA,SAASA,UAAT,QAA2B,iBAA3B;AAIA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,IAAT,QAAqB,YAArB;AAEAA,IAAI,CAACC,kBAAL,CAAwB,aAAxB,EAAuC,UAACC,IAAD,EAAOC,KAAP,EAAY;AAC/C,SAAO;AAAM,eAAIC,WAAJ,CAAgBF,IAAhB,EAAsBH,OAAO,CAACM,IAAR,EAAtB,EAAsCF,KAAtC;AAA4C,GAAzD;AACH,CAFD;AAIA;;;;;;AAKA;AAAA;AAAA;AAAiCG;AAyC7B;;;;;;;;;;;AASA,uBAAYJ,IAAZ,EAA0BK,QAA1B,EAA6CJ,KAA7C,EAA0D;AAA1D,gBACIK,kBAAMN,IAAN,EAAYK,QAAZ,EAAsBJ,KAAtB,KAA4B,IADhC;;AAEIM,SAAI,CAACC,MAAL,CAAYC,QAAZ;;AAEAF,SAAI,CAACG,YAAL;;;AACH;;AAlDDC,wBAAWT,qBAAX,EAAW,yBAAX,EAAkC;AAJlC;;;;SAIA;AACI,UAAMU,KAAK,GAAyB,KAAKJ,MAAL,CAAYK,QAAZ,CAAqB,OAArB,CAApC;;AACA,UAAID,KAAJ,EAAW;AACP,eAAOA,KAAK,CAACE,uBAAb;AACH;;AAED,aAAO,CAAP;AACH,KAPiC;SASlC,aAAmCC,KAAnC,EAAgD;AAC5C,UAAMH,KAAK,GAAyB,KAAKJ,MAAL,CAAYK,QAAZ,CAAqB,OAArB,CAApC;;AACA,UAAID,KAAJ,EAAW;AACPA,aAAK,CAACE,uBAAN,GAAgCC,KAAhC;AACH;AACJ,KAdiC;qBAAA;;AAAA,GAAlC;AAoBAJ,wBAAWT,qBAAX,EAAW,sBAAX,EAA+B;AAJ/B;;;;SAIA;AACI,UAAMU,KAAK,GAAyB,KAAKJ,MAAL,CAAYK,QAAZ,CAAqB,OAArB,CAApC;;AACA,UAAID,KAAJ,EAAW;AACP,eAAOA,KAAK,CAACI,oBAAb;AACH;;AAED,aAAO,CAAP;AACH,KAP8B;SAS/B,aAAgCD,KAAhC,EAA6C;AACzC,UAAMH,KAAK,GAAyB,KAAKJ,MAAL,CAAYK,QAAZ,CAAqB,OAArB,CAApC;;AACA,UAAID,KAAJ,EAAW;AACPA,aAAK,CAACI,oBAAN,GAA6BD,KAA7B;AACH;AACJ,KAd8B;qBAAA;;AAAA,GAA/B;AAgCA;;;;;AAIOb,uCAAP;AACI,WAAO,aAAP;AACH,GAFM;AAIP;;;AACOA,uCAAP;AACI,QAAMU,KAAK,GAAyB,KAAKJ,MAAL,CAAYK,QAAZ,CAAqB,OAArB,CAApC;AACA,QAAMI,KAAK,GAAyB,KAAKT,MAAL,CAAYK,QAAZ,CAAqB,OAArB,CAApC;;AACA,QAAII,KAAJ,EAAW;AACPA,WAAK,CAACC,YAAN,GAAqB,KAArB;AACH,KAFD,MAEO;AACHN,WAAK,CAACO,UAAN,GAAmB,IAAnB;AACH;AACJ,GARM;;AASX;AAAC,CA3ED,CAAiCvB,UAAjC","names":["FreeCamera","Vector3","Node","AddNodeConstructor","name","scene","TouchCamera","Zero","__extends","position","_super","_this","inputs","addTouch","_setupInputs","Object","touch","attached","touchAngularSensibility","value","touchMoveSensibility","mouse","touchEnabled","allowMouse"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Cameras/touchCamera.ts"],"sourcesContent":["import { FreeCamera } from \"./freeCamera\";\r\nimport type { FreeCameraTouchInput } from \"../Cameras/Inputs/freeCameraTouchInput\";\r\nimport type { FreeCameraMouseInput } from \"../Cameras/Inputs/freeCameraMouseInput\";\r\nimport type { Scene } from \"../scene\";\r\nimport { Vector3 } from \"../Maths/math.vector\";\r\nimport { Node } from \"../node\";\r\n\r\nNode.AddNodeConstructor(\"TouchCamera\", (name, scene) => {\r\n    return () => new TouchCamera(name, Vector3.Zero(), scene);\r\n});\r\n\r\n/**\r\n * This represents a FPS type of camera controlled by touch.\r\n * This is like a universal camera minus the Gamepad controls.\r\n * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n */\r\nexport class TouchCamera extends FreeCamera {\r\n    /**\r\n     * Defines the touch sensibility for rotation.\r\n     * The higher the faster.\r\n     */\r\n    public get touchAngularSensibility(): number {\r\n        const touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        if (touch) {\r\n            return touch.touchAngularSensibility;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    public set touchAngularSensibility(value: number) {\r\n        const touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        if (touch) {\r\n            touch.touchAngularSensibility = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the touch sensibility for move.\r\n     * The higher the faster.\r\n     */\r\n    public get touchMoveSensibility(): number {\r\n        const touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        if (touch) {\r\n            return touch.touchMoveSensibility;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    public set touchMoveSensibility(value: number) {\r\n        const touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        if (touch) {\r\n            touch.touchMoveSensibility = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Instantiates a new touch camera.\r\n     * This represents a FPS type of camera controlled by touch.\r\n     * This is like a universal camera minus the Gamepad controls.\r\n     * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n     * @param name Define the name of the camera in the scene\r\n     * @param position Define the start position of the camera in the scene\r\n     * @param scene Define the scene the camera belongs to\r\n     */\r\n    constructor(name: string, position: Vector3, scene?: Scene) {\r\n        super(name, position, scene);\r\n        this.inputs.addTouch();\r\n\r\n        this._setupInputs();\r\n    }\r\n\r\n    /**\r\n     * Gets the current object class name.\r\n     * @return the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"TouchCamera\";\r\n    }\r\n\r\n    /** @hidden */\r\n    public _setupInputs() {\r\n        const touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        const mouse = <FreeCameraMouseInput>this.inputs.attached[\"mouse\"];\r\n        if (mouse) {\r\n            mouse.touchEnabled = false;\r\n        } else {\r\n            touch.allowMouse = true;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}