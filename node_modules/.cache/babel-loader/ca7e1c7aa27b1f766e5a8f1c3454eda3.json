{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { __extends } from \"tslib\";\nimport { Texture } from \"../Materials/Textures/texture.js\";\nimport { TextureDome } from \"./textureDome.js\";\n/**\n * Display a 360 degree photo on an approximately spherical surface, useful for VR applications or skyboxes.\n * As a subclass of TransformNode, this allow parenting to the camera with different locations in the scene.\n * This class achieves its effect with a Texture and a correctly configured BackgroundMaterial on an inverted sphere.\n * Potential additions to this helper include zoom and and non-infinite distance rendering effects.\n */\n\nvar PhotoDome =\n/** @class */\nfunction (_super) {\n  __extends(PhotoDome, _super);\n\n  function PhotoDome() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(PhotoDome.prototype, \"photoTexture\", {\n    /**\n     * Gets or sets the texture being displayed on the sphere\n     */\n    get: function get() {\n      return this.texture;\n    },\n\n    /**\n     * sets the texture being displayed on the sphere\n     */\n    set: function set(value) {\n      this.texture = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PhotoDome.prototype, \"imageMode\", {\n    /**\n     * Gets the current video mode for the video. It can be:\n     * * TextureDome.MODE_MONOSCOPIC : Define the texture source as a Monoscopic panoramic 360.\n     * * TextureDome.MODE_TOPBOTTOM  : Define the texture source as a Stereoscopic TopBottom/OverUnder panoramic 360.\n     * * TextureDome.MODE_SIDEBYSIDE : Define the texture source as a Stereoscopic Side by Side panoramic 360.\n     */\n    get: function get() {\n      return this.textureMode;\n    },\n\n    /**\n     * Sets the current video mode for the video. It can be:\n     * * TextureDome.MODE_MONOSCOPIC : Define the texture source as a Monoscopic panoramic 360.\n     * * TextureDome.MODE_TOPBOTTOM  : Define the texture source as a Stereoscopic TopBottom/OverUnder panoramic 360.\n     * * TextureDome.MODE_SIDEBYSIDE : Define the texture source as a Stereoscopic Side by Side panoramic 360.\n     */\n    set: function set(value) {\n      this.textureMode = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PhotoDome.prototype._initTexture = function (urlsOrElement, scene, options) {\n    var _this = this;\n\n    return new Texture(urlsOrElement, scene, !options.generateMipMaps, !this._useDirectMapping, undefined, function () {\n      _this.onLoadObservable.notifyObservers();\n    }, function (message, exception) {\n      _this.onLoadErrorObservable.notifyObservers(message || \"Unknown error occured\");\n\n      if (_this.onError) {\n        _this.onError(message, exception);\n      }\n    });\n  };\n  /**\n   * Define the image as a Monoscopic panoramic 360 image.\n   */\n\n\n  PhotoDome.MODE_MONOSCOPIC = TextureDome.MODE_MONOSCOPIC;\n  /**\n   * Define the image as a Stereoscopic TopBottom/OverUnder panoramic 360 image.\n   */\n\n  PhotoDome.MODE_TOPBOTTOM = TextureDome.MODE_TOPBOTTOM;\n  /**\n   * Define the image as a Stereoscopic Side by Side panoramic 360 image.\n   */\n\n  PhotoDome.MODE_SIDEBYSIDE = TextureDome.MODE_SIDEBYSIDE;\n  return PhotoDome;\n}(TextureDome);\n\nexport { PhotoDome };","map":{"version":3,"mappings":";;AACA,SAASA,OAAT,QAAwB,kCAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA;;;;;;;AAMA;AAAA;AAAA;AAA+BC;;AAA/B;;AAiEC;;AAjDGC,wBAAWC,mBAAX,EAAW,cAAX,EAAuB;AAHvB;;;SAGA;AACI,aAAO,KAAKC,OAAZ;AACH,KAFsB;;AAIvB;;;SAGA,aAAwBC,KAAxB,EAAsC;AAClC,WAAKD,OAAL,GAAeC,KAAf;AACH,KATsB;qBAAA;;AAAA,GAAvB;AAiBAH,wBAAWC,mBAAX,EAAW,WAAX,EAAoB;AANpB;;;;;;SAMA;AACI,aAAO,KAAKG,WAAZ;AACH,KAFmB;;AAGpB;;;;;;SAMA,aAAqBD,KAArB,EAAkC;AAC9B,WAAKC,WAAL,GAAmBD,KAAnB;AACH,KAXmB;qBAAA;;AAAA,GAApB;;AAaUF,qCAAV,UAAuBI,aAAvB,EAA8CC,KAA9C,EAA4DC,OAA5D,EAAwE;AAAxE;;AACI,WAAO,IAAIV,OAAJ,CACHQ,aADG,EAEHC,KAFG,EAGH,CAACC,OAAO,CAACC,eAHN,EAIH,CAAC,KAAKC,iBAJH,EAKHC,SALG,EAMH;AACIC,WAAI,CAACC,gBAAL,CAAsBC,eAAtB;AACH,KARE,EASH,UAACC,OAAD,EAAUC,SAAV,EAAmB;AACfJ,WAAI,CAACK,qBAAL,CAA2BH,eAA3B,CAA2CC,OAAO,IAAI,uBAAtD;;AAEA,UAAIH,KAAI,CAACM,OAAT,EAAkB;AACdN,aAAI,CAACM,OAAL,CAAaH,OAAb,EAAsBC,SAAtB;AACH;AACJ,KAfE,CAAP;AAiBH,GAlBS;AA7CV;;;;;AAGuBd,8BAAkBH,WAAW,CAACoB,eAA9B;AACvB;;;;AAGuBjB,6BAAiBH,WAAW,CAACqB,cAA7B;AACvB;;;;AAGuBlB,8BAAkBH,WAAW,CAACsB,eAA9B;AAqD3B;AAAC,CAjED,CAA+BtB,WAA/B;;SAAaG","names":["Texture","TextureDome","__extends","Object","PhotoDome","texture","value","textureMode","urlsOrElement","scene","options","generateMipMaps","_useDirectMapping","undefined","_this","onLoadObservable","notifyObservers","message","exception","onLoadErrorObservable","onError","MODE_MONOSCOPIC","MODE_TOPBOTTOM","MODE_SIDEBYSIDE"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Helpers/photoDome.ts"],"sourcesContent":["import type { Scene } from \"../scene\";\r\nimport { Texture } from \"../Materials/Textures/texture\";\r\nimport { TextureDome } from \"./textureDome\";\r\n\r\n/**\r\n * Display a 360 degree photo on an approximately spherical surface, useful for VR applications or skyboxes.\r\n * As a subclass of TransformNode, this allow parenting to the camera with different locations in the scene.\r\n * This class achieves its effect with a Texture and a correctly configured BackgroundMaterial on an inverted sphere.\r\n * Potential additions to this helper include zoom and and non-infinite distance rendering effects.\r\n */\r\nexport class PhotoDome extends TextureDome<Texture> {\r\n    /**\r\n     * Define the image as a Monoscopic panoramic 360 image.\r\n     */\r\n    public static readonly MODE_MONOSCOPIC = TextureDome.MODE_MONOSCOPIC;\r\n    /**\r\n     * Define the image as a Stereoscopic TopBottom/OverUnder panoramic 360 image.\r\n     */\r\n    public static readonly MODE_TOPBOTTOM = TextureDome.MODE_TOPBOTTOM;\r\n    /**\r\n     * Define the image as a Stereoscopic Side by Side panoramic 360 image.\r\n     */\r\n    public static readonly MODE_SIDEBYSIDE = TextureDome.MODE_SIDEBYSIDE;\r\n    /**\r\n     * Gets or sets the texture being displayed on the sphere\r\n     */\r\n    public get photoTexture(): Texture {\r\n        return this.texture;\r\n    }\r\n\r\n    /**\r\n     * sets the texture being displayed on the sphere\r\n     */\r\n    public set photoTexture(value: Texture) {\r\n        this.texture = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the current video mode for the video. It can be:\r\n     * * TextureDome.MODE_MONOSCOPIC : Define the texture source as a Monoscopic panoramic 360.\r\n     * * TextureDome.MODE_TOPBOTTOM  : Define the texture source as a Stereoscopic TopBottom/OverUnder panoramic 360.\r\n     * * TextureDome.MODE_SIDEBYSIDE : Define the texture source as a Stereoscopic Side by Side panoramic 360.\r\n     */\r\n    public get imageMode(): number {\r\n        return this.textureMode;\r\n    }\r\n    /**\r\n     * Sets the current video mode for the video. It can be:\r\n     * * TextureDome.MODE_MONOSCOPIC : Define the texture source as a Monoscopic panoramic 360.\r\n     * * TextureDome.MODE_TOPBOTTOM  : Define the texture source as a Stereoscopic TopBottom/OverUnder panoramic 360.\r\n     * * TextureDome.MODE_SIDEBYSIDE : Define the texture source as a Stereoscopic Side by Side panoramic 360.\r\n     */\r\n    public set imageMode(value: number) {\r\n        this.textureMode = value;\r\n    }\r\n\r\n    protected _initTexture(urlsOrElement: string, scene: Scene, options: any): Texture {\r\n        return new Texture(\r\n            urlsOrElement,\r\n            scene,\r\n            !options.generateMipMaps,\r\n            !this._useDirectMapping,\r\n            undefined,\r\n            () => {\r\n                this.onLoadObservable.notifyObservers();\r\n            },\r\n            (message, exception) => {\r\n                this.onLoadErrorObservable.notifyObservers(message || \"Unknown error occured\");\r\n\r\n                if (this.onError) {\r\n                    this.onError(message, exception);\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}