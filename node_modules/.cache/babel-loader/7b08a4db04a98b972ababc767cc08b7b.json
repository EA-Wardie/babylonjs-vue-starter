{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\n\n/** @hidden */\nvar WebGLHardwareTexture =\n/** @class */\nfunction () {\n  function WebGLHardwareTexture(existingTexture, context) {\n    if (existingTexture === void 0) {\n      existingTexture = null;\n    } // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n    this._MSAARenderBuffer = null;\n    this._context = context;\n\n    if (!existingTexture) {\n      existingTexture = context.createTexture();\n\n      if (!existingTexture) {\n        throw new Error(\"Unable to create webGL texture\");\n      }\n    }\n\n    this.set(existingTexture);\n  }\n\n  Object.defineProperty(WebGLHardwareTexture.prototype, \"underlyingResource\", {\n    get: function get() {\n      return this._webGLTexture;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WebGLHardwareTexture.prototype.setUsage = function () {};\n\n  WebGLHardwareTexture.prototype.set = function (hardwareTexture) {\n    this._webGLTexture = hardwareTexture;\n  };\n\n  WebGLHardwareTexture.prototype.reset = function () {\n    this._webGLTexture = null;\n    this._MSAARenderBuffer = null;\n  };\n\n  WebGLHardwareTexture.prototype.release = function () {\n    if (this._MSAARenderBuffer) {\n      this._context.deleteRenderbuffer(this._MSAARenderBuffer);\n\n      this._MSAARenderBuffer = null;\n    }\n\n    if (this._webGLTexture) {\n      this._context.deleteTexture(this._webGLTexture);\n    }\n\n    this.reset();\n  };\n\n  return WebGLHardwareTexture;\n}();\n\nexport { WebGLHardwareTexture };","map":{"version":3,"mappings":";;;;AAGA;AACA;AAAA;AAAA;AAWI,gCAAYA,eAAZ,EAA4DC,OAA5D,EAA0F;AAA9E;AAAAD;AAA8C,KAAgC,CAP1F;;;AACO,6BAAiD,IAAjD;AAOH,SAAKE,QAAL,GAAgBD,OAAhB;;AACA,QAAI,CAACD,eAAL,EAAsB;AAClBA,qBAAe,GAAGC,OAAO,CAACE,aAAR,EAAlB;;AACA,UAAI,CAACH,eAAL,EAAsB;AAClB,cAAM,IAAII,KAAJ,CAAU,gCAAV,CAAN;AACH;AACJ;;AACD,SAAKC,GAAL,CAASL,eAAT;AACH;;AAbDM,wBAAWC,8BAAX,EAAW,oBAAX,EAA6B;SAA7B;AACI,aAAO,KAAKC,aAAZ;AACH,KAF4B;qBAAA;;AAAA,GAA7B;;AAeOD,4CAAP,aAA0B,CAAnB;;AAEAA,uCAAP,UAAWE,eAAX,EAAwC;AACpC,SAAKD,aAAL,GAAqBC,eAArB;AACH,GAFM;;AAIAF,yCAAP;AACI,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKE,iBAAL,GAAyB,IAAzB;AACH,GAHM;;AAKAH,2CAAP;AACI,QAAI,KAAKG,iBAAT,EAA4B;AACxB,WAAKR,QAAL,CAAcS,kBAAd,CAAiC,KAAKD,iBAAtC;;AACA,WAAKA,iBAAL,GAAyB,IAAzB;AACH;;AAED,QAAI,KAAKF,aAAT,EAAwB;AACpB,WAAKN,QAAL,CAAcU,aAAd,CAA4B,KAAKJ,aAAjC;AACH;;AACD,SAAKK,KAAL;AACH,GAVM;;AAWX;AAAC,CA5CD","names":["existingTexture","context","_context","createTexture","Error","set","Object","WebGLHardwareTexture","_webGLTexture","hardwareTexture","_MSAARenderBuffer","deleteRenderbuffer","deleteTexture","reset"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGL/webGLHardwareTexture.ts"],"sourcesContent":["import type { HardwareTextureWrapper } from \"../../Materials/Textures/hardwareTextureWrapper\";\r\nimport type { Nullable } from \"../../types\";\r\n\r\n/** @hidden */\r\nexport class WebGLHardwareTexture implements HardwareTextureWrapper {\r\n    private _webGLTexture: WebGLTexture;\r\n    private _context: WebGLRenderingContext;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    public _MSAARenderBuffer: Nullable<WebGLRenderbuffer> = null;\r\n\r\n    public get underlyingResource(): Nullable<WebGLTexture> {\r\n        return this._webGLTexture;\r\n    }\r\n\r\n    constructor(existingTexture: Nullable<WebGLTexture> = null, context: WebGLRenderingContext) {\r\n        this._context = context as WebGLRenderingContext;\r\n        if (!existingTexture) {\r\n            existingTexture = context.createTexture();\r\n            if (!existingTexture) {\r\n                throw new Error(\"Unable to create webGL texture\");\r\n            }\r\n        }\r\n        this.set(existingTexture);\r\n    }\r\n\r\n    public setUsage(): void {}\r\n\r\n    public set(hardwareTexture: WebGLTexture) {\r\n        this._webGLTexture = hardwareTexture;\r\n    }\r\n\r\n    public reset() {\r\n        this._webGLTexture = null as any;\r\n        this._MSAARenderBuffer = null;\r\n    }\r\n\r\n    public release() {\r\n        if (this._MSAARenderBuffer) {\r\n            this._context.deleteRenderbuffer(this._MSAARenderBuffer);\r\n            this._MSAARenderBuffer = null;\r\n        }\r\n\r\n        if (this._webGLTexture) {\r\n            this._context.deleteTexture(this._webGLTexture);\r\n        }\r\n        this.reset();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}