{"ast":null,"code":"import \"core-js/modules/es.array.index-of.js\";\n\n/**\n * Class used to define a retry strategy when error happens while loading assets\n */\nvar RetryStrategy =\n/** @class */\nfunction () {\n  function RetryStrategy() {}\n  /**\n   * Function used to defines an exponential back off strategy\n   * @param maxRetries defines the maximum number of retries (3 by default)\n   * @param baseInterval defines the interval between retries\n   * @returns the strategy function to use\n   */\n\n\n  RetryStrategy.ExponentialBackoff = function (maxRetries, baseInterval) {\n    if (maxRetries === void 0) {\n      maxRetries = 3;\n    }\n\n    if (baseInterval === void 0) {\n      baseInterval = 500;\n    }\n\n    return function (url, request, retryIndex) {\n      if (request.status !== 0 || retryIndex >= maxRetries || url.indexOf(\"file:\") !== -1) {\n        return -1;\n      }\n\n      return Math.pow(2, retryIndex) * baseInterval;\n    };\n  };\n\n  return RetryStrategy;\n}();\n\nexport { RetryStrategy };","map":{"version":3,"mappings":";;AAEA;;;AAGA;AAAA;AAAA;AAAA,4BAgBC;AAfG;;;;;;;;AAMcA,qCAAd,UAAiCC,UAAjC,EAAiDC,YAAjD,EAAmE;AAAlC;AAAAD;AAAc;;AAAE;AAAAC;AAAkB;;AAC/D,WAAO,UAACC,GAAD,EAAcC,OAAd,EAAmCC,UAAnC,EAAqD;AACxD,UAAID,OAAO,CAACE,MAAR,KAAmB,CAAnB,IAAwBD,UAAU,IAAIJ,UAAtC,IAAoDE,GAAG,CAACI,OAAJ,CAAY,OAAZ,MAAyB,CAAC,CAAlF,EAAqF;AACjF,eAAO,CAAC,CAAR;AACH;;AAED,aAAOC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,UAAZ,IAA0BH,YAAjC;AACH,KAND;AAOH,GARa;;AASlB;AAAC,CAhBD","names":["RetryStrategy","maxRetries","baseInterval","url","request","retryIndex","status","indexOf","Math","pow"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Misc/retryStrategy.ts"],"sourcesContent":["import type { WebRequest } from \"./webRequest\";\r\n\r\n/**\r\n * Class used to define a retry strategy when error happens while loading assets\r\n */\r\nexport class RetryStrategy {\r\n    /**\r\n     * Function used to defines an exponential back off strategy\r\n     * @param maxRetries defines the maximum number of retries (3 by default)\r\n     * @param baseInterval defines the interval between retries\r\n     * @returns the strategy function to use\r\n     */\r\n    public static ExponentialBackoff(maxRetries = 3, baseInterval = 500) {\r\n        return (url: string, request: WebRequest, retryIndex: number): number => {\r\n            if (request.status !== 0 || retryIndex >= maxRetries || url.indexOf(\"file:\") !== -1) {\r\n                return -1;\r\n            }\r\n\r\n            return Math.pow(2, retryIndex) * baseInterval;\r\n        };\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}