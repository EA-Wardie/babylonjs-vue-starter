{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nvar name = \"shadowMapVertexMetric\";\nvar shader = \"#if SM_USEDISTANCE==1\\nvPositionWSM=worldPos.xyz;\\n#endif\\n#if SM_DEPTHTEXTURE==1\\n#ifdef IS_NDC_HALF_ZRANGE\\n#define BIASFACTOR 0.5\\n#else\\n#define BIASFACTOR 1.0\\n#endif\\n#ifdef USE_REVERSE_DEPTHBUFFER\\ngl_Position.z-=biasAndScaleSM.x*gl_Position.w*BIASFACTOR;\\n#else\\ngl_Position.z+=biasAndScaleSM.x*gl_Position.w*BIASFACTOR;\\n#endif\\n#endif\\n#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1\\nzSM=gl_Position.z;\\ngl_Position.z=0.0;\\n#elif SM_USEDISTANCE==0\\n#ifdef USE_REVERSE_DEPTHBUFFER\\nvDepthMetricSM=(-gl_Position.z+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\\n#else\\nvDepthMetricSM=(gl_Position.z+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\\n#endif\\n#endif\\n\"; // Sideeffect\n\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\n\nexport var shadowMapVertexMetric = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,8BAA5B;AAEA,IAAMC,IAAI,GAAG,uBAAb;AACA,IAAMC,MAAM,GAAG,yqBAAf,C,CA0BA;;AACAF,WAAW,CAACG,oBAAZ,CAAiCF,IAAjC,IAAyCC,MAAzC;AACA;;AACA,OAAO,IAAME,qBAAqB,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAA9B","names":["ShaderStore","name","shader","IncludesShadersStore","shadowMapVertexMetric"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/shadowMapVertexMetric.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"shadowMapVertexMetric\";\nconst shader = `#if SM_USEDISTANCE==1\nvPositionWSM=worldPos.xyz;\r#endif\n#if SM_DEPTHTEXTURE==1\n#ifdef IS_NDC_HALF_ZRANGE\n#define BIASFACTOR 0.5\n#else\n#define BIASFACTOR 1.0\n#endif\n#ifdef USE_REVERSE_DEPTHBUFFER\ngl_Position.z-=biasAndScaleSM.x*gl_Position.w*BIASFACTOR;\r#else\ngl_Position.z+=biasAndScaleSM.x*gl_Position.w*BIASFACTOR;\r#endif\n#endif\n#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1\nzSM=gl_Position.z;\rgl_Position.z=0.0;\r#elif SM_USEDISTANCE==0\n#ifdef USE_REVERSE_DEPTHBUFFER\nvDepthMetricSM=(-gl_Position.z+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\r#else\nvDepthMetricSM=(gl_Position.z+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\r#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const shadowMapVertexMetric = { name, shader };\n"]},"metadata":{},"sourceType":"module"}