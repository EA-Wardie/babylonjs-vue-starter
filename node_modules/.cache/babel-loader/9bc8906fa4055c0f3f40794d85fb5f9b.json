{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nvar name = \"passCubePixelShader\";\nvar shader = \"varying vec2 vUV;\\nuniform samplerCube textureSampler;\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) \\n{\\nvec2 uv=vUV*2.0-1.0;\\n#ifdef POSITIVEX\\ngl_FragColor=textureCube(textureSampler,vec3(1.001,uv.y,uv.x));\\n#endif\\n#ifdef NEGATIVEX\\ngl_FragColor=textureCube(textureSampler,vec3(-1.001,uv.y,uv.x));\\n#endif\\n#ifdef POSITIVEY\\ngl_FragColor=textureCube(textureSampler,vec3(uv.y,1.001,uv.x));\\n#endif\\n#ifdef NEGATIVEY\\ngl_FragColor=textureCube(textureSampler,vec3(uv.y,-1.001,uv.x));\\n#endif\\n#ifdef POSITIVEZ\\ngl_FragColor=textureCube(textureSampler,vec3(uv,1.001));\\n#endif\\n#ifdef NEGATIVEZ\\ngl_FragColor=textureCube(textureSampler,vec3(uv,-1.001));\\n#endif\\n}\"; // Sideeffect\n\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\n\nexport var passCubePixelShader = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,2BAA5B;AAEA,IAAMC,IAAI,GAAG,qBAAb;AACA,IAAMC,MAAM,GAAG,kqBAAf,C,CAyBA;;AACAF,WAAW,CAACG,YAAZ,CAAyBF,IAAzB,IAAiCC,MAAjC;AACA;;AACA,OAAO,IAAME,mBAAmB,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAA5B","names":["ShaderStore","name","shader","ShadersStore","passCubePixelShader"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/passCube.fragment.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"passCubePixelShader\";\nconst shader = `varying vec2 vUV;\runiform samplerCube textureSampler;\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) \r{\rvec2 uv=vUV*2.0-1.0;\r#ifdef POSITIVEX\ngl_FragColor=textureCube(textureSampler,vec3(1.001,uv.y,uv.x));\r#endif\n#ifdef NEGATIVEX\ngl_FragColor=textureCube(textureSampler,vec3(-1.001,uv.y,uv.x));\r#endif\n#ifdef POSITIVEY\ngl_FragColor=textureCube(textureSampler,vec3(uv.y,1.001,uv.x));\r#endif\n#ifdef NEGATIVEY\ngl_FragColor=textureCube(textureSampler,vec3(uv.y,-1.001,uv.x));\r#endif\n#ifdef POSITIVEZ\ngl_FragColor=textureCube(textureSampler,vec3(uv,1.001));\r#endif\n#ifdef NEGATIVEZ\ngl_FragColor=textureCube(textureSampler,vec3(uv,-1.001));\r#endif\n}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const passCubePixelShader = { name, shader };\n"]},"metadata":{},"sourceType":"module"}