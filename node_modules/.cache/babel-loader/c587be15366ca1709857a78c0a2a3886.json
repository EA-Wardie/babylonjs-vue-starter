{"ast":null,"code":"import \"core-js/modules/es.function.bind.js\";\nimport { __extends } from \"tslib\";\nimport { Camera } from \"../../Cameras/camera.js\";\nimport { UniversalCamera } from \"../../Cameras/universalCamera.js\";\nimport { Vector3 } from \"../../Maths/math.vector.js\";\nimport { Node } from \"../../node.js\";\nimport { setStereoscopicAnaglyphRigMode } from \"../RigModes/stereoscopicAnaglyphRigMode.js\";\nNode.AddNodeConstructor(\"AnaglyphUniversalCamera\", function (name, scene, options) {\n  return function () {\n    return new AnaglyphUniversalCamera(name, Vector3.Zero(), options.interaxial_distance, scene);\n  };\n});\n/**\n * Camera used to simulate anaglyphic rendering (based on UniversalCamera)\n * @see https://doc.babylonjs.com/features/cameras#anaglyph-cameras\n */\n\nvar AnaglyphUniversalCamera =\n/** @class */\nfunction (_super) {\n  __extends(AnaglyphUniversalCamera, _super);\n  /**\n   * Creates a new AnaglyphUniversalCamera\n   * @param name defines camera name\n   * @param position defines initial position\n   * @param interaxialDistance defines distance between each color axis\n   * @param scene defines the hosting scene\n   */\n\n\n  function AnaglyphUniversalCamera(name, position, interaxialDistance, scene) {\n    var _this = _super.call(this, name, position, scene) || this;\n\n    _this._setRigMode = setStereoscopicAnaglyphRigMode.bind(null, _this);\n    _this.interaxialDistance = interaxialDistance;\n\n    _this.setCameraRigMode(Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH, {\n      interaxialDistance: interaxialDistance\n    });\n\n    return _this;\n  }\n  /**\n   * Gets camera class name\n   * @returns AnaglyphUniversalCamera\n   */\n\n\n  AnaglyphUniversalCamera.prototype.getClassName = function () {\n    return \"AnaglyphUniversalCamera\";\n  };\n\n  return AnaglyphUniversalCamera;\n}(UniversalCamera);\n\nexport { AnaglyphUniversalCamera };","map":{"version":3,"mappings":";;AAAA,SAASA,MAAT,QAAuB,yBAAvB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AAEA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,IAAT,QAAqB,eAArB;AAEA,SAASC,8BAAT,QAA+C,4CAA/C;AAEAD,IAAI,CAACE,kBAAL,CAAwB,yBAAxB,EAAmD,UAACC,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAqB;AACpE,SAAO;AAAM,eAAIC,uBAAJ,CAA4BH,IAA5B,EAAkCJ,OAAO,CAACQ,IAAR,EAAlC,EAAkDF,OAAO,CAACG,mBAA1D,EAA+EJ,KAA/E;AAAqF,GAAlG;AACH,CAFD;AAIA;;;;;AAIA;AAAA;AAAA;AAA6CK;AACzC;;;;;;;;;AAOA,mCAAYN,IAAZ,EAA0BO,QAA1B,EAA6CC,kBAA7C,EAAyEP,KAAzE,EAAsF;AAAtF,gBACIQ,kBAAMT,IAAN,EAAYO,QAAZ,EAAsBN,KAAtB,KAA4B,IADhC;;AAcUS,wBAAcZ,8BAA8B,CAACa,IAA/B,CAAoC,IAApC,EAA0CD,KAA1C,CAAd;AAZNA,SAAI,CAACF,kBAAL,GAA0BA,kBAA1B;;AACAE,SAAI,CAACE,gBAAL,CAAsBlB,MAAM,CAACmB,8BAA7B,EAA6D;AAAEL,wBAAkB,EAAEA;AAAtB,KAA7D;;;AACH;AAED;;;;;;AAIOL,mDAAP;AACI,WAAO,yBAAP;AACH,GAFM;;AAKX;AAAC,CAvBD,CAA6CR,eAA7C","names":["Camera","UniversalCamera","Vector3","Node","setStereoscopicAnaglyphRigMode","AddNodeConstructor","name","scene","options","AnaglyphUniversalCamera","Zero","interaxial_distance","__extends","position","interaxialDistance","_super","_this","bind","setCameraRigMode","RIG_MODE_STEREOSCOPIC_ANAGLYPH"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Cameras/Stereoscopic/anaglyphUniversalCamera.ts"],"sourcesContent":["import { Camera } from \"../../Cameras/camera\";\r\nimport { UniversalCamera } from \"../../Cameras/universalCamera\";\r\nimport type { Scene } from \"../../scene\";\r\nimport { Vector3 } from \"../../Maths/math.vector\";\r\nimport { Node } from \"../../node\";\r\n\r\nimport { setStereoscopicAnaglyphRigMode } from \"../RigModes/stereoscopicAnaglyphRigMode\";\r\n\r\nNode.AddNodeConstructor(\"AnaglyphUniversalCamera\", (name, scene, options) => {\r\n    return () => new AnaglyphUniversalCamera(name, Vector3.Zero(), options.interaxial_distance, scene);\r\n});\r\n\r\n/**\r\n * Camera used to simulate anaglyphic rendering (based on UniversalCamera)\r\n * @see https://doc.babylonjs.com/features/cameras#anaglyph-cameras\r\n */\r\nexport class AnaglyphUniversalCamera extends UniversalCamera {\r\n    /**\r\n     * Creates a new AnaglyphUniversalCamera\r\n     * @param name defines camera name\r\n     * @param position defines initial position\r\n     * @param interaxialDistance defines distance between each color axis\r\n     * @param scene defines the hosting scene\r\n     */\r\n    constructor(name: string, position: Vector3, interaxialDistance: number, scene?: Scene) {\r\n        super(name, position, scene);\r\n        this.interaxialDistance = interaxialDistance;\r\n        this.setCameraRigMode(Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH, { interaxialDistance: interaxialDistance });\r\n    }\r\n\r\n    /**\r\n     * Gets camera class name\r\n     * @returns AnaglyphUniversalCamera\r\n     */\r\n    public getClassName(): string {\r\n        return \"AnaglyphUniversalCamera\";\r\n    }\r\n\r\n    protected _setRigMode = setStereoscopicAnaglyphRigMode.bind(null, this);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}