{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nimport \"./ShadersInclude/shadowMapFragmentExtraDeclaration.js\";\nimport \"./ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"./ShadersInclude/clipPlaneFragment.js\";\nimport \"./ShadersInclude/shadowMapFragment.js\";\nvar name = \"shadowMapPixelShader\";\nvar shader = \"#include<shadowMapFragmentExtraDeclaration>\\n#ifdef ALPHATEST\\nvarying vec2 vUV;\\nuniform sampler2D diffuseSampler;\\n#endif\\n#include<clipPlaneFragmentDeclaration>\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void)\\n{\\n#include<clipPlaneFragment>\\n#ifdef ALPHATEST\\nfloat alphaFromAlphaTexture=texture2D(diffuseSampler,vUV).a;\\nif (alphaFromAlphaTexture<ALPHATESTVALUE)\\ndiscard;\\n#endif\\n#if SM_SOFTTRANSPARENTSHADOW==1\\n#ifdef ALPHATEST\\nif ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM*alphaFromAlphaTexture) discard;\\n#else\\nif ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM) discard;\\n#endif\\n#endif\\n#include<shadowMapFragment>\\n}\"; // Sideeffect\n\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\n\nexport var shadowMapPixelShader = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAO,uDAAP;AACA,OAAO,kDAAP;AACA,OAAO,uCAAP;AACA,OAAO,uCAAP;AAEA,IAAMC,IAAI,GAAG,sBAAb;AACA,IAAMC,MAAM,GAAG,ksBAAf,C,CAwBA;;AACAF,WAAW,CAACG,YAAZ,CAAyBF,IAAzB,IAAiCC,MAAjC;AACA;;AACA,OAAO,IAAME,oBAAoB,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAA7B","names":["ShaderStore","name","shader","ShadersStore","shadowMapPixelShader"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/shadowMap.fragment.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/shadowMapFragmentExtraDeclaration\";\nimport \"./ShadersInclude/clipPlaneFragmentDeclaration\";\nimport \"./ShadersInclude/clipPlaneFragment\";\nimport \"./ShadersInclude/shadowMapFragment\";\n\nconst name = \"shadowMapPixelShader\";\nconst shader = `#include<shadowMapFragmentExtraDeclaration>\n#ifdef ALPHATEST\nvarying vec2 vUV;\runiform sampler2D diffuseSampler;\r#endif\n#include<clipPlaneFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\r#include<clipPlaneFragment>\n#ifdef ALPHATEST\nfloat alphaFromAlphaTexture=texture2D(diffuseSampler,vUV).a;\rif (alphaFromAlphaTexture<ALPHATESTVALUE)\rdiscard;\r#endif\n#if SM_SOFTTRANSPARENTSHADOW==1\n#ifdef ALPHATEST\nif ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM*alphaFromAlphaTexture) discard;\r#else\nif ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM) discard;\r#endif\n#endif\n#include<shadowMapFragment>\n}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const shadowMapPixelShader = { name, shader };\n"]},"metadata":{},"sourceType":"module"}