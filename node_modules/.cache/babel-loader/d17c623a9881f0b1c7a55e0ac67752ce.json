{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the refracted vector from a direction and a normal\n */\n\nvar RefractBlock =\n/** @class */\nfunction (_super) {\n  __extends(RefractBlock, _super);\n  /**\n   * Creates a new RefractBlock\n   * @param name defines the block name\n   */\n\n\n  function RefractBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"incident\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerInput(\"normal\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerInput(\"ior\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  RefractBlock.prototype.getClassName = function () {\n    return \"RefractBlock\";\n  };\n\n  Object.defineProperty(RefractBlock.prototype, \"incident\", {\n    /**\n     * Gets the incident component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RefractBlock.prototype, \"normal\", {\n    /**\n     * Gets the normal component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RefractBlock.prototype, \"ior\", {\n    /**\n     * Gets the index of refraction component\n     */\n    get: function get() {\n      return this._inputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RefractBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RefractBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + \" = refract(\".concat(this.incident.associatedVariableName, \".xyz, \").concat(this.normal.associatedVariableName, \".xyz, \").concat(this.ior.associatedVariableName, \");\\r\\n\");\n    return this;\n  };\n\n  return RefractBlock;\n}(NodeMaterialBlock);\n\nexport { RefractBlock };\nRegisterClass(\"BABYLON.RefractBlock\", RefractBlock);","map":{"version":3,"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,yBAAlC;AACA,SAASC,qCAAT,QAAsD,mDAAtD;AAGA,SAASC,wBAAT,QAAyC,sCAAzC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA;;;;AAGA;AAAA;AAAA;AAAkCC;AAC9B;;;;;;AAIA,wBAAmBC,IAAnB,EAA+B;AAA/B,gBACIC,kBAAMD,IAAN,EAAYH,wBAAwB,CAACK,OAArC,KAA6C,IADjD;;AAGIC,SAAI,CAACC,aAAL,CAAmB,UAAnB,EAA+BR,qCAAqC,CAACS,OAArE;;AACAF,SAAI,CAACC,aAAL,CAAmB,QAAnB,EAA6BR,qCAAqC,CAACS,OAAnE;;AACAF,SAAI,CAACC,aAAL,CAAmB,KAAnB,EAA0BR,qCAAqC,CAACU,KAAhE;;AACAH,SAAI,CAACI,cAAL,CAAoB,QAApB,EAA8BX,qCAAqC,CAACS,OAApE;;AAEAF,SAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDd,qCAAqC,CAACe,OAAxF;;AACAR,SAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDd,qCAAqC,CAACgB,MAAxF;;AACAT,SAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDd,qCAAqC,CAACiB,MAAxF;;AACAV,SAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDd,qCAAqC,CAACe,OAAxF;;AACAR,SAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDd,qCAAqC,CAACgB,MAAxF;;AACAT,SAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDd,qCAAqC,CAACiB,MAAxF;;;AACH;AAED;;;;;;AAIOC,wCAAP;AACI,WAAO,cAAP;AACH,GAFM;;AAOPC,wBAAWD,sBAAX,EAAW,UAAX,EAAmB;AAHnB;;;SAGA;AACI,aAAO,KAAKN,OAAL,CAAa,CAAb,CAAP;AACH,KAFkB;qBAAA;;AAAA,GAAnB;AAOAO,wBAAWD,sBAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA;AACI,aAAO,KAAKN,OAAL,CAAa,CAAb,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAOAO,wBAAWD,sBAAX,EAAW,KAAX,EAAc;AAHd;;;SAGA;AACI,aAAO,KAAKN,OAAL,CAAa,CAAb,CAAP;AACH,KAFa;qBAAA;;AAAA,GAAd;AAOAO,wBAAWD,sBAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA;AACI,aAAO,KAAKE,QAAL,CAAc,CAAd,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;;AAIUF,uCAAV,UAAsBG,KAAtB,EAAmD;AAC/ChB,qBAAMiB,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBF,KAAlB;;AAEA,QAAMG,MAAM,GAAG,KAAKJ,QAAL,CAAc,CAAd,CAAf;AAEAC,SAAK,CAACI,iBAAN,IACI,KAAKC,cAAL,CAAoBF,MAApB,EAA4BH,KAA5B,IACA,qBAAc,KAAKM,QAAL,CAAcC,sBAA5B,EAAkD,QAAlD,EAAkDC,MAAlD,CAA2D,KAAKC,MAAL,CAAYF,sBAAvE,EAA6F,QAA7F,EAA6FC,MAA7F,CAAsG,KAAKE,GAAL,CAASH,sBAA/G,EAAqI,QAArI,CAFJ;AAIA,WAAO,IAAP;AACH,GAVS;;AAWd;AAAC,CApED,CAAkC7B,iBAAlC;;;AAsEAG,aAAa,CAAC,sBAAD,EAAyBgB,YAAzB,CAAb","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Neutral","_this","registerInput","Vector3","Float","registerOutput","_inputs","acceptedConnectionPointTypes","push","Vector4","Color3","Color4","RefractBlock","Object","_outputs","state","_buildBlock","call","output","compilationString","_declareOutput","incident","associatedVariableName","concat","normal","ior"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/refractBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * Block used to get the refracted vector from a direction and a normal\r\n */\r\nexport class RefractBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new RefractBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"incident\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this.registerInput(\"normal\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this.registerInput(\"ior\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\r\n        this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"RefractBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the incident component\r\n     */\r\n    public get incident(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the normal component\r\n     */\r\n    public get normal(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the index of refraction component\r\n     */\r\n    public get ior(): NodeMaterialConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        state.compilationString +=\r\n            this._declareOutput(output, state) +\r\n            ` = refract(${this.incident.associatedVariableName}.xyz, ${this.normal.associatedVariableName}.xyz, ${this.ior.associatedVariableName});\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.RefractBlock\", RefractBlock);\r\n"]},"metadata":{},"sourceType":"module"}