{"ast":null,"code":"import _typeof from \"/home/ea/Development/Babylon/red/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-names.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport { EndsWith } from \"./stringTools.js\";\nimport { Logger } from \"./logger.js\";\n\nvar CloneValue = function CloneValue(source, destinationObject) {\n  if (!source) {\n    return null;\n  }\n\n  if (source.getClassName && source.getClassName() === \"Mesh\") {\n    return null;\n  }\n\n  if (source.getClassName && source.getClassName() === \"SubMesh\") {\n    return source.clone(destinationObject);\n  } else if (source.clone) {\n    return source.clone();\n  }\n\n  return null;\n};\n\nfunction GetAllPropertyNames(obj) {\n  var props = [];\n\n  do {\n    Object.getOwnPropertyNames(obj).forEach(function (prop) {\n      if (props.indexOf(prop) === -1) {\n        props.push(prop);\n      }\n    });\n  } while (obj = Object.getPrototypeOf(obj));\n\n  return props;\n}\n/**\n * Class containing a set of static utilities functions for deep copy.\n */\n\n\nvar DeepCopier =\n/** @class */\nfunction () {\n  function DeepCopier() {}\n  /**\n   * Tries to copy an object by duplicating every property\n   * @param source defines the source object\n   * @param destination defines the target object\n   * @param doNotCopyList defines a list of properties to avoid\n   * @param mustCopyList defines a list of properties to copy (even if they start with _)\n   */\n\n\n  DeepCopier.DeepCopy = function (source, destination, doNotCopyList, mustCopyList) {\n    var properties = GetAllPropertyNames(source);\n\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n\n      if (prop[0] === \"_\" && (!mustCopyList || mustCopyList.indexOf(prop) === -1)) {\n        continue;\n      }\n\n      if (EndsWith(prop, \"Observable\")) {\n        continue;\n      }\n\n      if (doNotCopyList && doNotCopyList.indexOf(prop) !== -1) {\n        continue;\n      }\n\n      var sourceValue = source[prop];\n\n      var typeOfSourceValue = _typeof(sourceValue);\n\n      if (typeOfSourceValue === \"function\") {\n        continue;\n      }\n\n      try {\n        if (typeOfSourceValue === \"object\") {\n          if (sourceValue instanceof Array) {\n            destination[prop] = [];\n\n            if (sourceValue.length > 0) {\n              if (_typeof(sourceValue[0]) == \"object\") {\n                for (var index = 0; index < sourceValue.length; index++) {\n                  var clonedValue = CloneValue(sourceValue[index], destination);\n\n                  if (destination[prop].indexOf(clonedValue) === -1) {\n                    // Test if auto inject was not done\n                    destination[prop].push(clonedValue);\n                  }\n                }\n              } else {\n                destination[prop] = sourceValue.slice(0);\n              }\n            }\n          } else {\n            destination[prop] = CloneValue(sourceValue, destination);\n          }\n        } else {\n          destination[prop] = sourceValue;\n        }\n      } catch (e) {\n        // Log a warning (it could be because of a read-only property)\n        Logger.Warn(e.message);\n      }\n    }\n  };\n\n  return DeepCopier;\n}();\n\nexport { DeepCopier };","map":{"version":3,"mappings":"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","names":["EndsWith","Logger","CloneValue","source","destinationObject","getClassName","clone","GetAllPropertyNames","obj","props","Object","getOwnPropertyNames","forEach","prop","indexOf","push","getPrototypeOf","DeepCopier","destination","doNotCopyList","mustCopyList","properties","_i","sourceValue","typeOfSourceValue","Array","length","index","clonedValue","slice","e","Warn","message"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Misc/deepCopier.ts"],"sourcesContent":["import { EndsWith } from \"./stringTools\";\r\nimport { Logger } from \"./logger\";\r\n\r\nconst CloneValue = (source: any, destinationObject: any) => {\r\n    if (!source) {\r\n        return null;\r\n    }\r\n\r\n    if (source.getClassName && source.getClassName() === \"Mesh\") {\r\n        return null;\r\n    }\r\n\r\n    if (source.getClassName && source.getClassName() === \"SubMesh\") {\r\n        return source.clone(destinationObject);\r\n    } else if (source.clone) {\r\n        return source.clone();\r\n    }\r\n    return null;\r\n};\r\n\r\nfunction GetAllPropertyNames(obj: any): string[] {\r\n    const props: string[] = [];\r\n\r\n    do {\r\n        Object.getOwnPropertyNames(obj).forEach(function (prop) {\r\n            if (props.indexOf(prop) === -1) {\r\n                props.push(prop);\r\n            }\r\n        });\r\n    } while ((obj = Object.getPrototypeOf(obj)));\r\n\r\n    return props;\r\n}\r\n\r\n/**\r\n * Class containing a set of static utilities functions for deep copy.\r\n */\r\nexport class DeepCopier {\r\n    /**\r\n     * Tries to copy an object by duplicating every property\r\n     * @param source defines the source object\r\n     * @param destination defines the target object\r\n     * @param doNotCopyList defines a list of properties to avoid\r\n     * @param mustCopyList defines a list of properties to copy (even if they start with _)\r\n     */\r\n    public static DeepCopy(source: any, destination: any, doNotCopyList?: string[], mustCopyList?: string[]): void {\r\n        const properties = GetAllPropertyNames(source);\r\n        for (const prop of properties) {\r\n            if (prop[0] === \"_\" && (!mustCopyList || mustCopyList.indexOf(prop) === -1)) {\r\n                continue;\r\n            }\r\n\r\n            if (EndsWith(prop, \"Observable\")) {\r\n                continue;\r\n            }\r\n\r\n            if (doNotCopyList && doNotCopyList.indexOf(prop) !== -1) {\r\n                continue;\r\n            }\r\n\r\n            const sourceValue = source[prop];\r\n            const typeOfSourceValue = typeof sourceValue;\r\n\r\n            if (typeOfSourceValue === \"function\") {\r\n                continue;\r\n            }\r\n\r\n            try {\r\n                if (typeOfSourceValue === \"object\") {\r\n                    if (sourceValue instanceof Array) {\r\n                        destination[prop] = [];\r\n\r\n                        if (sourceValue.length > 0) {\r\n                            if (typeof sourceValue[0] == \"object\") {\r\n                                for (let index = 0; index < sourceValue.length; index++) {\r\n                                    const clonedValue = CloneValue(sourceValue[index], destination);\r\n\r\n                                    if (destination[prop].indexOf(clonedValue) === -1) {\r\n                                        // Test if auto inject was not done\r\n                                        destination[prop].push(clonedValue);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                destination[prop] = sourceValue.slice(0);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        destination[prop] = CloneValue(sourceValue, destination);\r\n                    }\r\n                } else {\r\n                    destination[prop] = sourceValue;\r\n                }\r\n            } catch (e) {\r\n                // Log a warning (it could be because of a read-only property)\r\n                Logger.Warn(e.message);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}