{"ast":null,"code":"/**\n * Root class for all node material optimizers\n */\nvar NodeMaterialOptimizer =\n/** @class */\nfunction () {\n  function NodeMaterialOptimizer() {}\n  /**\n   * Function used to optimize a NodeMaterial graph\n   * @param _vertexOutputNodes defines the list of output nodes for the vertex shader\n   * @param _fragmentOutputNodes defines the list of output nodes for the fragment shader\n   */\n\n\n  NodeMaterialOptimizer.prototype.optimize = function (_vertexOutputNodes, _fragmentOutputNodes) {// Do nothing by default\n  };\n\n  return NodeMaterialOptimizer;\n}();\n\nexport { NodeMaterialOptimizer };","map":{"version":3,"mappings":"AAEA;;;AAGA;AAAA;AAAA;AAAA,oCASC;AARG;;;;;;;AAKOA,6CAAP,UAAgBC,kBAAhB,EAAyDC,oBAAzD,EAAkG,CAC9F;AACH,GAFM;;AAGX;AAAC,CATD","names":["NodeMaterialOptimizer","_vertexOutputNodes","_fragmentOutputNodes"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts"],"sourcesContent":["import type { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\n\r\n/**\r\n * Root class for all node material optimizers\r\n */\r\nexport class NodeMaterialOptimizer {\r\n    /**\r\n     * Function used to optimize a NodeMaterial graph\r\n     * @param _vertexOutputNodes defines the list of output nodes for the vertex shader\r\n     * @param _fragmentOutputNodes defines the list of output nodes for the fragment shader\r\n     */\r\n    public optimize(_vertexOutputNodes: NodeMaterialBlock[], _fragmentOutputNodes: NodeMaterialBlock[]) {\r\n        // Do nothing by default\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}