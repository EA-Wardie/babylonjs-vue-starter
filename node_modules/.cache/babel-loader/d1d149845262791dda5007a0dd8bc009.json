{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { UniversalCamera } from \"./universalCamera.js\";\nimport { Vector3 } from \"../Maths/math.vector.js\";\nimport { Node } from \"../node.js\";\nNode.AddNodeConstructor(\"GamepadCamera\", function (name, scene) {\n  return function () {\n    return new GamepadCamera(name, Vector3.Zero(), scene);\n  };\n});\n/**\n * This represents a FPS type of camera. This is only here for back compat purpose.\n * Please use the UniversalCamera instead as both are identical.\n * @see https://doc.babylonjs.com/features/cameras#universal-camera\n */\n\nvar GamepadCamera =\n/** @class */\nfunction (_super) {\n  __extends(GamepadCamera, _super);\n  /**\n   * Instantiates a new Gamepad Camera\n   * This represents a FPS type of camera. This is only here for back compat purpose.\n   * Please use the UniversalCamera instead as both are identical.\n   * @see https://doc.babylonjs.com/features/cameras#universal-camera\n   * @param name Define the name of the camera in the scene\n   * @param position Define the start position of the camera in the scene\n   * @param scene Define the scene the camera belongs to\n   */\n\n\n  function GamepadCamera(name, position, scene) {\n    return _super.call(this, name, position, scene) || this;\n  }\n  /**\n   * Gets the current object class name.\n   * @return the class name\n   */\n\n\n  GamepadCamera.prototype.getClassName = function () {\n    return \"GamepadCamera\";\n  };\n\n  return GamepadCamera;\n}(UniversalCamera);\n\nexport { GamepadCamera };","map":{"version":3,"mappings":";AAAA,SAASA,eAAT,QAAgC,sBAAhC;AAEA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,IAAT,QAAqB,YAArB;AACAA,IAAI,CAACC,kBAAL,CAAwB,eAAxB,EAAyC,UAACC,IAAD,EAAOC,KAAP,EAAY;AACjD,SAAO;AAAM,eAAIC,aAAJ,CAAkBF,IAAlB,EAAwBH,OAAO,CAACM,IAAR,EAAxB,EAAwCF,KAAxC;AAA8C,GAA3D;AACH,CAFD;AAIA;;;;;;AAKA;AAAA;AAAA;AAAmCG;AAC/B;;;;;;;;;;;AASA,yBAAYJ,IAAZ,EAA0BK,QAA1B,EAA6CJ,KAA7C,EAA0D;WACtDK,kBAAMN,IAAN,EAAYK,QAAZ,EAAsBJ,KAAtB,KAA4B;AAC/B;AAED;;;;;;AAIOC,yCAAP;AACI,WAAO,eAAP;AACH,GAFM;;AAGX;AAAC,CArBD,CAAmCN,eAAnC","names":["UniversalCamera","Vector3","Node","AddNodeConstructor","name","scene","GamepadCamera","Zero","__extends","position","_super"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Cameras/gamepadCamera.ts"],"sourcesContent":["import { UniversalCamera } from \"./universalCamera\";\r\nimport type { Scene } from \"../scene\";\r\nimport { Vector3 } from \"../Maths/math.vector\";\r\nimport { Node } from \"../node\";\r\nNode.AddNodeConstructor(\"GamepadCamera\", (name, scene) => {\r\n    return () => new GamepadCamera(name, Vector3.Zero(), scene);\r\n});\r\n\r\n/**\r\n * This represents a FPS type of camera. This is only here for back compat purpose.\r\n * Please use the UniversalCamera instead as both are identical.\r\n * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n */\r\nexport class GamepadCamera extends UniversalCamera {\r\n    /**\r\n     * Instantiates a new Gamepad Camera\r\n     * This represents a FPS type of camera. This is only here for back compat purpose.\r\n     * Please use the UniversalCamera instead as both are identical.\r\n     * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n     * @param name Define the name of the camera in the scene\r\n     * @param position Define the start position of the camera in the scene\r\n     * @param scene Define the scene the camera belongs to\r\n     */\r\n    constructor(name: string, position: Vector3, scene?: Scene) {\r\n        super(name, position, scene);\r\n    }\r\n\r\n    /**\r\n     * Gets the current object class name.\r\n     * @return the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"GamepadCamera\";\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}