{"ast":null,"code":"import { WebGPUEngine } from \"../../webgpuEngine.js\";\n\nWebGPUEngine.prototype.updateVideoTexture = function (texture, video, invertY) {\n  var _this = this;\n\n  var _a;\n\n  if (!texture || texture._isDisabled) {\n    return;\n  }\n\n  if (this._videoTextureSupported === undefined) {\n    this._videoTextureSupported = true;\n  }\n\n  var gpuTextureWrapper = texture._hardwareTexture;\n\n  if (!((_a = texture._hardwareTexture) === null || _a === void 0 ? void 0 : _a.underlyingResource)) {\n    gpuTextureWrapper = this._textureHelper.createGPUTextureForInternalTexture(texture);\n  }\n\n  this.createImageBitmap(video).then(function (bitmap) {\n    _this._textureHelper.updateTexture(bitmap, texture, texture.width, texture.height, texture.depth, gpuTextureWrapper.format, 0, 0, !invertY, false, 0, 0);\n\n    if (texture.generateMipMaps) {\n      _this._generateMipmaps(texture, _this._uploadEncoder);\n    }\n\n    texture.isReady = true;\n  })[\"catch\"](function () {\n    // Sometimes createImageBitmap(video) fails with \"Failed to execute 'createImageBitmap' on 'Window': The provided element's player has no current data.\"\n    // Just keep going on\n    texture.isReady = true;\n  });\n};","map":{"version":3,"mappings":"AAEA,SAASA,YAAT,QAA6B,uBAA7B;;AAGAA,YAAY,CAACC,SAAb,CAAuBC,kBAAvB,GAA4C,UAAUC,OAAV,EAA8CC,KAA9C,EAAuEC,OAAvE,EAAuF;AAAvF;;;;AACxC,MAAI,CAACF,OAAD,IAAYA,OAAO,CAACG,WAAxB,EAAqC;AACjC;AACH;;AAED,MAAI,KAAKC,sBAAL,KAAgCC,SAApC,EAA+C;AAC3C,SAAKD,sBAAL,GAA8B,IAA9B;AACH;;AAED,MAAIE,iBAAiB,GAAGN,OAAO,CAACO,gBAAhC;;AAEA,MAAI,EAAC,aAAO,CAACA,gBAAR,MAAwB,IAAxB,IAAwBC,aAAxB,GAAwB,MAAxB,GAAwBA,GAAEC,kBAA3B,CAAJ,EAAmD;AAC/CH,qBAAiB,GAAG,KAAKI,cAAL,CAAoBC,kCAApB,CAAuDX,OAAvD,CAApB;AACH;;AAED,OAAKY,iBAAL,CAAuBX,KAAvB,EACKY,IADL,CACU,UAACC,MAAD,EAAO;AACTC,SAAI,CAACL,cAAL,CAAoBM,aAApB,CAAkCF,MAAlC,EAA0Cd,OAA1C,EAAmDA,OAAO,CAACiB,KAA3D,EAAkEjB,OAAO,CAACkB,MAA1E,EAAkFlB,OAAO,CAACmB,KAA1F,EAAiGb,iBAAiB,CAACc,MAAnH,EAA2H,CAA3H,EAA8H,CAA9H,EAAiI,CAAClB,OAAlI,EAA2I,KAA3I,EAAkJ,CAAlJ,EAAqJ,CAArJ;;AACA,QAAIF,OAAO,CAACqB,eAAZ,EAA6B;AACzBN,WAAI,CAACO,gBAAL,CAAsBtB,OAAtB,EAA+Be,KAAI,CAACQ,cAApC;AACH;;AAEDvB,WAAO,CAACwB,OAAR,GAAkB,IAAlB;AACH,GARL,WASW;AACH;AACA;AACAxB,WAAO,CAACwB,OAAR,GAAkB,IAAlB;AACH,GAbL;AAcH,CA7BD","names":["WebGPUEngine","prototype","updateVideoTexture","texture","video","invertY","_isDisabled","_videoTextureSupported","undefined","gpuTextureWrapper","_hardwareTexture","_a","underlyingResource","_textureHelper","createGPUTextureForInternalTexture","createImageBitmap","then","bitmap","_this","updateTexture","width","height","depth","format","generateMipMaps","_generateMipmaps","_uploadEncoder","isReady"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Engines/WebGPU/Extensions/engine.videoTexture.ts"],"sourcesContent":["import type { InternalTexture } from \"../../../Materials/Textures/internalTexture\";\r\nimport type { Nullable } from \"../../../types\";\r\nimport { WebGPUEngine } from \"../../webgpuEngine\";\r\nimport type { WebGPUHardwareTexture } from \"../webgpuHardwareTexture\";\r\n\r\nWebGPUEngine.prototype.updateVideoTexture = function (texture: Nullable<InternalTexture>, video: HTMLVideoElement, invertY: boolean): void {\r\n    if (!texture || texture._isDisabled) {\r\n        return;\r\n    }\r\n\r\n    if (this._videoTextureSupported === undefined) {\r\n        this._videoTextureSupported = true;\r\n    }\r\n\r\n    let gpuTextureWrapper = texture._hardwareTexture as WebGPUHardwareTexture;\r\n\r\n    if (!texture._hardwareTexture?.underlyingResource) {\r\n        gpuTextureWrapper = this._textureHelper.createGPUTextureForInternalTexture(texture);\r\n    }\r\n\r\n    this.createImageBitmap(video)\r\n        .then((bitmap) => {\r\n            this._textureHelper.updateTexture(bitmap, texture, texture.width, texture.height, texture.depth, gpuTextureWrapper.format, 0, 0, !invertY, false, 0, 0);\r\n            if (texture.generateMipMaps) {\r\n                this._generateMipmaps(texture, this._uploadEncoder);\r\n            }\r\n\r\n            texture.isReady = true;\r\n        })\r\n        .catch(() => {\r\n            // Sometimes createImageBitmap(video) fails with \"Failed to execute 'createImageBitmap' on 'Window': The provided element's player has no current data.\"\r\n            // Just keep going on\r\n            texture.isReady = true;\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}