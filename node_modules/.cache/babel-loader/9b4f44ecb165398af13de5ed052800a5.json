{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used to discard a pixel if a value is smaller than a cutoff\n */\n\nvar DiscardBlock =\n/** @class */\nfunction (_super) {\n  __extends(DiscardBlock, _super);\n  /**\n   * Create a new DiscardBlock\n   * @param name defines the block name\n   */\n\n\n  function DiscardBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment, true) || this;\n\n    _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerInput(\"cutoff\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  DiscardBlock.prototype.getClassName = function () {\n    return \"DiscardBlock\";\n  };\n\n  Object.defineProperty(DiscardBlock.prototype, \"value\", {\n    /**\n     * Gets the color input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DiscardBlock.prototype, \"cutoff\", {\n    /**\n     * Gets the cutoff input component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DiscardBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    state.sharedData.hints.needAlphaTesting = true;\n\n    if (!this.cutoff.isConnected || !this.value.isConnected) {\n      return;\n    }\n\n    state.compilationString += \"if (\".concat(this.value.associatedVariableName, \" < \").concat(this.cutoff.associatedVariableName, \") discard;\\r\\n\");\n    return this;\n  };\n\n  return DiscardBlock;\n}(NodeMaterialBlock);\n\nexport { DiscardBlock };\nRegisterClass(\"BABYLON.DiscardBlock\", DiscardBlock);","map":{"version":3,"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,4BAAlC;AACA,SAASC,qCAAT,QAAsD,sDAAtD;AAEA,SAASC,wBAAT,QAAyC,yCAAzC;AAEA,SAASC,aAAT,QAA8B,+BAA9B;AACA;;;;AAGA;AAAA;AAAA;AAAkCC;AAC9B;;;;;;AAIA,wBAAmBC,IAAnB,EAA+B;AAA/B,gBACIC,kBAAMD,IAAN,EAAYH,wBAAwB,CAACK,QAArC,EAA+C,IAA/C,KAAoD,IADxD;;AAGIC,SAAI,CAACC,aAAL,CAAmB,OAAnB,EAA4BR,qCAAqC,CAACS,KAAlE,EAAyE,IAAzE;;AACAF,SAAI,CAACC,aAAL,CAAmB,QAAnB,EAA6BR,qCAAqC,CAACS,KAAnE,EAA0E,IAA1E;;;AACH;AAED;;;;;;AAIOC,wCAAP;AACI,WAAO,cAAP;AACH,GAFM;;AAOPC,wBAAWD,sBAAX,EAAW,OAAX,EAAgB;AAHhB;;;SAGA;AACI,aAAO,KAAKE,OAAL,CAAa,CAAb,CAAP;AACH,KAFe;qBAAA;;AAAA,GAAhB;AAOAD,wBAAWD,sBAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA;AACI,aAAO,KAAKE,OAAL,CAAa,CAAb,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;;AAIUF,uCAAV,UAAsBG,KAAtB,EAAmD;AAC/CR,qBAAMS,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBF,KAAlB;;AAEAA,SAAK,CAACG,UAAN,CAAiBC,KAAjB,CAAuBC,gBAAvB,GAA0C,IAA1C;;AAEA,QAAI,CAAC,KAAKC,MAAL,CAAYC,WAAb,IAA4B,CAAC,KAAKC,KAAL,CAAWD,WAA5C,EAAyD;AACrD;AACH;;AAEDP,SAAK,CAACS,iBAAN,IAA2B,cAAO,KAAKD,KAAL,CAAWE,sBAAlB,EAAwC,KAAxC,EAAwCC,MAAxC,CAA8C,KAAKL,MAAL,CAAYI,sBAA1D,EAAgF,gBAAhF,CAA3B;AAEA,WAAO,IAAP;AACH,GAZS;;AAad;AAAC,CA/CD,CAAkCxB,iBAAlC;;;AAiDAG,aAAa,CAAC,sBAAD,EAAyBQ,YAAzB,CAAb","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Fragment","_this","registerInput","Float","DiscardBlock","Object","_inputs","state","_buildBlock","call","sharedData","hints","needAlphaTesting","cutoff","isConnected","value","compilationString","associatedVariableName","concat"],"sourceRoot":"","sources":["../../../../../../../../lts/core/generated/Materials/Node/Blocks/Fragment/discardBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../../nodeMaterialBuildState\";\r\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets\";\r\nimport type { NodeMaterialConnectionPoint } from \"../../nodeMaterialBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\n/**\r\n * Block used to discard a pixel if a value is smaller than a cutoff\r\n */\r\nexport class DiscardBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Create a new DiscardBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Fragment, true);\r\n\r\n        this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.Float, true);\r\n        this.registerInput(\"cutoff\", NodeMaterialBlockConnectionPointTypes.Float, true);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"DiscardBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the color input component\r\n     */\r\n    public get value(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the cutoff input component\r\n     */\r\n    public get cutoff(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        state.sharedData.hints.needAlphaTesting = true;\r\n\r\n        if (!this.cutoff.isConnected || !this.value.isConnected) {\r\n            return;\r\n        }\r\n\r\n        state.compilationString += `if (${this.value.associatedVariableName} < ${this.cutoff.associatedVariableName}) discard;\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.DiscardBlock\", DiscardBlock);\r\n"]},"metadata":{},"sourceType":"module"}