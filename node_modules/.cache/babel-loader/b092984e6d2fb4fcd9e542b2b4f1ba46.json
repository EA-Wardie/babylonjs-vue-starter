{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { Vector3 } from \"../Maths/math.vector.js\";\n/**\n * A cursor which tracks a point on a path\n */\n\nvar PathCursor =\n/** @class */\nfunction () {\n  /**\n   * Initializes the path cursor\n   * @param _path The path to track\n   */\n  function PathCursor(_path) {\n    this._path = _path;\n    /**\n     * Stores path cursor callbacks for when an onchange event is triggered\n     */\n\n    this._onchange = new Array();\n    /**\n     * The value of the path cursor\n     */\n\n    this.value = 0;\n    /**\n     * The animation array of the path cursor\n     */\n\n    this.animations = new Array();\n  }\n  /**\n   * Gets the cursor point on the path\n   * @returns A point on the path cursor at the cursor location\n   */\n\n\n  PathCursor.prototype.getPoint = function () {\n    var point = this._path.getPointAtLengthPosition(this.value);\n\n    return new Vector3(point.x, 0, point.y);\n  };\n  /**\n   * Moves the cursor ahead by the step amount\n   * @param step The amount to move the cursor forward\n   * @returns This path cursor\n   */\n\n\n  PathCursor.prototype.moveAhead = function (step) {\n    if (step === void 0) {\n      step = 0.002;\n    }\n\n    this.move(step);\n    return this;\n  };\n  /**\n   * Moves the cursor behind by the step amount\n   * @param step The amount to move the cursor back\n   * @returns This path cursor\n   */\n\n\n  PathCursor.prototype.moveBack = function (step) {\n    if (step === void 0) {\n      step = 0.002;\n    }\n\n    this.move(-step);\n    return this;\n  };\n  /**\n   * Moves the cursor by the step amount\n   * If the step amount is greater than one, an exception is thrown\n   * @param step The amount to move the cursor\n   * @returns This path cursor\n   */\n\n\n  PathCursor.prototype.move = function (step) {\n    if (Math.abs(step) > 1) {\n      throw \"step size should be less than 1.\";\n    }\n\n    this.value += step;\n\n    this._ensureLimits();\n\n    this._raiseOnChange();\n\n    return this;\n  };\n  /**\n   * Ensures that the value is limited between zero and one\n   * @returns This path cursor\n   */\n\n\n  PathCursor.prototype._ensureLimits = function () {\n    while (this.value > 1) {\n      this.value -= 1;\n    }\n\n    while (this.value < 0) {\n      this.value += 1;\n    }\n\n    return this;\n  };\n  /**\n   * Runs onchange callbacks on change (used by the animation engine)\n   * @returns This path cursor\n   */\n\n\n  PathCursor.prototype._raiseOnChange = function () {\n    var _this = this;\n\n    this._onchange.forEach(function (f) {\n      return f(_this);\n    });\n\n    return this;\n  };\n  /**\n   * Executes a function on change\n   * @param f A path cursor onchange callback\n   * @returns This path cursor\n   */\n\n\n  PathCursor.prototype.onchange = function (f) {\n    this._onchange.push(f);\n\n    return this;\n  };\n\n  return PathCursor;\n}();\n\nexport { PathCursor };","map":{"version":3,"mappings":";;;AAAA,SAASA,OAAT,QAAwB,yBAAxB;AAGA;;;;AAGA;AAAA;AAAA;AAgBI;;;;AAIA,sBAAoBC,KAApB,EAAgC;AAAZ;AAnBpB;;;;AAGQ,qBAAY,IAAIC,KAAJ,EAAZ;AAER;;;;AAGA,iBAAgB,CAAhB;AAEA;;;;AAGA,sBAAa,IAAIA,KAAJ,EAAb;AAMoC;AAEpC;;;;;;AAIOC,kCAAP;AACI,QAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWI,wBAAX,CAAoC,KAAKC,KAAzC,CAAd;;AACA,WAAO,IAAIN,OAAJ,CAAYI,KAAK,CAACG,CAAlB,EAAqB,CAArB,EAAwBH,KAAK,CAACI,CAA9B,CAAP;AACH,GAHM;AAKP;;;;;;;AAKOL,mCAAP,UAAiBM,IAAjB,EAAqC;AAApB;AAAAA;AAAoB;;AACjC,SAAKC,IAAL,CAAUD,IAAV;AAEA,WAAO,IAAP;AACH,GAJM;AAMP;;;;;;;AAKON,kCAAP,UAAgBM,IAAhB,EAAoC;AAApB;AAAAA;AAAoB;;AAChC,SAAKC,IAAL,CAAU,CAACD,IAAX;AAEA,WAAO,IAAP;AACH,GAJM;AAMP;;;;;;;;AAMON,8BAAP,UAAYM,IAAZ,EAAwB;AACpB,QAAIE,IAAI,CAACC,GAAL,CAASH,IAAT,IAAiB,CAArB,EAAwB;AACpB,YAAM,kCAAN;AACH;;AAED,SAAKH,KAAL,IAAcG,IAAd;;AACA,SAAKI,aAAL;;AACA,SAAKC,cAAL;;AAEA,WAAO,IAAP;AACH,GAVM;AAYP;;;;;;AAIQX,uCAAR;AACI,WAAO,KAAKG,KAAL,GAAa,CAApB,EAAuB;AACnB,WAAKA,KAAL,IAAc,CAAd;AACH;;AACD,WAAO,KAAKA,KAAL,GAAa,CAApB,EAAuB;AACnB,WAAKA,KAAL,IAAc,CAAd;AACH;;AAED,WAAO,IAAP;AACH,GATO;AAWR;;;;;;AAIQH,wCAAR;AAAA;;AACI,SAAKY,SAAL,CAAeC,OAAf,CAAuB,UAACC,CAAD,EAAE;AAAK,cAAC,CAACC,KAAD,CAAD;AAAO,KAArC;;AAEA,WAAO,IAAP;AACH,GAJO;AAMR;;;;;;;AAKOf,kCAAP,UAAgBc,CAAhB,EAA+C;AAC3C,SAAKF,SAAL,CAAeI,IAAf,CAAoBF,CAApB;;AAEA,WAAO,IAAP;AACH,GAJM;;AAKX;AAAC,CA1GD","names":["Vector3","_path","Array","PathCursor","point","getPointAtLengthPosition","value","x","y","step","move","Math","abs","_ensureLimits","_raiseOnChange","_onchange","forEach","f","_this","push"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Animations/pathCursor.ts"],"sourcesContent":["import { Vector3 } from \"../Maths/math.vector\";\r\nimport type { Path2 } from \"../Maths/math.path\";\r\n\r\n/**\r\n * A cursor which tracks a point on a path\r\n */\r\nexport class PathCursor {\r\n    /**\r\n     * Stores path cursor callbacks for when an onchange event is triggered\r\n     */\r\n    private _onchange = new Array<(cursor: PathCursor) => void>();\r\n\r\n    /**\r\n     * The value of the path cursor\r\n     */\r\n    value: number = 0;\r\n\r\n    /**\r\n     * The animation array of the path cursor\r\n     */\r\n    animations = new Array<Animation>();\r\n\r\n    /**\r\n     * Initializes the path cursor\r\n     * @param _path The path to track\r\n     */\r\n    constructor(private _path: Path2) {}\r\n\r\n    /**\r\n     * Gets the cursor point on the path\r\n     * @returns A point on the path cursor at the cursor location\r\n     */\r\n    public getPoint(): Vector3 {\r\n        const point = this._path.getPointAtLengthPosition(this.value);\r\n        return new Vector3(point.x, 0, point.y);\r\n    }\r\n\r\n    /**\r\n     * Moves the cursor ahead by the step amount\r\n     * @param step The amount to move the cursor forward\r\n     * @returns This path cursor\r\n     */\r\n    public moveAhead(step: number = 0.002): PathCursor {\r\n        this.move(step);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Moves the cursor behind by the step amount\r\n     * @param step The amount to move the cursor back\r\n     * @returns This path cursor\r\n     */\r\n    public moveBack(step: number = 0.002): PathCursor {\r\n        this.move(-step);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Moves the cursor by the step amount\r\n     * If the step amount is greater than one, an exception is thrown\r\n     * @param step The amount to move the cursor\r\n     * @returns This path cursor\r\n     */\r\n    public move(step: number): PathCursor {\r\n        if (Math.abs(step) > 1) {\r\n            throw \"step size should be less than 1.\";\r\n        }\r\n\r\n        this.value += step;\r\n        this._ensureLimits();\r\n        this._raiseOnChange();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Ensures that the value is limited between zero and one\r\n     * @returns This path cursor\r\n     */\r\n    private _ensureLimits(): PathCursor {\r\n        while (this.value > 1) {\r\n            this.value -= 1;\r\n        }\r\n        while (this.value < 0) {\r\n            this.value += 1;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Runs onchange callbacks on change (used by the animation engine)\r\n     * @returns This path cursor\r\n     */\r\n    private _raiseOnChange(): PathCursor {\r\n        this._onchange.forEach((f) => f(this));\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Executes a function on change\r\n     * @param f A path cursor onchange callback\r\n     * @returns This path cursor\r\n     */\r\n    public onchange(f: (cursor: PathCursor) => void): PathCursor {\r\n        this._onchange.push(f);\r\n\r\n        return this;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}