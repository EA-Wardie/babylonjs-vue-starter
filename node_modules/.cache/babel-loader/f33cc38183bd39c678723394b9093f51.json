{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.splice.js\";\n\n/** @hidden */\nvar WebGLPipelineContext =\n/** @class */\nfunction () {\n  function WebGLPipelineContext() {\n    this._valueCache = {};\n    this.vertexCompilationError = null;\n    this.fragmentCompilationError = null;\n    this.programLinkError = null;\n    this.programValidationError = null;\n  }\n\n  Object.defineProperty(WebGLPipelineContext.prototype, \"isAsync\", {\n    get: function get() {\n      return this.isParallelCompiled;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(WebGLPipelineContext.prototype, \"isReady\", {\n    get: function get() {\n      if (this.program) {\n        if (this.isParallelCompiled) {\n          return this.engine._isRenderingStateCompiled(this);\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WebGLPipelineContext.prototype._handlesSpectorRebuildCallback = function (onCompiled) {\n    if (onCompiled && this.program) {\n      onCompiled(this.program);\n    }\n  };\n\n  WebGLPipelineContext.prototype._fillEffectInformation = function (effect, uniformBuffersNames, uniformsNames, uniforms, samplerList, samplers, attributesNames, attributes) {\n    var engine = this.engine;\n\n    if (engine.supportsUniformBuffers) {\n      for (var name_1 in uniformBuffersNames) {\n        effect.bindUniformBlock(name_1, uniformBuffersNames[name_1]);\n      }\n    }\n\n    var effectAvailableUniforms = this.engine.getUniforms(this, uniformsNames);\n    effectAvailableUniforms.forEach(function (uniform, index) {\n      uniforms[uniformsNames[index]] = uniform;\n    });\n    this._uniforms = uniforms;\n    var index;\n\n    for (index = 0; index < samplerList.length; index++) {\n      var sampler = effect.getUniform(samplerList[index]);\n\n      if (sampler == null) {\n        samplerList.splice(index, 1);\n        index--;\n      }\n    }\n\n    samplerList.forEach(function (name, index) {\n      samplers[name] = index;\n    });\n\n    for (var _i = 0, _a = engine.getAttributes(this, attributesNames); _i < _a.length; _i++) {\n      var attr = _a[_i];\n      attributes.push(attr);\n    }\n  };\n  /**\n   * Release all associated resources.\n   **/\n\n\n  WebGLPipelineContext.prototype.dispose = function () {\n    this._uniforms = {};\n  };\n  /**\n   * @param uniformName\n   * @param matrix\n   * @hidden\n   */\n\n\n  WebGLPipelineContext.prototype._cacheMatrix = function (uniformName, matrix) {\n    var cache = this._valueCache[uniformName];\n    var flag = matrix.updateFlag;\n\n    if (cache !== undefined && cache === flag) {\n      return false;\n    }\n\n    this._valueCache[uniformName] = flag;\n    return true;\n  };\n  /**\n   * @param uniformName\n   * @param x\n   * @param y\n   * @hidden\n   */\n\n\n  WebGLPipelineContext.prototype._cacheFloat2 = function (uniformName, x, y) {\n    var cache = this._valueCache[uniformName];\n\n    if (!cache || cache.length !== 2) {\n      cache = [x, y];\n      this._valueCache[uniformName] = cache;\n      return true;\n    }\n\n    var changed = false;\n\n    if (cache[0] !== x) {\n      cache[0] = x;\n      changed = true;\n    }\n\n    if (cache[1] !== y) {\n      cache[1] = y;\n      changed = true;\n    }\n\n    return changed;\n  };\n  /**\n   * @param uniformName\n   * @param x\n   * @param y\n   * @param z\n   * @hidden\n   */\n\n\n  WebGLPipelineContext.prototype._cacheFloat3 = function (uniformName, x, y, z) {\n    var cache = this._valueCache[uniformName];\n\n    if (!cache || cache.length !== 3) {\n      cache = [x, y, z];\n      this._valueCache[uniformName] = cache;\n      return true;\n    }\n\n    var changed = false;\n\n    if (cache[0] !== x) {\n      cache[0] = x;\n      changed = true;\n    }\n\n    if (cache[1] !== y) {\n      cache[1] = y;\n      changed = true;\n    }\n\n    if (cache[2] !== z) {\n      cache[2] = z;\n      changed = true;\n    }\n\n    return changed;\n  };\n  /**\n   * @param uniformName\n   * @param x\n   * @param y\n   * @param z\n   * @param w\n   * @hidden\n   */\n\n\n  WebGLPipelineContext.prototype._cacheFloat4 = function (uniformName, x, y, z, w) {\n    var cache = this._valueCache[uniformName];\n\n    if (!cache || cache.length !== 4) {\n      cache = [x, y, z, w];\n      this._valueCache[uniformName] = cache;\n      return true;\n    }\n\n    var changed = false;\n\n    if (cache[0] !== x) {\n      cache[0] = x;\n      changed = true;\n    }\n\n    if (cache[1] !== y) {\n      cache[1] = y;\n      changed = true;\n    }\n\n    if (cache[2] !== z) {\n      cache[2] = z;\n      changed = true;\n    }\n\n    if (cache[3] !== w) {\n      cache[3] = w;\n      changed = true;\n    }\n\n    return changed;\n  };\n  /**\n   * Sets an integer value on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param value Value to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setInt = function (uniformName, value) {\n    var cache = this._valueCache[uniformName];\n\n    if (cache !== undefined && cache === value) {\n      return;\n    }\n\n    if (this.engine.setInt(this._uniforms[uniformName], value)) {\n      this._valueCache[uniformName] = value;\n    }\n  };\n  /**\n   * Sets a int2 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param x First int in int2.\n   * @param y Second int in int2.\n   */\n\n\n  WebGLPipelineContext.prototype.setInt2 = function (uniformName, x, y) {\n    if (this._cacheFloat2(uniformName, x, y)) {\n      if (!this.engine.setInt2(this._uniforms[uniformName], x, y)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a int3 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param x First int in int3.\n   * @param y Second int in int3.\n   * @param z Third int in int3.\n   */\n\n\n  WebGLPipelineContext.prototype.setInt3 = function (uniformName, x, y, z) {\n    if (this._cacheFloat3(uniformName, x, y, z)) {\n      if (!this.engine.setInt3(this._uniforms[uniformName], x, y, z)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a int4 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param x First int in int4.\n   * @param y Second int in int4.\n   * @param z Third int in int4.\n   * @param w Fourth int in int4.\n   */\n\n\n  WebGLPipelineContext.prototype.setInt4 = function (uniformName, x, y, z, w) {\n    if (this._cacheFloat4(uniformName, x, y, z, w)) {\n      if (!this.engine.setInt4(this._uniforms[uniformName], x, y, z, w)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets an int array on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param array array to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setIntArray = function (uniformName, array) {\n    this._valueCache[uniformName] = null;\n    this.engine.setIntArray(this._uniforms[uniformName], array);\n  };\n  /**\n   * Sets an int array 2 on a uniform variable. (Array is specified as single array eg. [1,2,3,4] will result in [[1,2],[3,4]] in the shader)\n   * @param uniformName Name of the variable.\n   * @param array array to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setIntArray2 = function (uniformName, array) {\n    this._valueCache[uniformName] = null;\n    this.engine.setIntArray2(this._uniforms[uniformName], array);\n  };\n  /**\n   * Sets an int array 3 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6] will result in [[1,2,3],[4,5,6]] in the shader)\n   * @param uniformName Name of the variable.\n   * @param array array to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setIntArray3 = function (uniformName, array) {\n    this._valueCache[uniformName] = null;\n    this.engine.setIntArray3(this._uniforms[uniformName], array);\n  };\n  /**\n   * Sets an int array 4 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6,7,8] will result in [[1,2,3,4],[5,6,7,8]] in the shader)\n   * @param uniformName Name of the variable.\n   * @param array array to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setIntArray4 = function (uniformName, array) {\n    this._valueCache[uniformName] = null;\n    this.engine.setIntArray4(this._uniforms[uniformName], array);\n  };\n  /**\n   * Sets an array on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param array array to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setArray = function (uniformName, array) {\n    this._valueCache[uniformName] = null;\n    this.engine.setArray(this._uniforms[uniformName], array);\n  };\n  /**\n   * Sets an array 2 on a uniform variable. (Array is specified as single array eg. [1,2,3,4] will result in [[1,2],[3,4]] in the shader)\n   * @param uniformName Name of the variable.\n   * @param array array to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setArray2 = function (uniformName, array) {\n    this._valueCache[uniformName] = null;\n    this.engine.setArray2(this._uniforms[uniformName], array);\n  };\n  /**\n   * Sets an array 3 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6] will result in [[1,2,3],[4,5,6]] in the shader)\n   * @param uniformName Name of the variable.\n   * @param array array to be set.\n   * @returns this effect.\n   */\n\n\n  WebGLPipelineContext.prototype.setArray3 = function (uniformName, array) {\n    this._valueCache[uniformName] = null;\n    this.engine.setArray3(this._uniforms[uniformName], array);\n  };\n  /**\n   * Sets an array 4 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6,7,8] will result in [[1,2,3,4],[5,6,7,8]] in the shader)\n   * @param uniformName Name of the variable.\n   * @param array array to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setArray4 = function (uniformName, array) {\n    this._valueCache[uniformName] = null;\n    this.engine.setArray4(this._uniforms[uniformName], array);\n  };\n  /**\n   * Sets matrices on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param matrices matrices to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setMatrices = function (uniformName, matrices) {\n    if (!matrices) {\n      return;\n    }\n\n    this._valueCache[uniformName] = null;\n    this.engine.setMatrices(this._uniforms[uniformName], matrices);\n  };\n  /**\n   * Sets matrix on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param matrix matrix to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setMatrix = function (uniformName, matrix) {\n    if (this._cacheMatrix(uniformName, matrix)) {\n      if (!this.engine.setMatrices(this._uniforms[uniformName], matrix.toArray())) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a 3x3 matrix on a uniform variable. (Specified as [1,2,3,4,5,6,7,8,9] will result in [1,2,3][4,5,6][7,8,9] matrix)\n   * @param uniformName Name of the variable.\n   * @param matrix matrix to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setMatrix3x3 = function (uniformName, matrix) {\n    this._valueCache[uniformName] = null;\n    this.engine.setMatrix3x3(this._uniforms[uniformName], matrix);\n  };\n  /**\n   * Sets a 2x2 matrix on a uniform variable. (Specified as [1,2,3,4] will result in [1,2][3,4] matrix)\n   * @param uniformName Name of the variable.\n   * @param matrix matrix to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setMatrix2x2 = function (uniformName, matrix) {\n    this._valueCache[uniformName] = null;\n    this.engine.setMatrix2x2(this._uniforms[uniformName], matrix);\n  };\n  /**\n   * Sets a float on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param value value to be set.\n   * @returns this effect.\n   */\n\n\n  WebGLPipelineContext.prototype.setFloat = function (uniformName, value) {\n    var cache = this._valueCache[uniformName];\n\n    if (cache !== undefined && cache === value) {\n      return;\n    }\n\n    if (this.engine.setFloat(this._uniforms[uniformName], value)) {\n      this._valueCache[uniformName] = value;\n    }\n  };\n  /**\n   * Sets a Vector2 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param vector2 vector2 to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setVector2 = function (uniformName, vector2) {\n    if (this._cacheFloat2(uniformName, vector2.x, vector2.y)) {\n      if (!this.engine.setFloat2(this._uniforms[uniformName], vector2.x, vector2.y)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a float2 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param x First float in float2.\n   * @param y Second float in float2.\n   */\n\n\n  WebGLPipelineContext.prototype.setFloat2 = function (uniformName, x, y) {\n    if (this._cacheFloat2(uniformName, x, y)) {\n      if (!this.engine.setFloat2(this._uniforms[uniformName], x, y)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a Vector3 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param vector3 Value to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setVector3 = function (uniformName, vector3) {\n    if (this._cacheFloat3(uniformName, vector3.x, vector3.y, vector3.z)) {\n      if (!this.engine.setFloat3(this._uniforms[uniformName], vector3.x, vector3.y, vector3.z)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a float3 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param x First float in float3.\n   * @param y Second float in float3.\n   * @param z Third float in float3.\n   */\n\n\n  WebGLPipelineContext.prototype.setFloat3 = function (uniformName, x, y, z) {\n    if (this._cacheFloat3(uniformName, x, y, z)) {\n      if (!this.engine.setFloat3(this._uniforms[uniformName], x, y, z)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a Vector4 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param vector4 Value to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setVector4 = function (uniformName, vector4) {\n    if (this._cacheFloat4(uniformName, vector4.x, vector4.y, vector4.z, vector4.w)) {\n      if (!this.engine.setFloat4(this._uniforms[uniformName], vector4.x, vector4.y, vector4.z, vector4.w)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a float4 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param x First float in float4.\n   * @param y Second float in float4.\n   * @param z Third float in float4.\n   * @param w Fourth float in float4.\n   * @returns this effect.\n   */\n\n\n  WebGLPipelineContext.prototype.setFloat4 = function (uniformName, x, y, z, w) {\n    if (this._cacheFloat4(uniformName, x, y, z, w)) {\n      if (!this.engine.setFloat4(this._uniforms[uniformName], x, y, z, w)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a Color3 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param color3 Value to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setColor3 = function (uniformName, color3) {\n    if (this._cacheFloat3(uniformName, color3.r, color3.g, color3.b)) {\n      if (!this.engine.setFloat3(this._uniforms[uniformName], color3.r, color3.g, color3.b)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a Color4 on a uniform variable.\n   * @param uniformName Name of the variable.\n   * @param color3 Value to be set.\n   * @param alpha Alpha value to be set.\n   */\n\n\n  WebGLPipelineContext.prototype.setColor4 = function (uniformName, color3, alpha) {\n    if (this._cacheFloat4(uniformName, color3.r, color3.g, color3.b, alpha)) {\n      if (!this.engine.setFloat4(this._uniforms[uniformName], color3.r, color3.g, color3.b, alpha)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n  /**\n   * Sets a Color4 on a uniform variable\n   * @param uniformName defines the name of the variable\n   * @param color4 defines the value to be set\n   */\n\n\n  WebGLPipelineContext.prototype.setDirectColor4 = function (uniformName, color4) {\n    if (this._cacheFloat4(uniformName, color4.r, color4.g, color4.b, color4.a)) {\n      if (!this.engine.setFloat4(this._uniforms[uniformName], color4.r, color4.g, color4.b, color4.a)) {\n        this._valueCache[uniformName] = null;\n      }\n    }\n  };\n\n  WebGLPipelineContext.prototype._getVertexShaderCode = function () {\n    return this.vertexShader ? this.engine._getShaderSource(this.vertexShader) : null;\n  };\n\n  WebGLPipelineContext.prototype._getFragmentShaderCode = function () {\n    return this.fragmentShader ? this.engine._getShaderSource(this.fragmentShader) : null;\n  };\n\n  return WebGLPipelineContext;\n}();\n\nexport { WebGLPipelineContext };","map":{"version":3,"mappings":"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","names":["Object","WebGLPipelineContext","isParallelCompiled","program","engine","_isRenderingStateCompiled","onCompiled","effect","uniformBuffersNames","uniformsNames","uniforms","samplerList","samplers","attributesNames","attributes","supportsUniformBuffers","name_1","bindUniformBlock","effectAvailableUniforms","getUniforms","forEach","uniform","index","_uniforms","length","sampler","getUniform","splice","name","getAttributes","_i","attr","push","uniformName","matrix","cache","_valueCache","flag","updateFlag","undefined","x","y","changed","z","w","value","setInt","_cacheFloat2","setInt2","_cacheFloat3","setInt3","_cacheFloat4","setInt4","array","setIntArray","setIntArray2","setIntArray3","setIntArray4","setArray","setArray2","setArray3","setArray4","matrices","setMatrices","_cacheMatrix","toArray","setMatrix3x3","setMatrix2x2","setFloat","vector2","setFloat2","vector3","setFloat3","vector4","setFloat4","color3","r","g","b","alpha","color4","a","vertexShader","_getShaderSource","fragmentShader"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGL/webGLPipelineContext.ts"],"sourcesContent":["import type { IPipelineContext } from \"../IPipelineContext\";\r\nimport type { Nullable } from \"../../types\";\r\nimport type { Effect } from \"../../Materials/effect\";\r\nimport type { IMatrixLike, IVector2Like, IVector3Like, IVector4Like, IColor3Like, IColor4Like } from \"../../Maths/math.like\";\r\nimport type { ThinEngine } from \"../thinEngine\";\r\n\r\n/** @hidden */\r\nexport class WebGLPipelineContext implements IPipelineContext {\r\n    private _valueCache: { [key: string]: any } = {};\r\n    private _uniforms: { [key: string]: Nullable<WebGLUniformLocation> };\r\n\r\n    public engine: ThinEngine;\r\n    public program: Nullable<WebGLProgram>;\r\n    public context?: WebGLRenderingContext;\r\n    public vertexShader?: WebGLShader;\r\n    public fragmentShader?: WebGLShader;\r\n    public isParallelCompiled: boolean;\r\n    public onCompiled?: () => void;\r\n    public transformFeedback?: WebGLTransformFeedback | null;\r\n\r\n    public vertexCompilationError: Nullable<string> = null;\r\n    public fragmentCompilationError: Nullable<string> = null;\r\n    public programLinkError: Nullable<string> = null;\r\n    public programValidationError: Nullable<string> = null;\r\n\r\n    public get isAsync() {\r\n        return this.isParallelCompiled;\r\n    }\r\n\r\n    public get isReady(): boolean {\r\n        if (this.program) {\r\n            if (this.isParallelCompiled) {\r\n                return this.engine._isRenderingStateCompiled(this);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public _handlesSpectorRebuildCallback(onCompiled: (program: WebGLProgram) => void): void {\r\n        if (onCompiled && this.program) {\r\n            onCompiled(this.program);\r\n        }\r\n    }\r\n\r\n    public _fillEffectInformation(\r\n        effect: Effect,\r\n        uniformBuffersNames: { [key: string]: number },\r\n        uniformsNames: string[],\r\n        uniforms: { [key: string]: Nullable<WebGLUniformLocation> },\r\n        samplerList: string[],\r\n        samplers: { [key: string]: number },\r\n        attributesNames: string[],\r\n        attributes: number[]\r\n    ) {\r\n        const engine = this.engine;\r\n        if (engine.supportsUniformBuffers) {\r\n            for (const name in uniformBuffersNames) {\r\n                effect.bindUniformBlock(name, uniformBuffersNames[name]);\r\n            }\r\n        }\r\n\r\n        const effectAvailableUniforms = this.engine.getUniforms(this, uniformsNames);\r\n        effectAvailableUniforms.forEach((uniform, index) => {\r\n            uniforms[uniformsNames[index]] = uniform;\r\n        });\r\n        this._uniforms = uniforms;\r\n\r\n        let index: number;\r\n        for (index = 0; index < samplerList.length; index++) {\r\n            const sampler = effect.getUniform(samplerList[index]);\r\n            if (sampler == null) {\r\n                samplerList.splice(index, 1);\r\n                index--;\r\n            }\r\n        }\r\n\r\n        samplerList.forEach((name, index) => {\r\n            samplers[name] = index;\r\n        });\r\n\r\n        for (const attr of engine.getAttributes(this, attributesNames)) {\r\n            attributes.push(attr);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Release all associated resources.\r\n     **/\r\n    public dispose() {\r\n        this._uniforms = {};\r\n    }\r\n\r\n    /**\r\n     * @param uniformName\r\n     * @param matrix\r\n     * @hidden\r\n     */\r\n    public _cacheMatrix(uniformName: string, matrix: IMatrixLike): boolean {\r\n        const cache = this._valueCache[uniformName];\r\n        const flag = matrix.updateFlag;\r\n        if (cache !== undefined && cache === flag) {\r\n            return false;\r\n        }\r\n\r\n        this._valueCache[uniformName] = flag;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param uniformName\r\n     * @param x\r\n     * @param y\r\n     * @hidden\r\n     */\r\n    public _cacheFloat2(uniformName: string, x: number, y: number): boolean {\r\n        let cache = this._valueCache[uniformName];\r\n        if (!cache || cache.length !== 2) {\r\n            cache = [x, y];\r\n            this._valueCache[uniformName] = cache;\r\n            return true;\r\n        }\r\n\r\n        let changed = false;\r\n        if (cache[0] !== x) {\r\n            cache[0] = x;\r\n            changed = true;\r\n        }\r\n        if (cache[1] !== y) {\r\n            cache[1] = y;\r\n            changed = true;\r\n        }\r\n\r\n        return changed;\r\n    }\r\n\r\n    /**\r\n     * @param uniformName\r\n     * @param x\r\n     * @param y\r\n     * @param z\r\n     * @hidden\r\n     */\r\n    public _cacheFloat3(uniformName: string, x: number, y: number, z: number): boolean {\r\n        let cache = this._valueCache[uniformName];\r\n        if (!cache || cache.length !== 3) {\r\n            cache = [x, y, z];\r\n            this._valueCache[uniformName] = cache;\r\n            return true;\r\n        }\r\n\r\n        let changed = false;\r\n        if (cache[0] !== x) {\r\n            cache[0] = x;\r\n            changed = true;\r\n        }\r\n        if (cache[1] !== y) {\r\n            cache[1] = y;\r\n            changed = true;\r\n        }\r\n        if (cache[2] !== z) {\r\n            cache[2] = z;\r\n            changed = true;\r\n        }\r\n\r\n        return changed;\r\n    }\r\n\r\n    /**\r\n     * @param uniformName\r\n     * @param x\r\n     * @param y\r\n     * @param z\r\n     * @param w\r\n     * @hidden\r\n     */\r\n    public _cacheFloat4(uniformName: string, x: number, y: number, z: number, w: number): boolean {\r\n        let cache = this._valueCache[uniformName];\r\n        if (!cache || cache.length !== 4) {\r\n            cache = [x, y, z, w];\r\n            this._valueCache[uniformName] = cache;\r\n            return true;\r\n        }\r\n\r\n        let changed = false;\r\n        if (cache[0] !== x) {\r\n            cache[0] = x;\r\n            changed = true;\r\n        }\r\n        if (cache[1] !== y) {\r\n            cache[1] = y;\r\n            changed = true;\r\n        }\r\n        if (cache[2] !== z) {\r\n            cache[2] = z;\r\n            changed = true;\r\n        }\r\n        if (cache[3] !== w) {\r\n            cache[3] = w;\r\n            changed = true;\r\n        }\r\n\r\n        return changed;\r\n    }\r\n\r\n    /**\r\n     * Sets an integer value on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param value Value to be set.\r\n     */\r\n    public setInt(uniformName: string, value: number): void {\r\n        const cache = this._valueCache[uniformName];\r\n        if (cache !== undefined && cache === value) {\r\n            return;\r\n        }\r\n\r\n        if (this.engine.setInt(this._uniforms[uniformName], value)) {\r\n            this._valueCache[uniformName] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a int2 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param x First int in int2.\r\n     * @param y Second int in int2.\r\n     */\r\n    public setInt2(uniformName: string, x: number, y: number): void {\r\n        if (this._cacheFloat2(uniformName, x, y)) {\r\n            if (!this.engine.setInt2(this._uniforms[uniformName], x, y)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a int3 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param x First int in int3.\r\n     * @param y Second int in int3.\r\n     * @param z Third int in int3.\r\n     */\r\n    public setInt3(uniformName: string, x: number, y: number, z: number): void {\r\n        if (this._cacheFloat3(uniformName, x, y, z)) {\r\n            if (!this.engine.setInt3(this._uniforms[uniformName], x, y, z)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a int4 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param x First int in int4.\r\n     * @param y Second int in int4.\r\n     * @param z Third int in int4.\r\n     * @param w Fourth int in int4.\r\n     */\r\n    public setInt4(uniformName: string, x: number, y: number, z: number, w: number): void {\r\n        if (this._cacheFloat4(uniformName, x, y, z, w)) {\r\n            if (!this.engine.setInt4(this._uniforms[uniformName], x, y, z, w)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets an int array on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param array array to be set.\r\n     */\r\n    public setIntArray(uniformName: string, array: Int32Array): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setIntArray(this._uniforms[uniformName], array);\r\n    }\r\n\r\n    /**\r\n     * Sets an int array 2 on a uniform variable. (Array is specified as single array eg. [1,2,3,4] will result in [[1,2],[3,4]] in the shader)\r\n     * @param uniformName Name of the variable.\r\n     * @param array array to be set.\r\n     */\r\n    public setIntArray2(uniformName: string, array: Int32Array): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setIntArray2(this._uniforms[uniformName], array);\r\n    }\r\n\r\n    /**\r\n     * Sets an int array 3 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6] will result in [[1,2,3],[4,5,6]] in the shader)\r\n     * @param uniformName Name of the variable.\r\n     * @param array array to be set.\r\n     */\r\n    public setIntArray3(uniformName: string, array: Int32Array): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setIntArray3(this._uniforms[uniformName], array);\r\n    }\r\n\r\n    /**\r\n     * Sets an int array 4 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6,7,8] will result in [[1,2,3,4],[5,6,7,8]] in the shader)\r\n     * @param uniformName Name of the variable.\r\n     * @param array array to be set.\r\n     */\r\n    public setIntArray4(uniformName: string, array: Int32Array): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setIntArray4(this._uniforms[uniformName], array);\r\n    }\r\n\r\n    /**\r\n     * Sets an array on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param array array to be set.\r\n     */\r\n    public setArray(uniformName: string, array: number[]): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setArray(this._uniforms[uniformName], array);\r\n    }\r\n\r\n    /**\r\n     * Sets an array 2 on a uniform variable. (Array is specified as single array eg. [1,2,3,4] will result in [[1,2],[3,4]] in the shader)\r\n     * @param uniformName Name of the variable.\r\n     * @param array array to be set.\r\n     */\r\n    public setArray2(uniformName: string, array: number[]): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setArray2(this._uniforms[uniformName], array);\r\n    }\r\n\r\n    /**\r\n     * Sets an array 3 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6] will result in [[1,2,3],[4,5,6]] in the shader)\r\n     * @param uniformName Name of the variable.\r\n     * @param array array to be set.\r\n     * @returns this effect.\r\n     */\r\n    public setArray3(uniformName: string, array: number[]): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setArray3(this._uniforms[uniformName], array);\r\n    }\r\n\r\n    /**\r\n     * Sets an array 4 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6,7,8] will result in [[1,2,3,4],[5,6,7,8]] in the shader)\r\n     * @param uniformName Name of the variable.\r\n     * @param array array to be set.\r\n     */\r\n    public setArray4(uniformName: string, array: number[]): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setArray4(this._uniforms[uniformName], array);\r\n    }\r\n\r\n    /**\r\n     * Sets matrices on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param matrices matrices to be set.\r\n     */\r\n    public setMatrices(uniformName: string, matrices: Float32Array): void {\r\n        if (!matrices) {\r\n            return;\r\n        }\r\n\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setMatrices(this._uniforms[uniformName], matrices);\r\n    }\r\n\r\n    /**\r\n     * Sets matrix on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param matrix matrix to be set.\r\n     */\r\n    public setMatrix(uniformName: string, matrix: IMatrixLike): void {\r\n        if (this._cacheMatrix(uniformName, matrix)) {\r\n            if (!this.engine.setMatrices(this._uniforms[uniformName], matrix.toArray() as Float32Array)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a 3x3 matrix on a uniform variable. (Specified as [1,2,3,4,5,6,7,8,9] will result in [1,2,3][4,5,6][7,8,9] matrix)\r\n     * @param uniformName Name of the variable.\r\n     * @param matrix matrix to be set.\r\n     */\r\n    public setMatrix3x3(uniformName: string, matrix: Float32Array): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setMatrix3x3(this._uniforms[uniformName], matrix);\r\n    }\r\n\r\n    /**\r\n     * Sets a 2x2 matrix on a uniform variable. (Specified as [1,2,3,4] will result in [1,2][3,4] matrix)\r\n     * @param uniformName Name of the variable.\r\n     * @param matrix matrix to be set.\r\n     */\r\n    public setMatrix2x2(uniformName: string, matrix: Float32Array): void {\r\n        this._valueCache[uniformName] = null;\r\n        this.engine.setMatrix2x2(this._uniforms[uniformName], matrix);\r\n    }\r\n\r\n    /**\r\n     * Sets a float on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param value value to be set.\r\n     * @returns this effect.\r\n     */\r\n    public setFloat(uniformName: string, value: number): void {\r\n        const cache = this._valueCache[uniformName];\r\n        if (cache !== undefined && cache === value) {\r\n            return;\r\n        }\r\n\r\n        if (this.engine.setFloat(this._uniforms[uniformName], value)) {\r\n            this._valueCache[uniformName] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a Vector2 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param vector2 vector2 to be set.\r\n     */\r\n    public setVector2(uniformName: string, vector2: IVector2Like): void {\r\n        if (this._cacheFloat2(uniformName, vector2.x, vector2.y)) {\r\n            if (!this.engine.setFloat2(this._uniforms[uniformName], vector2.x, vector2.y)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a float2 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param x First float in float2.\r\n     * @param y Second float in float2.\r\n     */\r\n    public setFloat2(uniformName: string, x: number, y: number): void {\r\n        if (this._cacheFloat2(uniformName, x, y)) {\r\n            if (!this.engine.setFloat2(this._uniforms[uniformName], x, y)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a Vector3 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param vector3 Value to be set.\r\n     */\r\n    public setVector3(uniformName: string, vector3: IVector3Like): void {\r\n        if (this._cacheFloat3(uniformName, vector3.x, vector3.y, vector3.z)) {\r\n            if (!this.engine.setFloat3(this._uniforms[uniformName], vector3.x, vector3.y, vector3.z)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a float3 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param x First float in float3.\r\n     * @param y Second float in float3.\r\n     * @param z Third float in float3.\r\n     */\r\n    public setFloat3(uniformName: string, x: number, y: number, z: number): void {\r\n        if (this._cacheFloat3(uniformName, x, y, z)) {\r\n            if (!this.engine.setFloat3(this._uniforms[uniformName], x, y, z)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a Vector4 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param vector4 Value to be set.\r\n     */\r\n    public setVector4(uniformName: string, vector4: IVector4Like): void {\r\n        if (this._cacheFloat4(uniformName, vector4.x, vector4.y, vector4.z, vector4.w)) {\r\n            if (!this.engine.setFloat4(this._uniforms[uniformName], vector4.x, vector4.y, vector4.z, vector4.w)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a float4 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param x First float in float4.\r\n     * @param y Second float in float4.\r\n     * @param z Third float in float4.\r\n     * @param w Fourth float in float4.\r\n     * @returns this effect.\r\n     */\r\n    public setFloat4(uniformName: string, x: number, y: number, z: number, w: number): void {\r\n        if (this._cacheFloat4(uniformName, x, y, z, w)) {\r\n            if (!this.engine.setFloat4(this._uniforms[uniformName], x, y, z, w)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a Color3 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param color3 Value to be set.\r\n     */\r\n    public setColor3(uniformName: string, color3: IColor3Like): void {\r\n        if (this._cacheFloat3(uniformName, color3.r, color3.g, color3.b)) {\r\n            if (!this.engine.setFloat3(this._uniforms[uniformName], color3.r, color3.g, color3.b)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a Color4 on a uniform variable.\r\n     * @param uniformName Name of the variable.\r\n     * @param color3 Value to be set.\r\n     * @param alpha Alpha value to be set.\r\n     */\r\n    public setColor4(uniformName: string, color3: IColor3Like, alpha: number): void {\r\n        if (this._cacheFloat4(uniformName, color3.r, color3.g, color3.b, alpha)) {\r\n            if (!this.engine.setFloat4(this._uniforms[uniformName], color3.r, color3.g, color3.b, alpha)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a Color4 on a uniform variable\r\n     * @param uniformName defines the name of the variable\r\n     * @param color4 defines the value to be set\r\n     */\r\n    public setDirectColor4(uniformName: string, color4: IColor4Like): void {\r\n        if (this._cacheFloat4(uniformName, color4.r, color4.g, color4.b, color4.a)) {\r\n            if (!this.engine.setFloat4(this._uniforms[uniformName], color4.r, color4.g, color4.b, color4.a)) {\r\n                this._valueCache[uniformName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public _getVertexShaderCode(): string | null {\r\n        return this.vertexShader ? this.engine._getShaderSource(this.vertexShader) : null;\r\n    }\r\n\r\n    public _getFragmentShaderCode(): string | null {\r\n        return this.fragmentShader ? this.engine._getShaderSource(this.fragmentShader) : null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}