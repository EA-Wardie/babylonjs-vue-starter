{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nvar name = \"morphTargetsVertex\";\nvar shader = \"#ifdef MORPHTARGETS\\n#ifdef MORPHTARGETS_TEXTURE \\nvertexID=f32(gl_VertexID)*uniforms.morphTargetTextureInfo.x;\\npositionUpdated=positionUpdated+(readVector3FromRawSampler({X},vertexID)-position)*uniforms.morphTargetInfluences[{X}];\\nvertexID=vertexID+1.0;\\n#ifdef MORPHTARGETS_NORMAL\\nnormalUpdated=normalUpdated+(readVector3FromRawSampler({X},vertexID) -normal)*uniforms.morphTargetInfluences[{X}];\\nvertexID=vertexID+1.0;\\n#endif\\n#ifdef MORPHTARGETS_UV\\nuvUpdated=uvUpdated+(readVector3FromRawSampler({X},vertexID).xy-uv)*uniforms.morphTargetInfluences[{X}];\\nvertexID=vertexID+1.0;\\n#endif\\n#ifdef MORPHTARGETS_TANGENT\\ntangentUpdated.xyz=tangentUpdated.xyz+(readVector3FromRawSampler({X},vertexID) -tangent.xyz)*uniforms.morphTargetInfluences[{X}];\\n#endif\\n#else\\npositionUpdated=positionUpdated+(position{X}-position)*uniforms.morphTargetInfluences[{X}];\\n#ifdef MORPHTARGETS_NORMAL\\nnormalUpdated+=(normal{X}-normal)*uniforms.morphTargetInfluences[{X}];\\n#endif\\n#ifdef MORPHTARGETS_TANGENT\\ntangentUpdated.xyz=tangentUpdated.xyz+(tangent{X}-tangent.xyz)*uniforms.morphTargetInfluences[{X}];\\n#endif\\n#ifdef MORPHTARGETS_UV\\nuvUpdated=uvUpdated+(uv_{X}-uv)*uniforms.morphTargetInfluences[{X}];\\n#endif\\n#endif\\n#endif\\n\"; // Sideeffect\n\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @hidden */\n\nexport var morphTargetsVertex = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,8BAA5B;AAEA,IAAMC,IAAI,GAAG,oBAAb;AACA,IAAMC,MAAM,GAAG,8sCAAf,C,CA8BA;;AACAF,WAAW,CAACG,wBAAZ,CAAqCF,IAArC,IAA6CC,MAA7C;AACA;;AACA,OAAO,IAAME,kBAAkB,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAA3B","names":["ShaderStore","name","shader","IncludesShadersStoreWGSL","morphTargetsVertex"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/morphTargetsVertex.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"morphTargetsVertex\";\nconst shader = `#ifdef MORPHTARGETS\n#ifdef MORPHTARGETS_TEXTURE \nvertexID=f32(gl_VertexID)*uniforms.morphTargetTextureInfo.x;\rpositionUpdated=positionUpdated+(readVector3FromRawSampler({X},vertexID)-position)*uniforms.morphTargetInfluences[{X}];\rvertexID=vertexID+1.0;\r#ifdef MORPHTARGETS_NORMAL\nnormalUpdated=normalUpdated+(readVector3FromRawSampler({X},vertexID) -normal)*uniforms.morphTargetInfluences[{X}];\rvertexID=vertexID+1.0;\r#endif\n#ifdef MORPHTARGETS_UV\nuvUpdated=uvUpdated+(readVector3FromRawSampler({X},vertexID).xy-uv)*uniforms.morphTargetInfluences[{X}];\rvertexID=vertexID+1.0;\r#endif\n#ifdef MORPHTARGETS_TANGENT\ntangentUpdated.xyz=tangentUpdated.xyz+(readVector3FromRawSampler({X},vertexID) -tangent.xyz)*uniforms.morphTargetInfluences[{X}];\r#endif\n#else\npositionUpdated=positionUpdated+(position{X}-position)*uniforms.morphTargetInfluences[{X}];\r#ifdef MORPHTARGETS_NORMAL\nnormalUpdated+=(normal{X}-normal)*uniforms.morphTargetInfluences[{X}];\r#endif\n#ifdef MORPHTARGETS_TANGENT\ntangentUpdated.xyz=tangentUpdated.xyz+(tangent{X}-tangent.xyz)*uniforms.morphTargetInfluences[{X}];\r#endif\n#ifdef MORPHTARGETS_UV\nuvUpdated=uvUpdated+(uv_{X}-uv)*uniforms.morphTargetInfluences[{X}];\r#endif\n#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @hidden */\nexport const morphTargetsVertex = { name, shader };\n"]},"metadata":{},"sourceType":"module"}