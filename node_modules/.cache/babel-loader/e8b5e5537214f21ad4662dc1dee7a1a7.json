{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { serialize, expandToProperty } from \"../../Misc/decorators.js\";\nimport { MaterialDefines } from \"../materialDefines.js\";\nimport { MaterialPluginBase } from \"../materialPluginBase.js\";\n/**\n * @hidden\n */\n\nvar MaterialBRDFDefines =\n/** @class */\nfunction (_super) {\n  __extends(MaterialBRDFDefines, _super);\n\n  function MaterialBRDFDefines() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.BRDF_V_HEIGHT_CORRELATED = false;\n    _this.MS_BRDF_ENERGY_CONSERVATION = false;\n    _this.SPHERICAL_HARMONICS = false;\n    _this.SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = false;\n    return _this;\n  }\n\n  return MaterialBRDFDefines;\n}(MaterialDefines);\n\nexport { MaterialBRDFDefines };\n/**\n * Plugin that implements the BRDF component of the PBR material\n */\n\nvar PBRBRDFConfiguration =\n/** @class */\nfunction (_super) {\n  __extends(PBRBRDFConfiguration, _super);\n\n  function PBRBRDFConfiguration(material, addToPluginList) {\n    if (addToPluginList === void 0) {\n      addToPluginList = true;\n    }\n\n    var _this = _super.call(this, material, \"PBRBRDF\", 90, new MaterialBRDFDefines(), addToPluginList) || this;\n\n    _this._useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\n    /**\n     * Defines if the material uses energy conservation.\n     */\n\n    _this.useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\n    _this._useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\n    /**\n     * LEGACY Mode set to false\n     * Defines if the material uses height smith correlated visibility term.\n     * If you intent to not use our default BRDF, you need to load a separate BRDF Texture for the PBR\n     * You can either load https://assets.babylonjs.com/environments/uncorrelatedBRDF.png\n     * or https://assets.babylonjs.com/environments/uncorrelatedBRDF.dds to have more precision\n     * Not relying on height correlated will also disable energy conservation.\n     */\n\n    _this.useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\n    _this._useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\n    /**\n     * LEGACY Mode set to false\n     * Defines if the material uses spherical harmonics vs spherical polynomials for the\n     * diffuse part of the IBL.\n     * The harmonics despite a tiny bigger cost has been proven to provide closer results\n     * to the ground truth.\n     */\n\n    _this.useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\n    _this._useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\n    /**\n     * Defines if the material uses energy conservation, when the specular workflow is active.\n     * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\n     * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\n     * In the deactivated case, the material author has to ensure energy conservation, for a physically plausible rendering.\n     */\n\n    _this.useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\n    _this._internalMarkAllSubMeshesAsMiscDirty = material._dirtyCallbacks[16];\n\n    _this._enable(true);\n\n    return _this;\n  }\n  /** @hidden */\n\n\n  PBRBRDFConfiguration.prototype._markAllSubMeshesAsMiscDirty = function () {\n    this._internalMarkAllSubMeshesAsMiscDirty();\n  };\n\n  PBRBRDFConfiguration.prototype.prepareDefines = function (defines) {\n    defines.BRDF_V_HEIGHT_CORRELATED = this._useSmithVisibilityHeightCorrelated;\n    defines.MS_BRDF_ENERGY_CONSERVATION = this._useEnergyConservation && this._useSmithVisibilityHeightCorrelated;\n    defines.SPHERICAL_HARMONICS = this._useSphericalHarmonics;\n    defines.SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = this._useSpecularGlossinessInputEnergyConservation;\n  };\n\n  PBRBRDFConfiguration.prototype.getClassName = function () {\n    return \"PBRBRDFConfiguration\";\n  };\n  /**\n   * Default value used for the energy conservation.\n   * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\n   */\n\n\n  PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION = true;\n  /**\n   * Default value used for the Smith Visibility Height Correlated mode.\n   * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\n   */\n\n  PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED = true;\n  /**\n   * Default value used for the IBL diffuse part.\n   * This can help switching back to the polynomials mode globally which is a tiny bit\n   * less GPU intensive at the drawback of a lower quality.\n   */\n\n  PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS = true;\n  /**\n   * Default value used for activating energy conservation for the specular workflow.\n   * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\n   * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\n   */\n\n  PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION = true;\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useEnergyConservation\", void 0);\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSmithVisibilityHeightCorrelated\", void 0);\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSphericalHarmonics\", void 0);\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSpecularGlossinessInputEnergyConservation\", void 0);\n\n  return PBRBRDFConfiguration;\n}(MaterialPluginBase);\n\nexport { PBRBRDFConfiguration };","map":{"version":3,"mappings":";AAAA;;AAEA,SAASA,SAAT,EAAoBC,gBAApB,QAA4C,0BAA5C;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AAGA;;;;AAGA;AAAA;AAAA;AAAyCC;;AAAzC;AAAA;;AACIC,qCAA2B,KAA3B;AACAA,wCAA8B,KAA9B;AACAA,gCAAsB,KAAtB;AACAA,oDAA0C,KAA1C;;AACH;;AAAD;AAAC,CALD,CAAyCH,eAAzC;;;AAOA;;;;AAGA;AAAA;AAAA;AAA0CE;;AA+EtC,gCAAYE,QAAZ,EAAuCC,eAAvC,EAA6D;AAAtB;AAAAA;AAAsB;;AAA7D,gBACIC,kBAAMF,QAAN,EAAgB,SAAhB,EAA2B,EAA3B,EAA+B,IAAIG,mBAAJ,EAA/B,EAA0DF,eAA1D,KAA0E,IAD9E;;AApDQF,mCAAyBK,oBAAoB,CAACC,+BAA9C;AACR;;;;AAKON,kCAAwBK,oBAAoB,CAACC,+BAA7C;AAECN,gDAAsCK,oBAAoB,CAACE,8CAA3D;AACR;;;;;;;;;AAUOP,+CAAqCK,oBAAoB,CAACE,8CAA1D;AAECP,mCAAyBK,oBAAoB,CAACG,+BAA9C;AACR;;;;;;;;AASOR,kCAAwBK,oBAAoB,CAACG,+BAA7C;AAECR,0DAAgDK,oBAAoB,CAACI,yDAArE;AACR;;;;;;;AAQOT,yDAA+CK,oBAAoB,CAACI,yDAApE;AAaHT,SAAI,CAACU,oCAAL,GAA4CT,QAAQ,CAACU,eAAT,CAAyB,EAAzB,CAA5C;;AACAX,SAAI,CAACY,OAAL,CAAa,IAAb;;;AACH;AAVD;;;AACOP,gEAAP;AACI,SAAKK,oCAAL;AACH,GAFM;;AAWAL,kDAAP,UAAsBQ,OAAtB,EAAkD;AAC9CA,WAAO,CAACC,wBAAR,GAAmC,KAAKC,mCAAxC;AACAF,WAAO,CAACG,2BAAR,GAAsC,KAAKC,sBAAL,IAA+B,KAAKF,mCAA1E;AACAF,WAAO,CAACK,mBAAR,GAA8B,KAAKC,sBAAnC;AACAN,WAAO,CAACO,uCAAR,GAAkD,KAAKC,6CAAvD;AACH,GALM;;AAOAhB,gDAAP;AACI,WAAO,sBAAP;AACH,GAFM;AA5FP;;;;;;AAIcA,yDAAkC,IAAlC;AAEd;;;;;AAIcA,wEAAiD,IAAjD;AAEd;;;;;;AAKcA,yDAAkC,IAAlC;AAEd;;;;;;AAKcA,mFAA4D,IAA5D;;AAQdiB,cAFC3B,SAAS,EAEV,EADCC,gBAAgB,CAAC,8BAAD,CACjB;;AAaA0B,cAFC3B,SAAS,EAEV,EADCC,gBAAgB,CAAC,8BAAD,CACjB;;AAYA0B,cAFC3B,SAAS,EAEV,EADCC,gBAAgB,CAAC,8BAAD,CACjB;;AAWA0B,cAFC3B,SAAS,EAEV,EADCC,gBAAgB,CAAC,8BAAD,CACjB;;AA2BJ;AAAC,CAhGD,CAA0CE,kBAA1C;;SAAaO","names":["serialize","expandToProperty","MaterialDefines","MaterialPluginBase","__extends","_this","material","addToPluginList","_super","MaterialBRDFDefines","PBRBRDFConfiguration","DEFAULT_USE_ENERGY_CONSERVATION","DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED","DEFAULT_USE_SPHERICAL_HARMONICS","DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION","_internalMarkAllSubMeshesAsMiscDirty","_dirtyCallbacks","_enable","defines","BRDF_V_HEIGHT_CORRELATED","_useSmithVisibilityHeightCorrelated","MS_BRDF_ENERGY_CONSERVATION","_useEnergyConservation","SPHERICAL_HARMONICS","_useSphericalHarmonics","SPECULAR_GLOSSINESS_ENERGY_CONSERVATION","_useSpecularGlossinessInputEnergyConservation","__decorate"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/PBR/pbrBRDFConfiguration.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { Constants } from \"../../Engines/constants\";\r\nimport { serialize, expandToProperty } from \"../../Misc/decorators\";\r\nimport { MaterialDefines } from \"../materialDefines\";\r\nimport { MaterialPluginBase } from \"../materialPluginBase\";\r\nimport type { PBRBaseMaterial } from \"./pbrBaseMaterial\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class MaterialBRDFDefines extends MaterialDefines {\r\n    BRDF_V_HEIGHT_CORRELATED = false;\r\n    MS_BRDF_ENERGY_CONSERVATION = false;\r\n    SPHERICAL_HARMONICS = false;\r\n    SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = false;\r\n}\r\n\r\n/**\r\n * Plugin that implements the BRDF component of the PBR material\r\n */\r\nexport class PBRBRDFConfiguration extends MaterialPluginBase {\r\n    /**\r\n     * Default value used for the energy conservation.\r\n     * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\r\n     */\r\n    public static DEFAULT_USE_ENERGY_CONSERVATION = true;\r\n\r\n    /**\r\n     * Default value used for the Smith Visibility Height Correlated mode.\r\n     * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\r\n     */\r\n    public static DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED = true;\r\n\r\n    /**\r\n     * Default value used for the IBL diffuse part.\r\n     * This can help switching back to the polynomials mode globally which is a tiny bit\r\n     * less GPU intensive at the drawback of a lower quality.\r\n     */\r\n    public static DEFAULT_USE_SPHERICAL_HARMONICS = true;\r\n\r\n    /**\r\n     * Default value used for activating energy conservation for the specular workflow.\r\n     * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\r\n     * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\r\n     */\r\n    public static DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION = true;\r\n\r\n    private _useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\r\n    /**\r\n     * Defines if the material uses energy conservation.\r\n     */\r\n    @serialize()\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\r\n\r\n    private _useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\r\n    /**\r\n     * LEGACY Mode set to false\r\n     * Defines if the material uses height smith correlated visibility term.\r\n     * If you intent to not use our default BRDF, you need to load a separate BRDF Texture for the PBR\r\n     * You can either load https://assets.babylonjs.com/environments/uncorrelatedBRDF.png\r\n     * or https://assets.babylonjs.com/environments/uncorrelatedBRDF.dds to have more precision\r\n     * Not relying on height correlated will also disable energy conservation.\r\n     */\r\n    @serialize()\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\r\n\r\n    private _useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\r\n    /**\r\n     * LEGACY Mode set to false\r\n     * Defines if the material uses spherical harmonics vs spherical polynomials for the\r\n     * diffuse part of the IBL.\r\n     * The harmonics despite a tiny bigger cost has been proven to provide closer results\r\n     * to the ground truth.\r\n     */\r\n    @serialize()\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\r\n\r\n    private _useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\r\n    /**\r\n     * Defines if the material uses energy conservation, when the specular workflow is active.\r\n     * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\r\n     * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\r\n     * In the deactivated case, the material author has to ensure energy conservation, for a physically plausible rendering.\r\n     */\r\n    @serialize()\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\r\n\r\n    /** @hidden */\r\n    private _internalMarkAllSubMeshesAsMiscDirty: () => void;\r\n\r\n    /** @hidden */\r\n    public _markAllSubMeshesAsMiscDirty(): void {\r\n        this._internalMarkAllSubMeshesAsMiscDirty();\r\n    }\r\n\r\n    constructor(material: PBRBaseMaterial, addToPluginList = true) {\r\n        super(material, \"PBRBRDF\", 90, new MaterialBRDFDefines(), addToPluginList);\r\n\r\n        this._internalMarkAllSubMeshesAsMiscDirty = material._dirtyCallbacks[Constants.MATERIAL_MiscDirtyFlag];\r\n        this._enable(true);\r\n    }\r\n\r\n    public prepareDefines(defines: MaterialBRDFDefines): void {\r\n        defines.BRDF_V_HEIGHT_CORRELATED = this._useSmithVisibilityHeightCorrelated;\r\n        defines.MS_BRDF_ENERGY_CONSERVATION = this._useEnergyConservation && this._useSmithVisibilityHeightCorrelated;\r\n        defines.SPHERICAL_HARMONICS = this._useSphericalHarmonics;\r\n        defines.SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = this._useSpecularGlossinessInputEnergyConservation;\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"PBRBRDFConfiguration\";\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}