{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { Color3 } from \"../../../Maths/math.color.js\";\nimport { Observable } from \"../../../Misc/observable.js\";\n/**\n * Class used to store a color step for the GradientBlock\n */\n\nvar GradientBlockColorStep =\n/** @class */\nfunction () {\n  /**\n   * Creates a new GradientBlockColorStep\n   * @param step defines a value indicating which step this color is associated with (between 0 and 1)\n   * @param color defines the color associated with this step\n   */\n  function GradientBlockColorStep(step, color) {\n    this.step = step;\n    this.color = color;\n  }\n\n  Object.defineProperty(GradientBlockColorStep.prototype, \"step\", {\n    /**\n     * Gets value indicating which step this color is associated with (between 0 and 1)\n     */\n    get: function get() {\n      return this._step;\n    },\n\n    /**\n     * Sets a value indicating which step this color is associated with (between 0 and 1)\n     */\n    set: function set(val) {\n      this._step = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(GradientBlockColorStep.prototype, \"color\", {\n    /**\n     * Gets the color associated with this step\n     */\n    get: function get() {\n      return this._color;\n    },\n\n    /**\n     * Sets the color associated with this step\n     */\n    set: function set(val) {\n      this._color = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return GradientBlockColorStep;\n}();\n\nexport { GradientBlockColorStep };\n/**\n * Block used to return a color from a gradient based on an input value between 0 and 1\n */\n\nvar GradientBlock =\n/** @class */\nfunction (_super) {\n  __extends(GradientBlock, _super);\n  /**\n   * Creates a new GradientBlock\n   * @param name defines the block name\n   */\n\n\n  function GradientBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /**\n     * Gets or sets the list of color steps\n     */\n\n\n    _this.colorSteps = [new GradientBlockColorStep(0, Color3.Black()), new GradientBlockColorStep(1.0, Color3.White())];\n    /** Gets an observable raised when the value is changed */\n\n    _this.onValueChangedObservable = new Observable();\n\n    _this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n\n    return _this;\n  }\n  /** calls observable when the value is changed*/\n\n\n  GradientBlock.prototype.colorStepsUpdated = function () {\n    this.onValueChangedObservable.notifyObservers(this);\n  };\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  GradientBlock.prototype.getClassName = function () {\n    return \"GradientBlock\";\n  };\n\n  Object.defineProperty(GradientBlock.prototype, \"gradient\", {\n    /**\n     * Gets the gradient input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(GradientBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  GradientBlock.prototype._writeColorConstant = function (index) {\n    var step = this.colorSteps[index];\n    return \"vec3(\".concat(step.color.r, \", \").concat(step.color.g, \", \").concat(step.color.b, \")\");\n  };\n\n  GradientBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n\n    if (!this.colorSteps.length || !this.gradient.connectedPoint) {\n      state.compilationString += this._declareOutput(output, state) + \" = vec3(0., 0., 0.);\\r\\n\";\n      return;\n    }\n\n    var tempColor = state._getFreeVariableName(\"gradientTempColor\");\n\n    var tempPosition = state._getFreeVariableName(\"gradientTempPosition\");\n\n    state.compilationString += \"vec3 \".concat(tempColor, \" = \").concat(this._writeColorConstant(0), \";\\r\\n\");\n    state.compilationString += \"float \".concat(tempPosition, \";\\r\\n\");\n    var gradientSource = this.gradient.associatedVariableName;\n\n    if (this.gradient.connectedPoint.type !== NodeMaterialBlockConnectionPointTypes.Float) {\n      gradientSource += \".x\";\n    }\n\n    for (var index = 1; index < this.colorSteps.length; index++) {\n      var step = this.colorSteps[index];\n      var previousStep = this.colorSteps[index - 1];\n      state.compilationString += \"\".concat(tempPosition, \" = clamp((\").concat(gradientSource, \" - \").concat(state._emitFloat(previousStep.step), \") / (\").concat(state._emitFloat(step.step), \" -  \").concat(state._emitFloat(previousStep.step), \"), 0.0, 1.0) * step(\").concat(state._emitFloat(index), \", \").concat(state._emitFloat(this.colorSteps.length - 1), \");\\r\\n\");\n      state.compilationString += \"\".concat(tempColor, \" = mix(\").concat(tempColor, \", \").concat(this._writeColorConstant(index), \", \").concat(tempPosition, \");\\r\\n\");\n    }\n\n    state.compilationString += this._declareOutput(output, state) + \" = \".concat(tempColor, \";\\r\\n\");\n    return this;\n  };\n\n  GradientBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.colorSteps = [];\n\n    for (var _i = 0, _a = this.colorSteps; _i < _a.length; _i++) {\n      var step = _a[_i];\n      serializationObject.colorSteps.push({\n        step: step.step,\n        color: {\n          r: step.color.r,\n          g: step.color.g,\n          b: step.color.b\n        }\n      });\n    }\n\n    return serializationObject;\n  };\n\n  GradientBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.colorSteps = [];\n\n    for (var _i = 0, _a = serializationObject.colorSteps; _i < _a.length; _i++) {\n      var step = _a[_i];\n      this.colorSteps.push(new GradientBlockColorStep(step.step, new Color3(step.color.r, step.color.g, step.color.b)));\n    }\n  };\n\n  GradientBlock.prototype._dumpPropertiesCode = function () {\n    var codeString = _super.prototype._dumpPropertiesCode.call(this);\n\n    codeString += \"\".concat(this._codeVariableName, \".colorSteps = [];\\r\\n\");\n\n    for (var _i = 0, _a = this.colorSteps; _i < _a.length; _i++) {\n      var colorStep = _a[_i];\n      codeString += \"\".concat(this._codeVariableName, \".colorSteps.push(new BABYLON.GradientBlockColorStep(\").concat(colorStep.step, \", new BABYLON.Color3(\").concat(colorStep.color.r, \", \").concat(colorStep.color.g, \", \").concat(colorStep.color.b, \")));\\r\\n\");\n    }\n\n    return codeString;\n  };\n\n  return GradientBlock;\n}(NodeMaterialBlock);\n\nexport { GradientBlock };\nRegisterClass(\"BABYLON.GradientBlock\", GradientBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","Color3","Observable","step","color","Object","GradientBlockColorStep","_step","val","_color","__extends","name","_super","Neutral","_this","Black","White","registerInput","Float","registerOutput","_inputs","acceptedConnectionPointTypes","push","Vector2","Vector3","Vector4","Color4","GradientBlock","onValueChangedObservable","notifyObservers","_outputs","index","colorSteps","r","concat","g","b","state","_buildBlock","call","output","length","gradient","connectedPoint","compilationString","_declareOutput","tempColor","_getFreeVariableName","tempPosition","_writeColorConstant","gradientSource","associatedVariableName","type","previousStep","_emitFloat","serializationObject","serialize","_i","scene","rootUrl","_deserialize","codeString","_dumpPropertiesCode","_codeVariableName","colorStep"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/gradientBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { Color3 } from \"../../../Maths/math.color\";\r\nimport type { Scene } from \"../../../scene\";\r\nimport { Observable } from \"../../../Misc/observable\";\r\n\r\n/**\r\n * Class used to store a color step for the GradientBlock\r\n */\r\nexport class GradientBlockColorStep {\r\n    private _step: number;\r\n    /**\r\n     * Gets value indicating which step this color is associated with (between 0 and 1)\r\n     */\r\n    public get step(): number {\r\n        return this._step;\r\n    }\r\n\r\n    /**\r\n     * Sets a value indicating which step this color is associated with (between 0 and 1)\r\n     */\r\n    public set step(val: number) {\r\n        this._step = val;\r\n    }\r\n\r\n    private _color: Color3;\r\n\r\n    /**\r\n     * Gets the color associated with this step\r\n     */\r\n    public get color(): Color3 {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * Sets the color associated with this step\r\n     */\r\n    public set color(val: Color3) {\r\n        this._color = val;\r\n    }\r\n\r\n    /**\r\n     * Creates a new GradientBlockColorStep\r\n     * @param step defines a value indicating which step this color is associated with (between 0 and 1)\r\n     * @param color defines the color associated with this step\r\n     */\r\n    public constructor(step: number, color: Color3) {\r\n        this.step = step;\r\n        this.color = color;\r\n    }\r\n}\r\n\r\n/**\r\n * Block used to return a color from a gradient based on an input value between 0 and 1\r\n */\r\nexport class GradientBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Gets or sets the list of color steps\r\n     */\r\n    public colorSteps: GradientBlockColorStep[] = [new GradientBlockColorStep(0, Color3.Black()), new GradientBlockColorStep(1.0, Color3.White())];\r\n\r\n    /** Gets an observable raised when the value is changed */\r\n    public onValueChangedObservable = new Observable<GradientBlock>();\r\n\r\n    /** calls observable when the value is changed*/\r\n    public colorStepsUpdated() {\r\n        this.onValueChangedObservable.notifyObservers(this);\r\n    }\r\n    /**\r\n     * Creates a new GradientBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\r\n\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"GradientBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the gradient input component\r\n     */\r\n    public get gradient(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    private _writeColorConstant(index: number) {\r\n        const step = this.colorSteps[index];\r\n        return `vec3(${step.color.r}, ${step.color.g}, ${step.color.b})`;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        if (!this.colorSteps.length || !this.gradient.connectedPoint) {\r\n            state.compilationString += this._declareOutput(output, state) + ` = vec3(0., 0., 0.);\\r\\n`;\r\n            return;\r\n        }\r\n\r\n        const tempColor = state._getFreeVariableName(\"gradientTempColor\");\r\n        const tempPosition = state._getFreeVariableName(\"gradientTempPosition\");\r\n\r\n        state.compilationString += `vec3 ${tempColor} = ${this._writeColorConstant(0)};\\r\\n`;\r\n        state.compilationString += `float ${tempPosition};\\r\\n`;\r\n\r\n        let gradientSource = this.gradient.associatedVariableName;\r\n\r\n        if (this.gradient.connectedPoint!.type !== NodeMaterialBlockConnectionPointTypes.Float) {\r\n            gradientSource += \".x\";\r\n        }\r\n\r\n        for (let index = 1; index < this.colorSteps.length; index++) {\r\n            const step = this.colorSteps[index];\r\n            const previousStep = this.colorSteps[index - 1];\r\n            state.compilationString += `${tempPosition} = clamp((${gradientSource} - ${state._emitFloat(previousStep.step)}) / (${state._emitFloat(\r\n                step.step\r\n            )} -  ${state._emitFloat(previousStep.step)}), 0.0, 1.0) * step(${state._emitFloat(index)}, ${state._emitFloat(this.colorSteps.length - 1)});\\r\\n`;\r\n            state.compilationString += `${tempColor} = mix(${tempColor}, ${this._writeColorConstant(index)}, ${tempPosition});\\r\\n`;\r\n        }\r\n        state.compilationString += this._declareOutput(output, state) + ` = ${tempColor};\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.colorSteps = [];\r\n\r\n        for (const step of this.colorSteps) {\r\n            serializationObject.colorSteps.push({\r\n                step: step.step,\r\n                color: {\r\n                    r: step.color.r,\r\n                    g: step.color.g,\r\n                    b: step.color.b,\r\n                },\r\n            });\r\n        }\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.colorSteps = [];\r\n\r\n        for (const step of serializationObject.colorSteps) {\r\n            this.colorSteps.push(new GradientBlockColorStep(step.step, new Color3(step.color.r, step.color.g, step.color.b)));\r\n        }\r\n    }\r\n\r\n    protected _dumpPropertiesCode() {\r\n        let codeString = super._dumpPropertiesCode();\r\n\r\n        codeString += `${this._codeVariableName}.colorSteps = [];\\r\\n`;\r\n\r\n        for (const colorStep of this.colorSteps) {\r\n            codeString += `${this._codeVariableName}.colorSteps.push(new BABYLON.GradientBlockColorStep(${colorStep.step}, new BABYLON.Color3(${colorStep.color.r}, ${colorStep.color.g}, ${colorStep.color.b})));\\r\\n`;\r\n        }\r\n\r\n        return codeString;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.GradientBlock\", GradientBlock);\r\n"]},"metadata":{},"sourceType":"module"}