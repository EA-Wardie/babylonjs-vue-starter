{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to apply a cross product between 2 vectors\n */\n\nvar CrossBlock =\n/** @class */\nfunction (_super) {\n  __extends(CrossBlock, _super);\n  /**\n   * Creates a new CrossBlock\n   * @param name defines the block name\n   */\n\n\n  function CrossBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this._linkConnectionTypes(0, 1);\n\n    _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n\n    _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\n\n    _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n\n    _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  CrossBlock.prototype.getClassName = function () {\n    return \"CrossBlock\";\n  };\n\n  Object.defineProperty(CrossBlock.prototype, \"left\", {\n    /**\n     * Gets the left operand input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CrossBlock.prototype, \"right\", {\n    /**\n     * Gets the right operand input component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CrossBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CrossBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + \" = cross(\".concat(this.left.associatedVariableName, \".xyz, \").concat(this.right.associatedVariableName, \".xyz);\\r\\n\");\n    return this;\n  };\n\n  return CrossBlock;\n}(NodeMaterialBlock);\n\nexport { CrossBlock };\nRegisterClass(\"BABYLON.CrossBlock\", CrossBlock);","map":{"version":3,"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,yBAAlC;AACA,SAASC,qCAAT,QAAsD,mDAAtD;AAGA,SAASC,wBAAT,QAAyC,sCAAzC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA;;;;AAGA;AAAA;AAAA;AAAgCC;AAC5B;;;;;;AAIA,sBAAmBC,IAAnB,EAA+B;AAA/B,gBACIC,kBAAMD,IAAN,EAAYH,wBAAwB,CAACK,OAArC,KAA6C,IADjD;;AAGIC,SAAI,CAACC,aAAL,CAAmB,MAAnB,EAA2BR,qCAAqC,CAACS,UAAjE;;AACAF,SAAI,CAACC,aAAL,CAAmB,OAAnB,EAA4BR,qCAAqC,CAACS,UAAlE;;AACAF,SAAI,CAACG,cAAL,CAAoB,QAApB,EAA8BV,qCAAqC,CAACW,OAApE;;AAEAJ,SAAI,CAACK,oBAAL,CAA0B,CAA1B,EAA6B,CAA7B;;AAEAL,SAAI,CAACM,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDf,qCAAqC,CAACgB,KAAxF;;AACAT,SAAI,CAACM,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDf,qCAAqC,CAACiB,MAAxF;;AACAV,SAAI,CAACM,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDf,qCAAqC,CAACkB,OAAxF;;AACAX,SAAI,CAACM,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDf,qCAAqC,CAACgB,KAAxF;;AACAT,SAAI,CAACM,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDf,qCAAqC,CAACiB,MAAxF;;AACAV,SAAI,CAACM,OAAL,CAAa,CAAb,EAAgBC,4BAAhB,CAA6CC,IAA7C,CAAkDf,qCAAqC,CAACkB,OAAxF;;;AACH;AAED;;;;;;AAIOC,sCAAP;AACI,WAAO,YAAP;AACH,GAFM;;AAOPC,wBAAWD,oBAAX,EAAW,MAAX,EAAe;AAHf;;;SAGA;AACI,aAAO,KAAKN,OAAL,CAAa,CAAb,CAAP;AACH,KAFc;qBAAA;;AAAA,GAAf;AAOAO,wBAAWD,oBAAX,EAAW,OAAX,EAAgB;AAHhB;;;SAGA;AACI,aAAO,KAAKN,OAAL,CAAa,CAAb,CAAP;AACH,KAFe;qBAAA;;AAAA,GAAhB;AAOAO,wBAAWD,oBAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA;AACI,aAAO,KAAKE,QAAL,CAAc,CAAd,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;;AAIUF,qCAAV,UAAsBG,KAAtB,EAAmD;AAC/CjB,qBAAMkB,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBF,KAAlB;;AAEA,QAAMG,MAAM,GAAG,KAAKJ,QAAL,CAAc,CAAd,CAAf;AAEAC,SAAK,CAACI,iBAAN,IAA2B,KAAKC,cAAL,CAAoBF,MAApB,EAA4BH,KAA5B,IAAqC,mBAAY,KAAKM,IAAL,CAAUC,sBAAtB,EAA4C,QAA5C,EAA4CC,MAA5C,CAAqD,KAAKC,KAAL,CAAWF,sBAAhE,EAAsF,YAAtF,CAAhE;AAEA,WAAO,IAAP;AACH,GARS;;AASd;AAAC,CA5DD,CAAgC9B,iBAAhC;;;AA8DAG,aAAa,CAAC,oBAAD,EAAuBiB,UAAvB,CAAb","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Neutral","_this","registerInput","AutoDetect","registerOutput","Vector3","_linkConnectionTypes","_inputs","excludedConnectionPointTypes","push","Float","Matrix","Vector2","CrossBlock","Object","_outputs","state","_buildBlock","call","output","compilationString","_declareOutput","left","associatedVariableName","concat","right"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/crossBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * Block used to apply a cross product between 2 vectors\r\n */\r\nexport class CrossBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new CrossBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n\r\n        this._linkConnectionTypes(0, 1);\r\n\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\r\n        this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\r\n        this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\r\n        this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"CrossBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the left operand input component\r\n     */\r\n    public get left(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the right operand input component\r\n     */\r\n    public get right(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        state.compilationString += this._declareOutput(output, state) + ` = cross(${this.left.associatedVariableName}.xyz, ${this.right.associatedVariableName}.xyz);\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.CrossBlock\", CrossBlock);\r\n"]},"metadata":{},"sourceType":"module"}