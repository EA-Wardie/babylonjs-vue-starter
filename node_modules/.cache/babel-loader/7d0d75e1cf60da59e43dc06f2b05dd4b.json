{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nvar name = \"bonesDeclaration\";\nvar shader = \"#if NUM_BONE_INFLUENCERS>0\\nattribute vec4 matricesIndices;\\nattribute vec4 matricesWeights;\\n#if NUM_BONE_INFLUENCERS>4\\nattribute vec4 matricesIndicesExtra;\\nattribute vec4 matricesWeightsExtra;\\n#endif\\n#ifndef BAKED_VERTEX_ANIMATION_TEXTURE\\n#ifdef BONETEXTURE\\nuniform sampler2D boneSampler;\\nuniform float boneTextureWidth;\\n#else\\nuniform mat4 mBones[BonesPerMesh];\\n#ifdef BONES_VELOCITY_ENABLED\\nuniform mat4 mPreviousBones[BonesPerMesh];\\n#endif\\n#endif\\n#ifdef BONETEXTURE\\n#define inline\\nmat4 readMatrixFromRawSampler(sampler2D smp,float index)\\n{\\nfloat offset=index *4.0;\\nfloat dx=1.0/boneTextureWidth;\\nvec4 m0=texture2D(smp,vec2(dx*(offset+0.5),0.));\\nvec4 m1=texture2D(smp,vec2(dx*(offset+1.5),0.));\\nvec4 m2=texture2D(smp,vec2(dx*(offset+2.5),0.));\\nvec4 m3=texture2D(smp,vec2(dx*(offset+3.5),0.));\\nreturn mat4(m0,m1,m2,m3);\\n}\\n#endif\\n#endif\\n#endif\\n\"; // Sideeffect\n\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\n\nexport var bonesDeclaration = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,8BAA5B;AAEA,IAAMC,IAAI,GAAG,kBAAb;AACA,IAAMC,MAAM,GAAG,42BAAf,C,CAiCA;;AACAF,WAAW,CAACG,oBAAZ,CAAiCF,IAAjC,IAAyCC,MAAzC;AACA;;AACA,OAAO,IAAME,gBAAgB,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAAzB","names":["ShaderStore","name","shader","IncludesShadersStore","bonesDeclaration"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/bonesDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bonesDeclaration\";\nconst shader = `#if NUM_BONE_INFLUENCERS>0\nattribute vec4 matricesIndices;\rattribute vec4 matricesWeights;\r#if NUM_BONE_INFLUENCERS>4\nattribute vec4 matricesIndicesExtra;\rattribute vec4 matricesWeightsExtra;\r#endif\n#ifndef BAKED_VERTEX_ANIMATION_TEXTURE\n#ifdef BONETEXTURE\nuniform sampler2D boneSampler;\runiform float boneTextureWidth;\r#else\nuniform mat4 mBones[BonesPerMesh];\r#ifdef BONES_VELOCITY_ENABLED\nuniform mat4 mPreviousBones[BonesPerMesh];\r#endif\n#endif\n#ifdef BONETEXTURE\n#define inline\nmat4 readMatrixFromRawSampler(sampler2D smp,float index)\r{\rfloat offset=index *4.0;\rfloat dx=1.0/boneTextureWidth;\rvec4 m0=texture2D(smp,vec2(dx*(offset+0.5),0.));\rvec4 m1=texture2D(smp,vec2(dx*(offset+1.5),0.));\rvec4 m2=texture2D(smp,vec2(dx*(offset+2.5),0.));\rvec4 m3=texture2D(smp,vec2(dx*(offset+3.5),0.));\rreturn mat4(m0,m1,m2,m3);\r}\r#endif\n#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const bonesDeclaration = { name, shader };\n"]},"metadata":{},"sourceType":"module"}