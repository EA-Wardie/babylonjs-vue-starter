{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Quaternion } from \"../../Maths/math.vector.js\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager.js\";\n/**\n * The motion controller class for the standard HTC-Vive controllers\n */\n\nvar WebXRHTCViveMotionController =\n/** @class */\nfunction (_super) {\n  __extends(WebXRHTCViveMotionController, _super);\n  /**\n   * Create a new Vive motion controller object\n   * @param scene the scene to use to create this controller\n   * @param gamepadObject the corresponding gamepad object\n   * @param handedness the handedness of the controller\n   */\n\n\n  function WebXRHTCViveMotionController(scene, gamepadObject, handedness) {\n    var _this = _super.call(this, scene, HTCViveLayout[handedness], gamepadObject, handedness) || this;\n\n    _this.profileId = \"htc-vive\";\n    return _this;\n  }\n\n  WebXRHTCViveMotionController.prototype._getFilenameAndPath = function () {\n    var filename = WebXRHTCViveMotionController.MODEL_FILENAME;\n    var path = WebXRHTCViveMotionController.MODEL_BASE_URL;\n    return {\n      filename: filename,\n      path: path\n    };\n  };\n\n  WebXRHTCViveMotionController.prototype._getModelLoadingConstraints = function () {\n    return true;\n  };\n\n  WebXRHTCViveMotionController.prototype._processLoadedModel = function (_meshes) {\n    var _this = this;\n\n    this.getComponentIds().forEach(function (id) {\n      var comp = id && _this.getComponent(id);\n\n      if (comp) {\n        comp.onButtonStateChangedObservable.add(function (component) {\n          if (!_this.rootMesh || _this.disableAnimation) {\n            return;\n          }\n\n          switch (id) {\n            case \"xr-standard-trigger\":\n              _this._modelRootNode.getChildren()[6].rotation.x = -component.value * 0.15;\n              return;\n\n            case \"xr-standard-touchpad\":\n              return;\n\n            case \"xr-standard-squeeze\":\n              return;\n          }\n        }, undefined, true);\n      }\n    });\n  };\n\n  WebXRHTCViveMotionController.prototype._setRootMesh = function (meshes) {\n    this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n    meshes.forEach(function (mesh) {\n      mesh.isPickable = false;\n    });\n    this._modelRootNode = meshes[1];\n    this._modelRootNode.parent = this.rootMesh;\n\n    if (!this.scene.useRightHandedSystem) {\n      this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n    }\n  };\n\n  WebXRHTCViveMotionController.prototype._updateModel = function () {// no-op. model is updated using observables.\n  };\n  /**\n   * The base url used to load the left and right controller models\n   */\n\n\n  WebXRHTCViveMotionController.MODEL_BASE_URL = \"https://controllers.babylonjs.com/vive/\";\n  /**\n   * File name for the controller model.\n   */\n\n  WebXRHTCViveMotionController.MODEL_FILENAME = \"wand.babylon\";\n  return WebXRHTCViveMotionController;\n}(WebXRAbstractMotionController);\n\nexport { WebXRHTCViveMotionController }; // register the profile\n\nWebXRMotionControllerManager.RegisterController(\"htc-vive\", function (xrInput, scene) {\n  return new WebXRHTCViveMotionController(scene, xrInput.gamepad, xrInput.handedness);\n}); // WebXRMotionControllerManager.RegisterController(\"htc-vive-legacy\", (xrInput: XRInputSource, scene: Scene) => {\n//     return new WebXRHTCViveMotionController(scene, <any>(xrInput.gamepad), xrInput.handedness, true);\n// });\n\nvar HTCViveLayout = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc_vive_none\",\n    assetPath: \"none.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc_vive_none\",\n    assetPath: \"none.glb\"\n  },\n  none: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc-vive-none\",\n    assetPath: \"none.glb\"\n  }\n};","map":{"version":3,"mappings":"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","names":["WebXRAbstractMotionController","Mesh","Quaternion","WebXRMotionControllerManager","__extends","scene","gamepadObject","handedness","_super","HTCViveLayout","_this","WebXRHTCViveMotionController","filename","MODEL_FILENAME","path","MODEL_BASE_URL","_meshes","getComponentIds","forEach","id","comp","getComponent","onButtonStateChangedObservable","add","component","rootMesh","disableAnimation","_modelRootNode","getChildren","rotation","x","value","undefined","meshes","profileId","mesh","isPickable","parent","useRightHandedSystem","rotationQuaternion","FromEulerAngles","Math","PI","RegisterController","xrInput","gamepad","left","selectComponentId","components","type","gamepadIndices","button","rootNodeName","visualResponses","xAxis","yAxis","menu","gamepadMapping","assetPath","right","none"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/XR/motionController/webXRHTCViveMotionController.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport type { IMotionControllerLayoutMap, IMinimalMotionControllerObject, MotionControllerHandedness } from \"./webXRAbstractMotionController\";\r\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\r\nimport type { Scene } from \"../../scene\";\r\nimport type { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport { Mesh } from \"../../Meshes/mesh\";\r\nimport { Quaternion } from \"../../Maths/math.vector\";\r\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager\";\r\n\r\n/**\r\n * The motion controller class for the standard HTC-Vive controllers\r\n */\r\nexport class WebXRHTCViveMotionController extends WebXRAbstractMotionController {\r\n    private _modelRootNode: AbstractMesh;\r\n\r\n    /**\r\n     * The base url used to load the left and right controller models\r\n     */\r\n    public static MODEL_BASE_URL: string = \"https://controllers.babylonjs.com/vive/\";\r\n    /**\r\n     * File name for the controller model.\r\n     */\r\n    public static MODEL_FILENAME: string = \"wand.babylon\";\r\n\r\n    public profileId = \"htc-vive\";\r\n\r\n    /**\r\n     * Create a new Vive motion controller object\r\n     * @param scene the scene to use to create this controller\r\n     * @param gamepadObject the corresponding gamepad object\r\n     * @param handedness the handedness of the controller\r\n     */\r\n    constructor(scene: Scene, gamepadObject: IMinimalMotionControllerObject, handedness: MotionControllerHandedness) {\r\n        super(scene, HTCViveLayout[handedness], gamepadObject, handedness);\r\n    }\r\n\r\n    protected _getFilenameAndPath(): { filename: string; path: string } {\r\n        const filename = WebXRHTCViveMotionController.MODEL_FILENAME;\r\n        const path = WebXRHTCViveMotionController.MODEL_BASE_URL;\r\n\r\n        return {\r\n            filename,\r\n            path,\r\n        };\r\n    }\r\n\r\n    protected _getModelLoadingConstraints(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected _processLoadedModel(_meshes: AbstractMesh[]): void {\r\n        this.getComponentIds().forEach((id) => {\r\n            const comp = id && this.getComponent(id);\r\n            if (comp) {\r\n                comp.onButtonStateChangedObservable.add(\r\n                    (component) => {\r\n                        if (!this.rootMesh || this.disableAnimation) {\r\n                            return;\r\n                        }\r\n\r\n                        switch (id) {\r\n                            case \"xr-standard-trigger\":\r\n                                (<AbstractMesh>this._modelRootNode.getChildren()[6]).rotation.x = -component.value * 0.15;\r\n                                return;\r\n                            case \"xr-standard-touchpad\":\r\n                                return;\r\n                            case \"xr-standard-squeeze\":\r\n                                return;\r\n                        }\r\n                    },\r\n                    undefined,\r\n                    true\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    protected _setRootMesh(meshes: AbstractMesh[]): void {\r\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\r\n\r\n        meshes.forEach((mesh) => {\r\n            mesh.isPickable = false;\r\n        });\r\n        this._modelRootNode = meshes[1];\r\n        this._modelRootNode.parent = this.rootMesh;\r\n        if (!this.scene.useRightHandedSystem) {\r\n            this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\r\n        }\r\n    }\r\n\r\n    protected _updateModel(): void {\r\n        // no-op. model is updated using observables.\r\n    }\r\n}\r\n\r\n// register the profile\r\nWebXRMotionControllerManager.RegisterController(\"htc-vive\", (xrInput: XRInputSource, scene: Scene) => {\r\n    return new WebXRHTCViveMotionController(scene, <any>xrInput.gamepad, xrInput.handedness);\r\n});\r\n\r\n// WebXRMotionControllerManager.RegisterController(\"htc-vive-legacy\", (xrInput: XRInputSource, scene: Scene) => {\r\n//     return new WebXRHTCViveMotionController(scene, <any>(xrInput.gamepad), xrInput.handedness, true);\r\n// });\r\n\r\nconst HTCViveLayout: IMotionControllerLayoutMap = {\r\n    left: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                type: \"squeeze\",\r\n                gamepadIndices: {\r\n                    button: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_squeeze\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                type: \"touchpad\",\r\n                gamepadIndices: {\r\n                    button: 2,\r\n                    xAxis: 0,\r\n                    yAxis: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_touchpad\",\r\n                visualResponses: {},\r\n            },\r\n            menu: {\r\n                type: \"button\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"menu\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"htc_vive_none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n    right: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                type: \"squeeze\",\r\n                gamepadIndices: {\r\n                    button: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_squeeze\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                type: \"touchpad\",\r\n                gamepadIndices: {\r\n                    button: 2,\r\n                    xAxis: 0,\r\n                    yAxis: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_touchpad\",\r\n                visualResponses: {},\r\n            },\r\n            menu: {\r\n                type: \"button\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"menu\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"htc_vive_none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n    none: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                type: \"squeeze\",\r\n                gamepadIndices: {\r\n                    button: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_squeeze\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                type: \"touchpad\",\r\n                gamepadIndices: {\r\n                    button: 2,\r\n                    xAxis: 0,\r\n                    yAxis: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_touchpad\",\r\n                visualResponses: {},\r\n            },\r\n            menu: {\r\n                type: \"button\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"menu\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"htc-vive-none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}