{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { ShaderLanguage } from \"../../Materials/shaderLanguage.js\";\n/** @hidden */\n\nvar WebGLShaderProcessor =\n/** @class */\nfunction () {\n  function WebGLShaderProcessor() {\n    this.shaderLanguage = ShaderLanguage.GLSL;\n  }\n\n  WebGLShaderProcessor.prototype.postProcessor = function (code, defines, isFragment, processingContext, engine) {\n    // Remove extensions\n    if (!engine.getCaps().drawBuffersExtension) {\n      // even if enclosed in #if/#endif, IE11 does parse the #extension declaration, so we need to remove it altogether\n      var regex = /#extension.+GL_EXT_draw_buffers.+(enable|require)/g;\n      code = code.replace(regex, \"\");\n    }\n\n    return code;\n  };\n\n  return WebGLShaderProcessor;\n}();\n\nexport { WebGLShaderProcessor };","map":{"version":3,"mappings":";;AAAA,SAASA,cAAT,QAA+B,mCAA/B;AAOA;;AACA;AAAA;AAAA;AAAA;AACW,0BAAiBA,cAAc,CAACC,IAAhC;AAYV;;AAVUC,iDAAP,UAAqBC,IAArB,EAAmCC,OAAnC,EAAsDC,UAAtD,EAA2EC,iBAA3E,EAAiIC,MAAjI,EAAmJ;AAC/I;AACA,QAAI,CAACA,MAAM,CAACC,OAAP,GAAiBC,oBAAtB,EAA4C;AACxC;AACA,UAAMC,KAAK,GAAG,oDAAd;AACAP,UAAI,GAAGA,IAAI,CAACQ,OAAL,CAAaD,KAAb,EAAoB,EAApB,CAAP;AACH;;AAED,WAAOP,IAAP;AACH,GATM;;AAUX;AAAC,CAbD","names":["ShaderLanguage","GLSL","WebGLShaderProcessor","code","defines","isFragment","processingContext","engine","getCaps","drawBuffersExtension","regex","replace"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGL/webGLShaderProcessors.ts"],"sourcesContent":["import { ShaderLanguage } from \"../../Materials/shaderLanguage\";\r\nimport type { Nullable } from \"../../types\";\r\nimport type { IShaderProcessor } from \"../Processors/iShaderProcessor\";\r\nimport type { ShaderProcessingContext } from \"../Processors/shaderProcessingOptions\";\r\n\r\ndeclare type ThinEngine = import(\"../thinEngine\").ThinEngine;\r\n\r\n/** @hidden */\r\nexport class WebGLShaderProcessor implements IShaderProcessor {\r\n    public shaderLanguage = ShaderLanguage.GLSL;\r\n\r\n    public postProcessor(code: string, defines: string[], isFragment: boolean, processingContext: Nullable<ShaderProcessingContext>, engine: ThinEngine) {\r\n        // Remove extensions\r\n        if (!engine.getCaps().drawBuffersExtension) {\r\n            // even if enclosed in #if/#endif, IE11 does parse the #extension declaration, so we need to remove it altogether\r\n            const regex = /#extension.+GL_EXT_draw_buffers.+(enable|require)/g;\r\n            code = code.replace(regex, \"\");\r\n        }\r\n\r\n        return code;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}