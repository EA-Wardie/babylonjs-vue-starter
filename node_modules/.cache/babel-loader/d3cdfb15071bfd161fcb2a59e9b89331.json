{"ast":null,"code":"import { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport { Effect } from \"../../../Materials/effect.js\";\n\nEffect.prototype.setTextureSampler = function (name, sampler) {\n  this._engine.setTextureSampler(name, sampler);\n};\n\nWebGPUEngine.prototype.setTextureSampler = function (name, sampler) {\n  var _a;\n\n  (_a = this._currentMaterialContext) === null || _a === void 0 ? void 0 : _a.setSampler(name, sampler);\n};","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,uBAA7B;AAEA,SAASC,MAAT,QAAuB,8BAAvB;;AAeAA,MAAM,CAACC,SAAP,CAAiBC,iBAAjB,GAAqC,UAAUC,IAAV,EAAwBC,OAAxB,EAAyD;AAC1F,OAAKC,OAAL,CAAaH,iBAAb,CAA+BC,IAA/B,EAAqCC,OAArC;AACH,CAFD;;AAIAL,YAAY,CAACE,SAAb,CAAuBC,iBAAvB,GAA2C,UAAUC,IAAV,EAAwBC,OAAxB,EAAyD;;;AAChG,aAAKE,uBAAL,MAA4B,IAA5B,IAA4BC,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEC,UAAF,CAAaL,IAAb,EAAmBC,OAAnB,CAA5B;AACH,CAFD","names":["WebGPUEngine","Effect","prototype","setTextureSampler","name","sampler","_engine","_currentMaterialContext","_a","setSampler"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Engines/WebGPU/Extensions/engine.textureSampler.ts"],"sourcesContent":["import { WebGPUEngine } from \"../../webgpuEngine\";\r\nimport type { Nullable } from \"../../../types\";\r\nimport { Effect } from \"../../../Materials/effect\";\r\n\r\ndeclare type TextureSampler = import(\"../../../Materials/Textures/textureSampler\").TextureSampler;\r\n\r\ndeclare module \"../../../Materials/effect\" {\r\n    export interface Effect {\r\n        /**\r\n         * Sets a sampler on the engine to be used in the shader.\r\n         * @param name Name of the sampler variable.\r\n         * @param sampler Sampler to set.\r\n         */\r\n        setTextureSampler(name: string, sampler: Nullable<TextureSampler>): void;\r\n    }\r\n}\r\n\r\nEffect.prototype.setTextureSampler = function (name: string, sampler: Nullable<TextureSampler>): void {\r\n    this._engine.setTextureSampler(name, sampler);\r\n};\r\n\r\nWebGPUEngine.prototype.setTextureSampler = function (name: string, sampler: Nullable<TextureSampler>): void {\r\n    this._currentMaterialContext?.setSampler(name, sampler);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}