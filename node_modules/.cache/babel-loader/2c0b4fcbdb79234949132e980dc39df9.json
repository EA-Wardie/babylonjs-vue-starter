{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport { Logger } from \"./logger.js\";\nimport { GetClass } from \"./typeStore.js\";\n/**\n * Class used to enable instantiation of objects by class name\n */\n\nvar InstantiationTools =\n/** @class */\nfunction () {\n  function InstantiationTools() {}\n  /**\n   * Tries to instantiate a new object from a given class name\n   * @param className defines the class name to instantiate\n   * @returns the new object or null if the system was not able to do the instantiation\n   */\n\n\n  InstantiationTools.Instantiate = function (className) {\n    if (this.RegisteredExternalClasses && this.RegisteredExternalClasses[className]) {\n      return this.RegisteredExternalClasses[className];\n    }\n\n    var internalClass = GetClass(className);\n\n    if (internalClass) {\n      return internalClass;\n    }\n\n    Logger.Warn(className + \" not found, you may have missed an import.\");\n    var arr = className.split(\".\");\n    var fn = window || this;\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      fn = fn[arr[i]];\n    }\n\n    if (typeof fn !== \"function\") {\n      return null;\n    }\n\n    return fn;\n  };\n  /**\n   * Use this object to register external classes like custom textures or material\n   * to allow the loaders to instantiate them\n   */\n\n\n  InstantiationTools.RegisteredExternalClasses = {};\n  return InstantiationTools;\n}();\n\nexport { InstantiationTools };","map":{"version":3,"mappings":";;AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA;;;;AAGA;AAAA;AAAA;AAAA,iCAqCC;AA9BG;;;;;;;AAKcC,mCAAd,UAA0BC,SAA1B,EAA2C;AACvC,QAAI,KAAKC,yBAAL,IAAkC,KAAKA,yBAAL,CAA+BD,SAA/B,CAAtC,EAAiF;AAC7E,aAAO,KAAKC,yBAAL,CAA+BD,SAA/B,CAAP;AACH;;AAED,QAAME,aAAa,GAAGJ,QAAQ,CAACE,SAAD,CAA9B;;AACA,QAAIE,aAAJ,EAAmB;AACf,aAAOA,aAAP;AACH;;AAEDL,UAAM,CAACM,IAAP,CAAYH,SAAS,GAAG,4CAAxB;AAEA,QAAMI,GAAG,GAAGJ,SAAS,CAACK,KAAV,CAAgB,GAAhB,CAAZ;AAEA,QAAIC,EAAE,GAAQC,MAAM,IAAI,IAAxB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGL,GAAG,CAACM,MAA1B,EAAkCF,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5CF,QAAE,GAAGA,EAAE,CAACF,GAAG,CAACI,CAAD,CAAJ,CAAP;AACH;;AAED,QAAI,OAAOF,EAAP,KAAc,UAAlB,EAA8B;AAC1B,aAAO,IAAP;AACH;;AAED,WAAOA,EAAP;AACH,GAxBa;AAXd;;;;;;AAIcP,iDAAuD,EAAvD;AAgClB;AAAC,CArCD;;SAAaA","names":["Logger","GetClass","InstantiationTools","className","RegisteredExternalClasses","internalClass","Warn","arr","split","fn","window","i","len","length"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Misc/instantiationTools.ts"],"sourcesContent":["import { Logger } from \"./logger\";\r\nimport { GetClass } from \"./typeStore\";\r\n\r\n/**\r\n * Class used to enable instantiation of objects by class name\r\n */\r\nexport class InstantiationTools {\r\n    /**\r\n     * Use this object to register external classes like custom textures or material\r\n     * to allow the loaders to instantiate them\r\n     */\r\n    public static RegisteredExternalClasses: { [key: string]: Object } = {};\r\n\r\n    /**\r\n     * Tries to instantiate a new object from a given class name\r\n     * @param className defines the class name to instantiate\r\n     * @returns the new object or null if the system was not able to do the instantiation\r\n     */\r\n    public static Instantiate(className: string): any {\r\n        if (this.RegisteredExternalClasses && this.RegisteredExternalClasses[className]) {\r\n            return this.RegisteredExternalClasses[className];\r\n        }\r\n\r\n        const internalClass = GetClass(className);\r\n        if (internalClass) {\r\n            return internalClass;\r\n        }\r\n\r\n        Logger.Warn(className + \" not found, you may have missed an import.\");\r\n\r\n        const arr = className.split(\".\");\r\n\r\n        let fn: any = window || this;\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            fn = fn[arr[i]];\r\n        }\r\n\r\n        if (typeof fn !== \"function\") {\r\n            return null;\r\n        }\r\n\r\n        return fn;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}