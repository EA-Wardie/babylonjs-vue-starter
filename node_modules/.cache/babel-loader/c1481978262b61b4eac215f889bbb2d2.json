{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to desaturate a color\n */\n\nvar DesaturateBlock =\n/** @class */\nfunction (_super) {\n  __extends(DesaturateBlock, _super);\n  /**\n   * Creates a new DesaturateBlock\n   * @param name defines the block name\n   */\n\n\n  function DesaturateBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this.registerInput(\"level\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  DesaturateBlock.prototype.getClassName = function () {\n    return \"DesaturateBlock\";\n  };\n\n  Object.defineProperty(DesaturateBlock.prototype, \"color\", {\n    /**\n     * Gets the color operand input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DesaturateBlock.prototype, \"level\", {\n    /**\n     * Gets the level operand input component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DesaturateBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DesaturateBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    var color = this.color;\n    var colorName = color.associatedVariableName;\n\n    var tempMin = state._getFreeVariableName(\"colorMin\");\n\n    var tempMax = state._getFreeVariableName(\"colorMax\");\n\n    var tempMerge = state._getFreeVariableName(\"colorMerge\");\n\n    state.compilationString += \"float \".concat(tempMin, \" = min(min(\").concat(colorName, \".x, \").concat(colorName, \".y), \").concat(colorName, \".z);\\r\\n\");\n    state.compilationString += \"float \".concat(tempMax, \" = max(max(\").concat(colorName, \".x, \").concat(colorName, \".y), \").concat(colorName, \".z);\\r\\n\");\n    state.compilationString += \"float \".concat(tempMerge, \" = 0.5 * (\").concat(tempMin, \" + \").concat(tempMax, \");\\r\\n\");\n    state.compilationString += this._declareOutput(output, state) + \" = mix(\".concat(colorName, \", vec3(\").concat(tempMerge, \", \").concat(tempMerge, \", \").concat(tempMerge, \"), \").concat(this.level.associatedVariableName, \");\\r\\n\");\n    return this;\n  };\n\n  return DesaturateBlock;\n}(NodeMaterialBlock);\n\nexport { DesaturateBlock };\nRegisterClass(\"BABYLON.DesaturateBlock\", DesaturateBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Neutral","_this","registerInput","Color3","Float","registerOutput","DesaturateBlock","Object","_inputs","_outputs","state","_buildBlock","call","output","color","colorName","associatedVariableName","tempMin","_getFreeVariableName","tempMax","tempMerge","compilationString","concat","_declareOutput","level"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/desaturateBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * Block used to desaturate a color\r\n */\r\nexport class DesaturateBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new DesaturateBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this.registerInput(\"level\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"DesaturateBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the color operand input component\r\n     */\r\n    public get color(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the level operand input component\r\n     */\r\n    public get level(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n        const color = this.color;\r\n        const colorName = color.associatedVariableName;\r\n        const tempMin = state._getFreeVariableName(\"colorMin\");\r\n        const tempMax = state._getFreeVariableName(\"colorMax\");\r\n        const tempMerge = state._getFreeVariableName(\"colorMerge\");\r\n\r\n        state.compilationString += `float ${tempMin} = min(min(${colorName}.x, ${colorName}.y), ${colorName}.z);\\r\\n`;\r\n        state.compilationString += `float ${tempMax} = max(max(${colorName}.x, ${colorName}.y), ${colorName}.z);\\r\\n`;\r\n        state.compilationString += `float ${tempMerge} = 0.5 * (${tempMin} + ${tempMax});\\r\\n`;\r\n        state.compilationString +=\r\n            this._declareOutput(output, state) + ` = mix(${colorName}, vec3(${tempMerge}, ${tempMerge}, ${tempMerge}), ${this.level.associatedVariableName});\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.DesaturateBlock\", DesaturateBlock);\r\n"]},"metadata":{},"sourceType":"module"}