{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\n\n/** @hidden */\nvar WebGPUComputePipelineContext =\n/** @class */\nfunction () {\n  function WebGPUComputePipelineContext(engine) {\n    this._name = \"unnamed\";\n    this.engine = engine;\n  }\n\n  Object.defineProperty(WebGPUComputePipelineContext.prototype, \"isAsync\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(WebGPUComputePipelineContext.prototype, \"isReady\", {\n    get: function get() {\n      if (this.stage) {\n        return true;\n      }\n\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WebGPUComputePipelineContext.prototype._getComputeShaderCode = function () {\n    var _a;\n\n    return (_a = this.sources) === null || _a === void 0 ? void 0 : _a.compute;\n  };\n\n  WebGPUComputePipelineContext.prototype.dispose = function () {};\n\n  return WebGPUComputePipelineContext;\n}();\n\nexport { WebGPUComputePipelineContext };","map":{"version":3,"mappings":";;AAIA;AACA;AAAA;AAAA;AA2BI,wCAAYA,MAAZ,EAAgC;AAC5B,SAAKC,KAAL,GAAa,SAAb;AACA,SAAKD,MAAL,GAAcA,MAAd;AACH;;AAlBDE,wBAAWC,sCAAX,EAAW,SAAX,EAAkB;SAAlB;AACI,aAAO,KAAP;AACH,KAFiB;qBAAA;;AAAA,GAAlB;AAIAD,wBAAWC,sCAAX,EAAW,SAAX,EAAkB;SAAlB;AACI,UAAI,KAAKC,KAAT,EAAgB;AACZ,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH,KANiB;qBAAA;;AAAA,GAAlB;;AAgBOD,iEAAP;;;AACI,WAAO,WAAKE,OAAL,MAAY,IAAZ,IAAYC,aAAZ,GAAY,MAAZ,GAAYA,GAAEC,OAArB;AACH,GAFM;;AAIAJ,mDAAP,aAAyB,CAAlB;;AACX;AAAC,CArCD","names":["engine","_name","Object","WebGPUComputePipelineContext","stage","sources","_a","compute"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGPU/webgpuComputePipelineContext.ts"],"sourcesContent":["import type { IComputePipelineContext } from \"../../Compute/IComputePipelineContext\";\r\nimport type { Nullable } from \"../../types\";\r\nimport type { WebGPUEngine } from \"../webgpuEngine\";\r\n\r\n/** @hidden */\r\nexport class WebGPUComputePipelineContext implements IComputePipelineContext {\r\n    public engine: WebGPUEngine;\r\n\r\n    public sources: {\r\n        compute: string;\r\n        rawCompute: string;\r\n    };\r\n\r\n    public stage: Nullable<GPUProgrammableStage>;\r\n\r\n    public computePipeline: GPUComputePipeline;\r\n\r\n    public get isAsync() {\r\n        return false;\r\n    }\r\n\r\n    public get isReady(): boolean {\r\n        if (this.stage) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /** @hidden */\r\n    public _name: string;\r\n\r\n    constructor(engine: WebGPUEngine) {\r\n        this._name = \"unnamed\";\r\n        this.engine = engine;\r\n    }\r\n\r\n    public _getComputeShaderCode(): string | null {\r\n        return this.sources?.compute;\r\n    }\r\n\r\n    public dispose(): void {}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}