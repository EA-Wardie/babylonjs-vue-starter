{"ast":null,"code":"/** @hidden */\nvar WebGPURenderPassWrapper =\n/** @class */\nfunction () {\n  function WebGPURenderPassWrapper() {\n    this.colorAttachmentGPUTextures = [];\n    this.reset();\n  }\n\n  WebGPURenderPassWrapper.prototype.reset = function (fullReset) {\n    if (fullReset === void 0) {\n      fullReset = false;\n    }\n\n    this.renderPass = null;\n\n    if (fullReset) {\n      this.renderPassDescriptor = null;\n      this.colorAttachmentViewDescriptor = null;\n      this.depthAttachmentViewDescriptor = null;\n      this.colorAttachmentGPUTextures = [];\n      this.depthTextureFormat = undefined;\n    }\n  };\n\n  return WebGPURenderPassWrapper;\n}();\n\nexport { WebGPURenderPassWrapper };","map":{"version":3,"mappings":"AAGA;AACA;AAAA;AAAA;AAQI;AAHO,sCAAsD,EAAtD;AAIH,SAAKA,KAAL;AACH;;AAEMC,4CAAP,UAAaC,SAAb,EAA8B;AAAjB;AAAAA;AAAiB;;AAC1B,SAAKC,UAAL,GAAkB,IAAlB;;AACA,QAAID,SAAJ,EAAe;AACX,WAAKE,oBAAL,GAA4B,IAA5B;AACA,WAAKC,6BAAL,GAAqC,IAArC;AACA,WAAKC,6BAAL,GAAqC,IAArC;AACA,WAAKC,0BAAL,GAAkC,EAAlC;AACA,WAAKC,kBAAL,GAA0BC,SAA1B;AACH;AACJ,GATM;;AAUX;AAAC,CAtBD","names":["reset","WebGPURenderPassWrapper","fullReset","renderPass","renderPassDescriptor","colorAttachmentViewDescriptor","depthAttachmentViewDescriptor","colorAttachmentGPUTextures","depthTextureFormat","undefined"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGPU/webgpuRenderPassWrapper.ts"],"sourcesContent":["import type { Nullable } from \"../../types\";\r\nimport type { WebGPUHardwareTexture } from \"./webgpuHardwareTexture\";\r\n\r\n/** @hidden */\r\nexport class WebGPURenderPassWrapper {\r\n    public renderPassDescriptor: Nullable<GPURenderPassDescriptor>;\r\n    public renderPass: Nullable<GPURenderPassEncoder>;\r\n    public colorAttachmentViewDescriptor: Nullable<GPUTextureViewDescriptor>;\r\n    public depthAttachmentViewDescriptor: Nullable<GPUTextureViewDescriptor>;\r\n    public colorAttachmentGPUTextures: WebGPUHardwareTexture[] = [];\r\n    public depthTextureFormat: GPUTextureFormat | undefined;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(fullReset = false): void {\r\n        this.renderPass = null;\r\n        if (fullReset) {\r\n            this.renderPassDescriptor = null;\r\n            this.colorAttachmentViewDescriptor = null;\r\n            this.depthAttachmentViewDescriptor = null;\r\n            this.colorAttachmentGPUTextures = [];\r\n            this.depthTextureFormat = undefined;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}