{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nvar name = \"pbrBlockIridescence\";\nvar shader = \"struct iridescenceOutParams\\n{\\nfloat iridescenceIntensity;\\nfloat iridescenceIOR;\\nfloat iridescenceThickness;\\nvec3 specularEnvironmentR0;\\n};\\n#ifdef IRIDESCENCE\\n#define pbr_inline\\n#define inline\\nvoid iridescenceBlock(\\nin vec4 vIridescenceParams,\\nin float viewAngle,\\nin vec3 specularEnvironmentR0,\\n#ifdef IRIDESCENCE_TEXTURE\\nin vec2 iridescenceMapData,\\n#endif\\n#ifdef IRIDESCENCE_THICKNESS_TEXTURE\\nin vec2 iridescenceThicknessMapData,\\n#endif\\n#ifdef CLEARCOAT\\nin float NdotVUnclamped,\\n#ifdef CLEARCOAT_TEXTURE\\nin vec2 clearCoatMapData,\\n#endif\\n#endif\\nout iridescenceOutParams outParams\\n)\\n{\\nfloat iridescenceIntensity=vIridescenceParams.x;\\nfloat iridescenceIOR=vIridescenceParams.y;\\nfloat iridescenceThicknessMin=vIridescenceParams.z;\\nfloat iridescenceThicknessMax=vIridescenceParams.w;\\nfloat iridescenceThicknessWeight=1.;\\n#ifdef IRIDESCENCE_TEXTURE\\niridescenceIntensity*=iridescenceMapData.x;\\n#ifdef IRIDESCENCE_USE_THICKNESS_FROM_MAINTEXTURE\\niridescenceThicknessWeight=iridescenceMapData.g;\\n#endif\\n#endif\\n#if defined(IRIDESCENCE_THICKNESS_TEXTURE)\\niridescenceThicknessWeight=iridescenceThicknessMapData.g;\\n#endif\\nfloat iridescenceThickness=mix(iridescenceThicknessMin,iridescenceThicknessMax,iridescenceThicknessWeight);\\nfloat topIor=1.; \\n#ifdef CLEARCOAT\\nfloat clearCoatIntensity=vClearCoatParams.x;\\n#ifdef CLEARCOAT_TEXTURE\\nclearCoatIntensity*=clearCoatMapData.x;\\n#endif\\ntopIor=mix(1.0,vClearCoatRefractionParams.w-1.,clearCoatIntensity);\\nviewAngle=sqrt(1.0+square(1.0/topIor)*(square(NdotVUnclamped)-1.0));\\n#endif\\nvec3 iridescenceFresnel=evalIridescence(topIor,iridescenceIOR,viewAngle,iridescenceThickness,specularEnvironmentR0);\\noutParams.specularEnvironmentR0=mix(specularEnvironmentR0,iridescenceFresnel,iridescenceIntensity);\\noutParams.iridescenceIntensity=iridescenceIntensity;\\noutParams.iridescenceThickness=iridescenceThickness;\\noutParams.iridescenceIOR=iridescenceIOR;\\n}\\n#endif\\n\"; // Sideeffect\n\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\n\nexport var pbrBlockIridescence = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,8BAA5B;AAEA,IAAMC,IAAI,GAAG,qBAAb;AACA,IAAMC,MAAM,GAAG,25DAAf,C,CA6DA;;AACAF,WAAW,CAACG,oBAAZ,CAAiCF,IAAjC,IAAyCC,MAAzC;AACA;;AACA,OAAO,IAAME,mBAAmB,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAA5B","names":["ShaderStore","name","shader","IncludesShadersStore","pbrBlockIridescence"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockIridescence.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"pbrBlockIridescence\";\nconst shader = `struct iridescenceOutParams\r{\rfloat iridescenceIntensity;\rfloat iridescenceIOR;\rfloat iridescenceThickness;\rvec3 specularEnvironmentR0;\r};\r#ifdef IRIDESCENCE\n#define pbr_inline\n#define inline\nvoid iridescenceBlock(\rin vec4 vIridescenceParams,\rin float viewAngle,\rin vec3 specularEnvironmentR0,\r#ifdef IRIDESCENCE_TEXTURE\nin vec2 iridescenceMapData,\r#endif\n#ifdef IRIDESCENCE_THICKNESS_TEXTURE\nin vec2 iridescenceThicknessMapData,\r#endif\n#ifdef CLEARCOAT\nin float NdotVUnclamped,\r#ifdef CLEARCOAT_TEXTURE\nin vec2 clearCoatMapData,\r#endif\n#endif\nout iridescenceOutParams outParams\r)\r{\rfloat iridescenceIntensity=vIridescenceParams.x;\rfloat iridescenceIOR=vIridescenceParams.y;\rfloat iridescenceThicknessMin=vIridescenceParams.z;\rfloat iridescenceThicknessMax=vIridescenceParams.w;\rfloat iridescenceThicknessWeight=1.;\r#ifdef IRIDESCENCE_TEXTURE\niridescenceIntensity*=iridescenceMapData.x;\r#ifdef IRIDESCENCE_USE_THICKNESS_FROM_MAINTEXTURE\niridescenceThicknessWeight=iridescenceMapData.g;\r#endif\n#endif\n#if defined(IRIDESCENCE_THICKNESS_TEXTURE)\niridescenceThicknessWeight=iridescenceThicknessMapData.g;\r#endif\nfloat iridescenceThickness=mix(iridescenceThicknessMin,iridescenceThicknessMax,iridescenceThicknessWeight);\rfloat topIor=1.; \r#ifdef CLEARCOAT\nfloat clearCoatIntensity=vClearCoatParams.x;\r#ifdef CLEARCOAT_TEXTURE\nclearCoatIntensity*=clearCoatMapData.x;\r#endif\ntopIor=mix(1.0,vClearCoatRefractionParams.w-1.,clearCoatIntensity);\rviewAngle=sqrt(1.0+square(1.0/topIor)*(square(NdotVUnclamped)-1.0));\r#endif\nvec3 iridescenceFresnel=evalIridescence(topIor,iridescenceIOR,viewAngle,iridescenceThickness,specularEnvironmentR0);\routParams.specularEnvironmentR0=mix(specularEnvironmentR0,iridescenceFresnel,iridescenceIntensity);\routParams.iridescenceIntensity=iridescenceIntensity;\routParams.iridescenceThickness=iridescenceThickness;\routParams.iridescenceIOR=iridescenceIOR;\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const pbrBlockIridescence = { name, shader };\n"]},"metadata":{},"sourceType":"module"}