{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { CubeMapToSphericalPolynomialTools } from \"../../Misc/HighDynamicRange/cubemapToSphericalPolynomial.js\";\nimport { BaseTexture } from \"./baseTexture.js\";\n\nBaseTexture.prototype.forceSphericalPolynomialsRecompute = function () {\n  if (this._texture) {\n    this._texture._sphericalPolynomial = null;\n    this._texture._sphericalPolynomialPromise = null;\n    this._texture._sphericalPolynomialComputed = false;\n  }\n};\n\nObject.defineProperty(BaseTexture.prototype, \"sphericalPolynomial\", {\n  get: function get() {\n    var _this = this;\n\n    if (this._texture) {\n      if (this._texture._sphericalPolynomial || this._texture._sphericalPolynomialComputed) {\n        return this._texture._sphericalPolynomial;\n      }\n\n      if (this._texture.isReady) {\n        if (!this._texture._sphericalPolynomialPromise) {\n          this._texture._sphericalPolynomialPromise = CubeMapToSphericalPolynomialTools.ConvertCubeMapTextureToSphericalPolynomial(this);\n\n          if (this._texture._sphericalPolynomialPromise === null) {\n            this._texture._sphericalPolynomialComputed = true;\n          } else {\n            this._texture._sphericalPolynomialPromise.then(function (sphericalPolynomial) {\n              _this._texture._sphericalPolynomial = sphericalPolynomial;\n              _this._texture._sphericalPolynomialComputed = true;\n            });\n          }\n        }\n\n        return null;\n      }\n    }\n\n    return null;\n  },\n  set: function set(value) {\n    if (this._texture) {\n      this._texture._sphericalPolynomial = value;\n    }\n  },\n  enumerable: true,\n  configurable: true\n});","map":{"version":3,"mappings":";AACA,SAASA,iCAAT,QAAkD,6DAAlD;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAmBAA,WAAW,CAACC,SAAZ,CAAsBC,kCAAtB,GAA2D;AACvD,MAAI,KAAKC,QAAT,EAAmB;AACf,SAAKA,QAAL,CAAcC,oBAAd,GAAqC,IAArC;AACA,SAAKD,QAAL,CAAcE,2BAAd,GAA4C,IAA5C;AACA,SAAKF,QAAL,CAAcG,4BAAd,GAA6C,KAA7C;AACH;AACJ,CAND;;AAQAC,MAAM,CAACC,cAAP,CAAsBR,WAAW,CAACC,SAAlC,EAA6C,qBAA7C,EAAoE;AAChEQ,KAAG,EAAE;AAAA;;AACD,QAAI,KAAKN,QAAT,EAAmB;AACf,UAAI,KAAKA,QAAL,CAAcC,oBAAd,IAAsC,KAAKD,QAAL,CAAcG,4BAAxD,EAAsF;AAClF,eAAO,KAAKH,QAAL,CAAcC,oBAArB;AACH;;AAED,UAAI,KAAKD,QAAL,CAAcO,OAAlB,EAA2B;AACvB,YAAI,CAAC,KAAKP,QAAL,CAAcE,2BAAnB,EAAgD;AAC5C,eAAKF,QAAL,CAAcE,2BAAd,GAA4CN,iCAAiC,CAACY,0CAAlC,CAA6E,IAA7E,CAA5C;;AACA,cAAI,KAAKR,QAAL,CAAcE,2BAAd,KAA8C,IAAlD,EAAwD;AACpD,iBAAKF,QAAL,CAAcG,4BAAd,GAA6C,IAA7C;AACH,WAFD,MAEO;AACH,iBAAKH,QAAL,CAAcE,2BAAd,CAA0CO,IAA1C,CAA+C,UAACC,mBAAD,EAAoB;AAC/DC,mBAAI,CAACX,QAAL,CAAeC,oBAAf,GAAsCS,mBAAtC;AACAC,mBAAI,CAACX,QAAL,CAAeG,4BAAf,GAA8C,IAA9C;AACH,aAHD;AAIH;AACJ;;AAED,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH,GAzB+D;AA0BhES,KAAG,EAAE,aAA6BC,KAA7B,EAAiE;AAClE,QAAI,KAAKb,QAAT,EAAmB;AACf,WAAKA,QAAL,CAAcC,oBAAd,GAAqCY,KAArC;AACH;AACJ,GA9B+D;AA+BhEC,YAAU,EAAE,IA/BoD;AAgChEC,cAAY,EAAE;AAhCkD,CAApE","names":["CubeMapToSphericalPolynomialTools","BaseTexture","prototype","forceSphericalPolynomialsRecompute","_texture","_sphericalPolynomial","_sphericalPolynomialPromise","_sphericalPolynomialComputed","Object","defineProperty","get","isReady","ConvertCubeMapTextureToSphericalPolynomial","then","sphericalPolynomial","_this","set","value","enumerable","configurable"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Textures/baseTexture.polynomial.ts"],"sourcesContent":["import type { Nullable } from \"../../types\";\r\nimport { CubeMapToSphericalPolynomialTools } from \"../../Misc/HighDynamicRange/cubemapToSphericalPolynomial\";\r\nimport type { SphericalPolynomial } from \"../../Maths/sphericalPolynomial\";\r\nimport { BaseTexture } from \"./baseTexture\";\r\n\r\ndeclare module \"./baseTexture\" {\r\n    export interface BaseTexture {\r\n        /**\r\n         * Get the polynomial representation of the texture data.\r\n         * This is mainly use as a fast way to recover IBL Diffuse irradiance data.\r\n         * @see https://learnopengl.com/PBR/IBL/Diffuse-irradiance\r\n         */\r\n        sphericalPolynomial: Nullable<SphericalPolynomial>;\r\n\r\n        /**\r\n         * Force recomputation of spherical polynomials.\r\n         * Can be useful if you generate a cubemap multiple times (from a probe for eg) and you need the proper polynomials each time\r\n         */\r\n        forceSphericalPolynomialsRecompute(): void;\r\n    }\r\n}\r\n\r\nBaseTexture.prototype.forceSphericalPolynomialsRecompute = function (): void {\r\n    if (this._texture) {\r\n        this._texture._sphericalPolynomial = null;\r\n        this._texture._sphericalPolynomialPromise = null;\r\n        this._texture._sphericalPolynomialComputed = false;\r\n    }\r\n};\r\n\r\nObject.defineProperty(BaseTexture.prototype, \"sphericalPolynomial\", {\r\n    get: function (this: BaseTexture) {\r\n        if (this._texture) {\r\n            if (this._texture._sphericalPolynomial || this._texture._sphericalPolynomialComputed) {\r\n                return this._texture._sphericalPolynomial;\r\n            }\r\n\r\n            if (this._texture.isReady) {\r\n                if (!this._texture._sphericalPolynomialPromise) {\r\n                    this._texture._sphericalPolynomialPromise = CubeMapToSphericalPolynomialTools.ConvertCubeMapTextureToSphericalPolynomial(this);\r\n                    if (this._texture._sphericalPolynomialPromise === null) {\r\n                        this._texture._sphericalPolynomialComputed = true;\r\n                    } else {\r\n                        this._texture._sphericalPolynomialPromise.then((sphericalPolynomial) => {\r\n                            this._texture!._sphericalPolynomial = sphericalPolynomial;\r\n                            this._texture!._sphericalPolynomialComputed = true;\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n    set: function (this: BaseTexture, value: Nullable<SphericalPolynomial>) {\r\n        if (this._texture) {\r\n            this._texture._sphericalPolynomial = value;\r\n        }\r\n    },\r\n    enumerable: true,\r\n    configurable: true,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}