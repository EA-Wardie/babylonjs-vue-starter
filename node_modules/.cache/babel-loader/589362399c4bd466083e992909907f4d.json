{"ast":null,"code":"import _typeof from \"/home/ea/Development/Babylon/red/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n\n/**\n * Manages the defines for the Material\n */\nvar MaterialDefines =\n/** @class */\nfunction () {\n  /**\n   * Creates a new instance\n   * @param externalProperties list of external properties to inject into the object\n   */\n  function MaterialDefines(externalProperties) {\n    this._isDirty = true;\n    /** @hidden */\n\n    this._areLightsDirty = true;\n    /** @hidden */\n\n    this._areLightsDisposed = false;\n    /** @hidden */\n\n    this._areAttributesDirty = true;\n    /** @hidden */\n\n    this._areTexturesDirty = true;\n    /** @hidden */\n\n    this._areFresnelDirty = true;\n    /** @hidden */\n\n    this._areMiscDirty = true;\n    /** @hidden */\n\n    this._arePrePassDirty = true;\n    /** @hidden */\n\n    this._areImageProcessingDirty = true;\n    /** @hidden */\n\n    this._normals = false;\n    /** @hidden */\n\n    this._uvs = false;\n    /** @hidden */\n\n    this._needNormals = false;\n    /** @hidden */\n\n    this._needUVs = false;\n    this._externalProperties = externalProperties; // Initialize External Properties\n\n    if (externalProperties) {\n      for (var prop in externalProperties) {\n        if (Object.prototype.hasOwnProperty.call(externalProperties, prop)) {\n          this._setDefaultValue(prop);\n        }\n      }\n    }\n  }\n\n  Object.defineProperty(MaterialDefines.prototype, \"isDirty\", {\n    /**\n     * Specifies if the material needs to be re-calculated\n     */\n    get: function get() {\n      return this._isDirty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Marks the material to indicate that it has been re-calculated\n   */\n\n  MaterialDefines.prototype.markAsProcessed = function () {\n    this._isDirty = false;\n    this._areAttributesDirty = false;\n    this._areTexturesDirty = false;\n    this._areFresnelDirty = false;\n    this._areLightsDirty = false;\n    this._areLightsDisposed = false;\n    this._areMiscDirty = false;\n    this._arePrePassDirty = false;\n    this._areImageProcessingDirty = false;\n  };\n  /**\n   * Marks the material to indicate that it needs to be re-calculated\n   */\n\n\n  MaterialDefines.prototype.markAsUnprocessed = function () {\n    this._isDirty = true;\n  };\n  /**\n   * Marks the material to indicate all of its defines need to be re-calculated\n   */\n\n\n  MaterialDefines.prototype.markAllAsDirty = function () {\n    this._areTexturesDirty = true;\n    this._areAttributesDirty = true;\n    this._areLightsDirty = true;\n    this._areFresnelDirty = true;\n    this._areMiscDirty = true;\n    this._areImageProcessingDirty = true;\n    this._isDirty = true;\n  };\n  /**\n   * Marks the material to indicate that image processing needs to be re-calculated\n   */\n\n\n  MaterialDefines.prototype.markAsImageProcessingDirty = function () {\n    this._areImageProcessingDirty = true;\n    this._isDirty = true;\n  };\n  /**\n   * Marks the material to indicate the lights need to be re-calculated\n   * @param disposed Defines whether the light is dirty due to dispose or not\n   */\n\n\n  MaterialDefines.prototype.markAsLightDirty = function (disposed) {\n    if (disposed === void 0) {\n      disposed = false;\n    }\n\n    this._areLightsDirty = true;\n    this._areLightsDisposed = this._areLightsDisposed || disposed;\n    this._isDirty = true;\n  };\n  /**\n   * Marks the attribute state as changed\n   */\n\n\n  MaterialDefines.prototype.markAsAttributesDirty = function () {\n    this._areAttributesDirty = true;\n    this._isDirty = true;\n  };\n  /**\n   * Marks the texture state as changed\n   */\n\n\n  MaterialDefines.prototype.markAsTexturesDirty = function () {\n    this._areTexturesDirty = true;\n    this._isDirty = true;\n  };\n  /**\n   * Marks the fresnel state as changed\n   */\n\n\n  MaterialDefines.prototype.markAsFresnelDirty = function () {\n    this._areFresnelDirty = true;\n    this._isDirty = true;\n  };\n  /**\n   * Marks the misc state as changed\n   */\n\n\n  MaterialDefines.prototype.markAsMiscDirty = function () {\n    this._areMiscDirty = true;\n    this._isDirty = true;\n  };\n  /**\n   * Marks the prepass state as changed\n   */\n\n\n  MaterialDefines.prototype.markAsPrePassDirty = function () {\n    this._arePrePassDirty = true;\n    this._isDirty = true;\n  };\n  /**\n   * Rebuilds the material defines\n   */\n\n\n  MaterialDefines.prototype.rebuild = function () {\n    this._keys = [];\n\n    for (var _i = 0, _a = Object.keys(this); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      if (key[0] === \"_\") {\n        continue;\n      }\n\n      this._keys.push(key);\n    }\n\n    if (this._externalProperties) {\n      for (var name_1 in this._externalProperties) {\n        if (this._keys.indexOf(name_1) === -1) {\n          this._keys.push(name_1);\n        }\n      }\n    }\n  };\n  /**\n   * Specifies if two material defines are equal\n   * @param other - A material define instance to compare to\n   * @returns - Boolean indicating if the material defines are equal (true) or not (false)\n   */\n\n\n  MaterialDefines.prototype.isEqual = function (other) {\n    if (this._keys.length !== other._keys.length) {\n      return false;\n    }\n\n    for (var index = 0; index < this._keys.length; index++) {\n      var prop = this._keys[index];\n\n      if (this[prop] !== other[prop]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Clones this instance's defines to another instance\n   * @param other - material defines to clone values to\n   */\n\n\n  MaterialDefines.prototype.cloneTo = function (other) {\n    if (this._keys.length !== other._keys.length) {\n      other._keys = this._keys.slice(0);\n    }\n\n    for (var index = 0; index < this._keys.length; index++) {\n      var prop = this._keys[index];\n      other[prop] = this[prop];\n    }\n  };\n  /**\n   * Resets the material define values\n   */\n\n\n  MaterialDefines.prototype.reset = function () {\n    var _this = this;\n\n    this._keys.forEach(function (prop) {\n      return _this._setDefaultValue(prop);\n    });\n  };\n\n  MaterialDefines.prototype._setDefaultValue = function (prop) {\n    var _a, _b, _c, _d, _e;\n\n    var type = (_c = (_b = (_a = this._externalProperties) === null || _a === void 0 ? void 0 : _a[prop]) === null || _b === void 0 ? void 0 : _b.type) !== null && _c !== void 0 ? _c : _typeof(this[prop]);\n    var defValue = (_e = (_d = this._externalProperties) === null || _d === void 0 ? void 0 : _d[prop]) === null || _e === void 0 ? void 0 : _e[\"default\"];\n\n    switch (type) {\n      case \"number\":\n        this[prop] = defValue !== null && defValue !== void 0 ? defValue : 0;\n        break;\n\n      case \"string\":\n        this[prop] = defValue !== null && defValue !== void 0 ? defValue : \"\";\n        break;\n\n      default:\n        this[prop] = defValue !== null && defValue !== void 0 ? defValue : false;\n        break;\n    }\n  };\n  /**\n   * Converts the material define values to a string\n   * @returns - String of material define information\n   */\n\n\n  MaterialDefines.prototype.toString = function () {\n    var result = \"\";\n\n    for (var index = 0; index < this._keys.length; index++) {\n      var prop = this._keys[index];\n      var value = this[prop];\n\n      var type = _typeof(value);\n\n      switch (type) {\n        case \"number\":\n        case \"string\":\n          result += \"#define \" + prop + \" \" + value + \"\\n\";\n          break;\n\n        default:\n          if (value) {\n            result += \"#define \" + prop + \"\\n\";\n          }\n\n          break;\n      }\n    }\n\n    return result;\n  };\n\n  return MaterialDefines;\n}();\n\nexport { MaterialDefines };","map":{"version":3,"mappings":"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","names":["externalProperties","_externalProperties","prop","Object","prototype","hasOwnProperty","call","_setDefaultValue","MaterialDefines","_isDirty","_areAttributesDirty","_areTexturesDirty","_areFresnelDirty","_areLightsDirty","_areLightsDisposed","_areMiscDirty","_arePrePassDirty","_areImageProcessingDirty","disposed","_keys","keys","_i","key","push","name_1","indexOf","other","length","index","slice","forEach","type","_a","_b","_c","defValue","_d","_e","result","value"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Materials/materialDefines.ts"],"sourcesContent":["/**\r\n * Manages the defines for the Material\r\n */\r\nexport class MaterialDefines {\r\n    /** @hidden */\r\n    protected _keys: string[];\r\n    private _isDirty = true;\r\n    /** @hidden */\r\n    public _renderId: number;\r\n\r\n    /** @hidden */\r\n    public _areLightsDirty = true;\r\n    /** @hidden */\r\n    public _areLightsDisposed = false;\r\n    /** @hidden */\r\n    public _areAttributesDirty = true;\r\n    /** @hidden */\r\n    public _areTexturesDirty = true;\r\n    /** @hidden */\r\n    public _areFresnelDirty = true;\r\n    /** @hidden */\r\n    public _areMiscDirty = true;\r\n    /** @hidden */\r\n    public _arePrePassDirty = true;\r\n    /** @hidden */\r\n    public _areImageProcessingDirty = true;\r\n\r\n    /** @hidden */\r\n    public _normals = false;\r\n    /** @hidden */\r\n    public _uvs = false;\r\n\r\n    /** @hidden */\r\n    public _needNormals = false;\r\n    /** @hidden */\r\n    public _needUVs = false;\r\n\r\n    protected _externalProperties?: { [name: string]: { type: string; default: any } };\r\n\r\n    [id: string]: any;\r\n\r\n    /**\r\n     * Creates a new instance\r\n     * @param externalProperties list of external properties to inject into the object\r\n     */\r\n    constructor(externalProperties?: { [name: string]: { type: string; default: any } }) {\r\n        this._externalProperties = externalProperties;\r\n\r\n        // Initialize External Properties\r\n        if (externalProperties) {\r\n            for (const prop in externalProperties) {\r\n                if (Object.prototype.hasOwnProperty.call(externalProperties, prop)) {\r\n                    this._setDefaultValue(prop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Specifies if the material needs to be re-calculated\r\n     */\r\n    public get isDirty(): boolean {\r\n        return this._isDirty;\r\n    }\r\n\r\n    /**\r\n     * Marks the material to indicate that it has been re-calculated\r\n     */\r\n    public markAsProcessed() {\r\n        this._isDirty = false;\r\n        this._areAttributesDirty = false;\r\n        this._areTexturesDirty = false;\r\n        this._areFresnelDirty = false;\r\n        this._areLightsDirty = false;\r\n        this._areLightsDisposed = false;\r\n        this._areMiscDirty = false;\r\n        this._arePrePassDirty = false;\r\n        this._areImageProcessingDirty = false;\r\n    }\r\n\r\n    /**\r\n     * Marks the material to indicate that it needs to be re-calculated\r\n     */\r\n    public markAsUnprocessed() {\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Marks the material to indicate all of its defines need to be re-calculated\r\n     */\r\n    public markAllAsDirty() {\r\n        this._areTexturesDirty = true;\r\n        this._areAttributesDirty = true;\r\n        this._areLightsDirty = true;\r\n        this._areFresnelDirty = true;\r\n        this._areMiscDirty = true;\r\n        this._areImageProcessingDirty = true;\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Marks the material to indicate that image processing needs to be re-calculated\r\n     */\r\n    public markAsImageProcessingDirty() {\r\n        this._areImageProcessingDirty = true;\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Marks the material to indicate the lights need to be re-calculated\r\n     * @param disposed Defines whether the light is dirty due to dispose or not\r\n     */\r\n    public markAsLightDirty(disposed = false) {\r\n        this._areLightsDirty = true;\r\n        this._areLightsDisposed = this._areLightsDisposed || disposed;\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Marks the attribute state as changed\r\n     */\r\n    public markAsAttributesDirty() {\r\n        this._areAttributesDirty = true;\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Marks the texture state as changed\r\n     */\r\n    public markAsTexturesDirty() {\r\n        this._areTexturesDirty = true;\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Marks the fresnel state as changed\r\n     */\r\n    public markAsFresnelDirty() {\r\n        this._areFresnelDirty = true;\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Marks the misc state as changed\r\n     */\r\n    public markAsMiscDirty() {\r\n        this._areMiscDirty = true;\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Marks the prepass state as changed\r\n     */\r\n    public markAsPrePassDirty() {\r\n        this._arePrePassDirty = true;\r\n        this._isDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Rebuilds the material defines\r\n     */\r\n    public rebuild() {\r\n        this._keys = [];\r\n\r\n        for (const key of Object.keys(this)) {\r\n            if (key[0] === \"_\") {\r\n                continue;\r\n            }\r\n\r\n            this._keys.push(key);\r\n        }\r\n\r\n        if (this._externalProperties) {\r\n            for (const name in this._externalProperties) {\r\n                if (this._keys.indexOf(name) === -1) {\r\n                    this._keys.push(name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Specifies if two material defines are equal\r\n     * @param other - A material define instance to compare to\r\n     * @returns - Boolean indicating if the material defines are equal (true) or not (false)\r\n     */\r\n    public isEqual(other: MaterialDefines): boolean {\r\n        if (this._keys.length !== other._keys.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let index = 0; index < this._keys.length; index++) {\r\n            const prop = this._keys[index];\r\n\r\n            if ((<any>this)[prop] !== (<any>other)[prop]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Clones this instance's defines to another instance\r\n     * @param other - material defines to clone values to\r\n     */\r\n    public cloneTo(other: MaterialDefines): void {\r\n        if (this._keys.length !== other._keys.length) {\r\n            other._keys = this._keys.slice(0);\r\n        }\r\n\r\n        for (let index = 0; index < this._keys.length; index++) {\r\n            const prop = this._keys[index];\r\n\r\n            (<any>other)[prop] = (<any>this)[prop];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets the material define values\r\n     */\r\n    public reset(): void {\r\n        this._keys.forEach((prop) => this._setDefaultValue(prop));\r\n    }\r\n\r\n    private _setDefaultValue(prop: string): void {\r\n        const type = this._externalProperties?.[prop]?.type ?? typeof (<any>this)[prop];\r\n        const defValue = this._externalProperties?.[prop]?.default;\r\n\r\n        switch (type) {\r\n            case \"number\":\r\n                (<any>this)[prop] = defValue ?? 0;\r\n                break;\r\n            case \"string\":\r\n                (<any>this)[prop] = defValue ?? \"\";\r\n                break;\r\n            default:\r\n                (<any>this)[prop] = defValue ?? false;\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Converts the material define values to a string\r\n     * @returns - String of material define information\r\n     */\r\n    public toString(): string {\r\n        let result = \"\";\r\n        for (let index = 0; index < this._keys.length; index++) {\r\n            const prop = this._keys[index];\r\n            const value = (<any>this)[prop];\r\n            const type = typeof value;\r\n\r\n            switch (type) {\r\n                case \"number\":\r\n                case \"string\":\r\n                    result += \"#define \" + prop + \" \" + value + \"\\n\";\r\n                    break;\r\n                default:\r\n                    if (value) {\r\n                        result += \"#define \" + prop + \"\\n\";\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}