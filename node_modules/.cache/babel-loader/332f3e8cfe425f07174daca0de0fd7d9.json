{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nimport \"./ShadersInclude/clipPlaneFragmentDeclaration2.js\";\nimport \"./ShadersInclude/imageProcessingDeclaration.js\";\nimport \"./ShadersInclude/helperFunctions.js\";\nimport \"./ShadersInclude/imageProcessingFunctions.js\";\nimport \"./ShadersInclude/clipPlaneFragment.js\";\nvar name = \"gpuRenderParticlesPixelShader\";\nvar shader = \"precision highp float;\\nuniform sampler2D diffuseSampler;\\nvarying vec2 vUV;\\nvarying vec4 vColor;\\n#include<clipPlaneFragmentDeclaration2> \\n#include<imageProcessingDeclaration>\\n#include<helperFunctions>\\n#include<imageProcessingFunctions>\\nvoid main() {\\n#include<clipPlaneFragment> \\nvec4 textureColor=texture2D(diffuseSampler,vUV);\\ngl_FragColor=textureColor*vColor;\\n#ifdef BLENDMULTIPLYMODE\\nfloat alpha=vColor.a*textureColor.a;\\ngl_FragColor.rgb=gl_FragColor.rgb*alpha+vec3(1.0)*(1.0-alpha);\\n#endif \\n#ifdef IMAGEPROCESSINGPOSTPROCESS\\ngl_FragColor.rgb=toLinearSpace(gl_FragColor.rgb);\\n#else\\n#ifdef IMAGEPROCESSING\\ngl_FragColor.rgb=toLinearSpace(gl_FragColor.rgb);\\ngl_FragColor=applyImageProcessing(gl_FragColor);\\n#endif\\n#endif\\n}\\n\"; // Sideeffect\n\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\n\nexport var gpuRenderParticlesPixelShader = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAO,mDAAP;AACA,OAAO,gDAAP;AACA,OAAO,qCAAP;AACA,OAAO,8CAAP;AACA,OAAO,uCAAP;AAEA,IAAMC,IAAI,GAAG,+BAAb;AACA,IAAMC,MAAM,GAAG,6uBAAf,C,CA0BA;;AACAF,WAAW,CAACG,YAAZ,CAAyBF,IAAzB,IAAiCC,MAAjC;AACA;;AACA,OAAO,IAAME,6BAA6B,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAAtC","names":["ShaderStore","name","shader","ShadersStore","gpuRenderParticlesPixelShader"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/gpuRenderParticles.fragment.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/clipPlaneFragmentDeclaration2\";\nimport \"./ShadersInclude/imageProcessingDeclaration\";\nimport \"./ShadersInclude/helperFunctions\";\nimport \"./ShadersInclude/imageProcessingFunctions\";\nimport \"./ShadersInclude/clipPlaneFragment\";\n\nconst name = \"gpuRenderParticlesPixelShader\";\nconst shader = `precision highp float;\runiform sampler2D diffuseSampler;\rvarying vec2 vUV;\rvarying vec4 vColor;\r#include<clipPlaneFragmentDeclaration2> \n#include<imageProcessingDeclaration>\n#include<helperFunctions>\n#include<imageProcessingFunctions>\nvoid main() {\r#include<clipPlaneFragment> \nvec4 textureColor=texture2D(diffuseSampler,vUV);\rgl_FragColor=textureColor*vColor;\r#ifdef BLENDMULTIPLYMODE\nfloat alpha=vColor.a*textureColor.a;\rgl_FragColor.rgb=gl_FragColor.rgb*alpha+vec3(1.0)*(1.0-alpha);\r#endif \n#ifdef IMAGEPROCESSINGPOSTPROCESS\ngl_FragColor.rgb=toLinearSpace(gl_FragColor.rgb);\r#else\n#ifdef IMAGEPROCESSING\ngl_FragColor.rgb=toLinearSpace(gl_FragColor.rgb);\rgl_FragColor=applyImageProcessing(gl_FragColor);\r#endif\n#endif\n}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const gpuRenderParticlesPixelShader = { name, shader };\n"]},"metadata":{},"sourceType":"module"}