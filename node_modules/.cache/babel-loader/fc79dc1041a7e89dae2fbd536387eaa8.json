{"ast":null,"code":"import \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { __extends } from \"tslib\";\nimport { Vector3, TmpVectors } from \"../Maths/math.vector.js\";\nimport { Scalar } from \"../Maths/math.scalar.js\";\nimport { PHI } from \"../Maths/math.constants.js\";\nimport { _IsoVector } from \"../Maths/math.isovector.js\";\n/**\n * Class representing data for one face OAB of an equilateral icosahedron\n * When O is the isovector (0, 0), A is isovector (m, n)\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nvar _PrimaryIsoTriangle =\n/** @class */\nfunction () {\n  function _PrimaryIsoTriangle() {\n    this.cartesian = [];\n    this.vertices = [];\n    this.max = [];\n    this.min = [];\n    this.closestTo = [];\n    this.innerFacets = [];\n    this.isoVecsABOB = [];\n    this.isoVecsOBOA = [];\n    this.isoVecsBAOA = [];\n    this.vertexTypes = []; // eslint-disable-next-line @typescript-eslint/naming-convention\n\n    this.IDATA = new PolyhedronData(\"icosahedron\", \"Regular\", [[0, PHI, -1], [-PHI, 1, 0], [-1, 0, -PHI], [1, 0, -PHI], [PHI, 1, 0], [0, PHI, 1], [-1, 0, PHI], [-PHI, -1, 0], [0, -PHI, -1], [PHI, -1, 0], [1, 0, PHI], [0, -PHI, 1]], [[0, 2, 1], [0, 3, 2], [0, 4, 3], [0, 5, 4], [0, 1, 5], [7, 6, 1], [8, 7, 2], [9, 8, 3], [10, 9, 4], [6, 10, 5], [2, 7, 1], [3, 8, 2], [4, 9, 3], [5, 10, 4], [1, 6, 5], [11, 6, 7], [11, 7, 8], [11, 8, 9], [11, 9, 10], [11, 10, 6]]);\n  }\n  /**\n   * Creates the PrimaryIsoTriangle Triangle OAB\n   * @param m an integer\n   * @param n an integer\n   */\n  //operators\n\n\n  _PrimaryIsoTriangle.prototype.setIndices = function () {\n    var indexCount = 12; // 12 vertices already assigned\n\n    var vecToidx = {}; //maps iso-vectors to indexCount;\n\n    var m = this.m;\n    var n = this.n;\n    var g = m; // hcf of m, n when n != 0\n\n    var m1 = 1;\n    var n1 = 0;\n\n    if (n !== 0) {\n      g = Scalar.HCF(m, n);\n    }\n\n    m1 = m / g;\n    n1 = n / g;\n    var fr; //face to the right of current face\n\n    var rot; //rotation about which vertex for fr\n\n    var O;\n    var A;\n    var B;\n\n    var oVec = _IsoVector.Zero();\n\n    var aVec = new _IsoVector(m, n);\n    var bVec = new _IsoVector(-n, m + n);\n\n    var oaVec = _IsoVector.Zero();\n\n    var abVec = _IsoVector.Zero();\n\n    var obVec = _IsoVector.Zero();\n\n    var verts = [];\n    var idx;\n    var idxR;\n    var isoId;\n    var isoIdR;\n    var closestTo = [];\n    var vDist = this.vertByDist;\n\n    var matchIdx = function matchIdx(f, fr, isoId, isoIdR) {\n      idx = f + \"|\" + isoId;\n      idxR = fr + \"|\" + isoIdR;\n\n      if (!(idx in vecToidx || idxR in vecToidx)) {\n        vecToidx[idx] = indexCount;\n        vecToidx[idxR] = indexCount;\n        indexCount++;\n      } else if (idx in vecToidx && !(idxR in vecToidx)) {\n        vecToidx[idxR] = vecToidx[idx];\n      } else if (idxR in vecToidx && !(idx in vecToidx)) {\n        vecToidx[idx] = vecToidx[idxR];\n      }\n\n      if (vDist[isoId][0] > 2) {\n        closestTo[vecToidx[idx]] = [-vDist[isoId][0], vDist[isoId][1], vecToidx[idx]];\n      } else {\n        closestTo[vecToidx[idx]] = [verts[vDist[isoId][0]], vDist[isoId][1], vecToidx[idx]];\n      }\n    };\n\n    this.IDATA.edgematch = [[1, \"B\"], [2, \"B\"], [3, \"B\"], [4, \"B\"], [0, \"B\"], [10, \"O\", 14, \"A\"], [11, \"O\", 10, \"A\"], [12, \"O\", 11, \"A\"], [13, \"O\", 12, \"A\"], [14, \"O\", 13, \"A\"], [0, \"O\"], [1, \"O\"], [2, \"O\"], [3, \"O\"], [4, \"O\"], [19, \"B\", 5, \"A\"], [15, \"B\", 6, \"A\"], [16, \"B\", 7, \"A\"], [17, \"B\", 8, \"A\"], [18, \"B\", 9, \"A\"]];\n    /***edges AB to OB***** rotation about B*/\n\n    for (var f = 0; f < 20; f++) {\n      //f current face\n      verts = this.IDATA.face[f];\n      O = verts[2];\n      A = verts[1];\n      B = verts[0];\n      isoId = oVec.x + \"|\" + oVec.y;\n      idx = f + \"|\" + isoId;\n\n      if (!(idx in vecToidx)) {\n        vecToidx[idx] = O;\n        closestTo[O] = [verts[vDist[isoId][0]], vDist[isoId][1]];\n      }\n\n      isoId = aVec.x + \"|\" + aVec.y;\n      idx = f + \"|\" + isoId;\n\n      if (!(idx in vecToidx)) {\n        vecToidx[idx] = A;\n        closestTo[A] = [verts[vDist[isoId][0]], vDist[isoId][1]];\n      }\n\n      isoId = bVec.x + \"|\" + bVec.y;\n      idx = f + \"|\" + isoId;\n\n      if (!(idx in vecToidx)) {\n        vecToidx[idx] = B;\n        closestTo[B] = [verts[vDist[isoId][0]], vDist[isoId][1]];\n      } //for edge vertices\n\n\n      fr = this.IDATA.edgematch[f][0];\n      rot = this.IDATA.edgematch[f][1];\n\n      if (rot === \"B\") {\n        for (var i = 1; i < g; i++) {\n          abVec.x = m - i * (m1 + n1);\n          abVec.y = n + i * m1;\n          obVec.x = -i * n1;\n          obVec.y = i * (m1 + n1);\n          isoId = abVec.x + \"|\" + abVec.y;\n          isoIdR = obVec.x + \"|\" + obVec.y;\n          matchIdx(f, fr, isoId, isoIdR);\n        }\n      }\n\n      if (rot === \"O\") {\n        for (var i = 1; i < g; i++) {\n          obVec.x = -i * n1;\n          obVec.y = i * (m1 + n1);\n          oaVec.x = i * m1;\n          oaVec.y = i * n1;\n          isoId = obVec.x + \"|\" + obVec.y;\n          isoIdR = oaVec.x + \"|\" + oaVec.y;\n          matchIdx(f, fr, isoId, isoIdR);\n        }\n      }\n\n      fr = this.IDATA.edgematch[f][2];\n      rot = this.IDATA.edgematch[f][3];\n\n      if (rot && rot === \"A\") {\n        for (var i = 1; i < g; i++) {\n          oaVec.x = i * m1;\n          oaVec.y = i * n1;\n          abVec.x = m - (g - i) * (m1 + n1); //reversed for BA\n\n          abVec.y = n + (g - i) * m1; //reversed for BA\n\n          isoId = oaVec.x + \"|\" + oaVec.y;\n          isoIdR = abVec.x + \"|\" + abVec.y;\n          matchIdx(f, fr, isoId, isoIdR);\n        }\n      }\n\n      for (var i = 0; i < this.vertices.length; i++) {\n        isoId = this.vertices[i].x + \"|\" + this.vertices[i].y;\n        idx = f + \"|\" + isoId;\n\n        if (!(idx in vecToidx)) {\n          vecToidx[idx] = indexCount++;\n\n          if (vDist[isoId][0] > 2) {\n            closestTo[vecToidx[idx]] = [-vDist[isoId][0], vDist[isoId][1], vecToidx[idx]];\n          } else {\n            closestTo[vecToidx[idx]] = [verts[vDist[isoId][0]], vDist[isoId][1], vecToidx[idx]];\n          }\n        }\n      }\n    }\n\n    this.closestTo = closestTo;\n    this.vecToidx = vecToidx;\n  };\n\n  _PrimaryIsoTriangle.prototype.calcCoeffs = function () {\n    var m = this.m;\n    var n = this.n;\n    var thirdR3 = Math.sqrt(3) / 3;\n    var LSQD = m * m + n * n + m * n;\n    this.coau = (m + n) / LSQD;\n    this.cobu = -n / LSQD;\n    this.coav = -thirdR3 * (m - n) / LSQD;\n    this.cobv = thirdR3 * (2 * m + n) / LSQD;\n  };\n\n  _PrimaryIsoTriangle.prototype.createInnerFacets = function () {\n    var m = this.m;\n    var n = this.n;\n\n    for (var y = 0; y < n + m + 1; y++) {\n      for (var x = this.min[y]; x < this.max[y] + 1; x++) {\n        if (x < this.max[y] && x < this.max[y + 1] + 1) {\n          this.innerFacets.push([\"|\" + x + \"|\" + y, \"|\" + x + \"|\" + (y + 1), \"|\" + (x + 1) + \"|\" + y]);\n        }\n\n        if (y > 0 && x < this.max[y - 1] && x + 1 < this.max[y] + 1) {\n          this.innerFacets.push([\"|\" + x + \"|\" + y, \"|\" + (x + 1) + \"|\" + y, \"|\" + (x + 1) + \"|\" + (y - 1)]);\n        }\n      }\n    }\n  };\n\n  _PrimaryIsoTriangle.prototype.edgeVecsABOB = function () {\n    var m = this.m;\n    var n = this.n;\n    var B = new _IsoVector(-n, m + n);\n\n    for (var y = 1; y < m + n; y++) {\n      var point = new _IsoVector(this.min[y], y);\n      var prev = new _IsoVector(this.min[y - 1], y - 1);\n      var next = new _IsoVector(this.min[y + 1], y + 1);\n      var pointR = point.clone();\n      var prevR = prev.clone();\n      var nextR = next.clone();\n      pointR.rotate60About(B);\n      prevR.rotate60About(B);\n      nextR.rotate60About(B);\n      var maxPoint = new _IsoVector(this.max[pointR.y], pointR.y);\n      var maxPrev = new _IsoVector(this.max[pointR.y - 1], pointR.y - 1);\n      var maxLeftPrev = new _IsoVector(this.max[pointR.y - 1] - 1, pointR.y - 1);\n\n      if (pointR.x !== maxPoint.x || pointR.y !== maxPoint.y) {\n        if (pointR.x !== maxPrev.x) {\n          // type2\n          //up\n          this.vertexTypes.push([1, 0, 0]);\n          this.isoVecsABOB.push([point, maxPrev, maxLeftPrev]); //down\n\n          this.vertexTypes.push([1, 0, 0]);\n          this.isoVecsABOB.push([point, maxLeftPrev, maxPoint]);\n        } else if (pointR.y === nextR.y) {\n          // type1\n          //up\n          this.vertexTypes.push([1, 1, 0]);\n          this.isoVecsABOB.push([point, prev, maxPrev]); //down\n\n          this.vertexTypes.push([1, 0, 1]);\n          this.isoVecsABOB.push([point, maxPrev, next]);\n        } else {\n          // type 0\n          //up\n          this.vertexTypes.push([1, 1, 0]);\n          this.isoVecsABOB.push([point, prev, maxPrev]); //down\n\n          this.vertexTypes.push([1, 0, 0]);\n          this.isoVecsABOB.push([point, maxPrev, maxPoint]);\n        }\n      }\n    }\n  };\n\n  _PrimaryIsoTriangle.prototype.mapABOBtoOBOA = function () {\n    var point = new _IsoVector(0, 0);\n\n    for (var i = 0; i < this.isoVecsABOB.length; i++) {\n      var temp = [];\n\n      for (var j = 0; j < 3; j++) {\n        point.x = this.isoVecsABOB[i][j].x;\n        point.y = this.isoVecsABOB[i][j].y;\n\n        if (this.vertexTypes[i][j] === 0) {\n          point.rotateNeg120(this.m, this.n);\n        }\n\n        temp.push(point.clone());\n      }\n\n      this.isoVecsOBOA.push(temp);\n    }\n  };\n\n  _PrimaryIsoTriangle.prototype.mapABOBtoBAOA = function () {\n    var point = new _IsoVector(0, 0);\n\n    for (var i = 0; i < this.isoVecsABOB.length; i++) {\n      var temp = [];\n\n      for (var j = 0; j < 3; j++) {\n        point.x = this.isoVecsABOB[i][j].x;\n        point.y = this.isoVecsABOB[i][j].y;\n\n        if (this.vertexTypes[i][j] === 1) {\n          point.rotate120(this.m, this.n);\n        }\n\n        temp.push(point.clone());\n      }\n\n      this.isoVecsBAOA.push(temp);\n    }\n  }; // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n  _PrimaryIsoTriangle.prototype.MapToFace = function (faceNb, geodesicData) {\n    var F = this.IDATA.face[faceNb];\n    var oidx = F[2];\n    var aidx = F[1];\n    var bidx = F[0];\n    var O = Vector3.FromArray(this.IDATA.vertex[oidx]);\n    var A = Vector3.FromArray(this.IDATA.vertex[aidx]);\n    var B = Vector3.FromArray(this.IDATA.vertex[bidx]);\n    var OA = A.subtract(O);\n    var OB = B.subtract(O);\n    var x = OA.scale(this.coau).add(OB.scale(this.cobu));\n    var y = OA.scale(this.coav).add(OB.scale(this.cobv));\n    var mapped = [];\n    var idx;\n    var tempVec = TmpVectors.Vector3[0];\n\n    for (var i = 0; i < this.cartesian.length; i++) {\n      tempVec = x.scale(this.cartesian[i].x).add(y.scale(this.cartesian[i].y)).add(O);\n      mapped[i] = [tempVec.x, tempVec.y, tempVec.z];\n      idx = faceNb + \"|\" + this.vertices[i].x + \"|\" + this.vertices[i].y;\n      geodesicData.vertex[this.vecToidx[idx]] = [tempVec.x, tempVec.y, tempVec.z];\n    }\n  }; //statics\n\n  /**Creates a primary triangle\n   * @param m\n   * @param n\n   * @hidden\n   */\n\n\n  _PrimaryIsoTriangle.prototype.build = function (m, n) {\n    var vertices = new Array();\n\n    var O = _IsoVector.Zero();\n\n    var A = new _IsoVector(m, n);\n    var B = new _IsoVector(-n, m + n);\n    vertices.push(O, A, B); //max internal isoceles triangle vertices\n\n    for (var y_1 = n; y_1 < m + 1; y_1++) {\n      for (var x_1 = 0; x_1 < m + 1 - y_1; x_1++) {\n        vertices.push(new _IsoVector(x_1, y_1));\n      }\n    } //shared vertices along edges when needed\n\n\n    if (n > 0) {\n      var g = Scalar.HCF(m, n);\n      var m1 = m / g;\n      var n1 = n / g;\n\n      for (var i = 1; i < g; i++) {\n        vertices.push(new _IsoVector(i * m1, i * n1)); //OA\n\n        vertices.push(new _IsoVector(-i * n1, i * (m1 + n1))); //OB\n\n        vertices.push(new _IsoVector(m - i * (m1 + n1), n + i * m1)); // AB\n      } //lower rows vertices and their rotations\n\n\n      var ratio = m / n;\n\n      for (var y_2 = 1; y_2 < n; y_2++) {\n        for (var x_2 = 0; x_2 < y_2 * ratio; x_2++) {\n          vertices.push(new _IsoVector(x_2, y_2));\n          vertices.push(new _IsoVector(x_2, y_2).rotate120(m, n));\n          vertices.push(new _IsoVector(x_2, y_2).rotateNeg120(m, n));\n        }\n      }\n    } //order vertices by x and then y\n\n\n    vertices.sort(function (a, b) {\n      return a.x - b.x;\n    });\n    vertices.sort(function (a, b) {\n      return a.y - b.y;\n    });\n    var min = new Array(m + n + 1);\n    var max = new Array(m + n + 1);\n\n    for (var i = 0; i < min.length; i++) {\n      min[i] = Infinity;\n      max[i] = -Infinity;\n    }\n\n    var y = 0;\n    var x = 0;\n    var len = vertices.length;\n\n    for (var i = 0; i < len; i++) {\n      x = vertices[i].x;\n      y = vertices[i].y;\n      min[y] = Math.min(x, min[y]);\n      max[y] = Math.max(x, max[y]);\n    } //calculates the distance of a vertex from a given primary vertex\n\n\n    var distFrom = function distFrom(vert, primVert) {\n      var v = vert.clone();\n\n      if (primVert === \"A\") {\n        v.rotateNeg120(m, n);\n      }\n\n      if (primVert === \"B\") {\n        v.rotate120(m, n);\n      }\n\n      if (v.x < 0) {\n        return v.y;\n      }\n\n      return v.x + v.y;\n    };\n\n    var cartesian = [];\n    var distFromO = [];\n    var distFromA = [];\n    var distFromB = [];\n    var vertByDist = {};\n    var vertData = [];\n    var closest = -1;\n    var dist = -1;\n\n    for (var i = 0; i < len; i++) {\n      cartesian[i] = vertices[i].toCartesianOrigin(new _IsoVector(0, 0), 0.5);\n      distFromO[i] = distFrom(vertices[i], \"O\");\n      distFromA[i] = distFrom(vertices[i], \"A\");\n      distFromB[i] = distFrom(vertices[i], \"B\");\n\n      if (distFromO[i] === distFromA[i] && distFromA[i] === distFromB[i]) {\n        closest = 3;\n        dist = distFromO[i];\n      } else if (distFromO[i] === distFromA[i]) {\n        closest = 4;\n        dist = distFromO[i];\n      } else if (distFromA[i] === distFromB[i]) {\n        closest = 5;\n        dist = distFromA[i];\n      } else if (distFromB[i] === distFromO[i]) {\n        closest = 6;\n        dist = distFromO[i];\n      }\n\n      if (distFromO[i] < distFromA[i] && distFromO[i] < distFromB[i]) {\n        closest = 2;\n        dist = distFromO[i];\n      }\n\n      if (distFromA[i] < distFromO[i] && distFromA[i] < distFromB[i]) {\n        closest = 1;\n        dist = distFromA[i];\n      }\n\n      if (distFromB[i] < distFromA[i] && distFromB[i] < distFromO[i]) {\n        closest = 0;\n        dist = distFromB[i];\n      }\n\n      vertData.push([closest, dist, vertices[i].x, vertices[i].y]);\n    }\n\n    vertData.sort(function (a, b) {\n      return a[2] - b[2];\n    });\n    vertData.sort(function (a, b) {\n      return a[3] - b[3];\n    });\n    vertData.sort(function (a, b) {\n      return a[1] - b[1];\n    });\n    vertData.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    for (var v = 0; v < vertData.length; v++) {\n      vertByDist[vertData[v][2] + \"|\" + vertData[v][3]] = [vertData[v][0], vertData[v][1], v];\n    }\n\n    this.m = m;\n    this.n = n;\n    this.vertices = vertices;\n    this.vertByDist = vertByDist;\n    this.cartesian = cartesian;\n    this.min = min;\n    this.max = max;\n    return this;\n  };\n\n  return _PrimaryIsoTriangle;\n}();\n\nexport { _PrimaryIsoTriangle };\n/** Builds Polyhedron Data\n * @hidden\n */\n\nvar PolyhedronData =\n/** @class */\nfunction () {\n  function PolyhedronData(name, category, vertex, face) {\n    this.name = name;\n    this.category = category;\n    this.vertex = vertex;\n    this.face = face;\n  }\n\n  return PolyhedronData;\n}();\n\nexport { PolyhedronData };\n/**\n * This class Extends the PolyhedronData Class to provide measures for a Geodesic Polyhedron\n */\n\nvar GeodesicData =\n/** @class */\nfunction (_super) {\n  __extends(GeodesicData, _super);\n\n  function GeodesicData() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @param face\n   * @param primTri\n   * @hidden\n   */\n\n\n  GeodesicData.prototype.innerToData = function (face, primTri) {\n    for (var i = 0; i < primTri.innerFacets.length; i++) {\n      this.face.push(primTri.innerFacets[i].map(function (el) {\n        return primTri.vecToidx[face + el];\n      }));\n    }\n  };\n  /**\n   * @param faceNb\n   * @param primTri\n   * @hidden\n   */\n\n\n  GeodesicData.prototype.mapABOBtoDATA = function (faceNb, primTri) {\n    var fr = primTri.IDATA.edgematch[faceNb][0];\n\n    for (var i = 0; i < primTri.isoVecsABOB.length; i++) {\n      var temp = [];\n\n      for (var j = 0; j < 3; j++) {\n        if (primTri.vertexTypes[i][j] === 0) {\n          temp.push(faceNb + \"|\" + primTri.isoVecsABOB[i][j].x + \"|\" + primTri.isoVecsABOB[i][j].y);\n        } else {\n          temp.push(fr + \"|\" + primTri.isoVecsABOB[i][j].x + \"|\" + primTri.isoVecsABOB[i][j].y);\n        }\n      }\n\n      this.face.push([primTri.vecToidx[temp[0]], primTri.vecToidx[temp[1]], primTri.vecToidx[temp[2]]]);\n    }\n  };\n  /**\n   * @param faceNb\n   * @param primTri\n   * @hidden\n   */\n\n\n  GeodesicData.prototype.mapOBOAtoDATA = function (faceNb, primTri) {\n    var fr = primTri.IDATA.edgematch[faceNb][0];\n\n    for (var i = 0; i < primTri.isoVecsOBOA.length; i++) {\n      var temp = [];\n\n      for (var j = 0; j < 3; j++) {\n        if (primTri.vertexTypes[i][j] === 1) {\n          temp.push(faceNb + \"|\" + primTri.isoVecsOBOA[i][j].x + \"|\" + primTri.isoVecsOBOA[i][j].y);\n        } else {\n          temp.push(fr + \"|\" + primTri.isoVecsOBOA[i][j].x + \"|\" + primTri.isoVecsOBOA[i][j].y);\n        }\n      }\n\n      this.face.push([primTri.vecToidx[temp[0]], primTri.vecToidx[temp[1]], primTri.vecToidx[temp[2]]]);\n    }\n  };\n  /**\n   * @param faceNb\n   * @param primTri\n   * @hidden\n   */\n\n\n  GeodesicData.prototype.mapBAOAtoDATA = function (faceNb, primTri) {\n    var fr = primTri.IDATA.edgematch[faceNb][2];\n\n    for (var i = 0; i < primTri.isoVecsBAOA.length; i++) {\n      var temp = [];\n\n      for (var j = 0; j < 3; j++) {\n        if (primTri.vertexTypes[i][j] === 1) {\n          temp.push(faceNb + \"|\" + primTri.isoVecsBAOA[i][j].x + \"|\" + primTri.isoVecsBAOA[i][j].y);\n        } else {\n          temp.push(fr + \"|\" + primTri.isoVecsBAOA[i][j].x + \"|\" + primTri.isoVecsBAOA[i][j].y);\n        }\n      }\n\n      this.face.push([primTri.vecToidx[temp[0]], primTri.vecToidx[temp[1]], primTri.vecToidx[temp[2]]]);\n    }\n  };\n  /**\n   * @param primTri\n   * @hidden\n   */\n\n\n  GeodesicData.prototype.orderData = function (primTri) {\n    var nearTo = [];\n\n    for (var i = 0; i < 13; i++) {\n      nearTo[i] = [];\n    }\n\n    var close = primTri.closestTo;\n\n    for (var i = 0; i < close.length; i++) {\n      if (close[i][0] > -1) {\n        if (close[i][1] > 0) {\n          nearTo[close[i][0]].push([i, close[i][1]]);\n        }\n      } else {\n        nearTo[12].push([i, close[i][0]]);\n      }\n    }\n\n    var near = [];\n\n    for (var i = 0; i < 12; i++) {\n      near[i] = i;\n    }\n\n    var nearIndex = 12;\n\n    for (var i = 0; i < 12; i++) {\n      nearTo[i].sort(function (a, b) {\n        return a[1] - b[1];\n      });\n\n      for (var j = 0; j < nearTo[i].length; j++) {\n        near[nearTo[i][j][0]] = nearIndex++;\n      }\n    }\n\n    for (var j = 0; j < nearTo[12].length; j++) {\n      near[nearTo[12][j][0]] = nearIndex++;\n    }\n\n    for (var i = 0; i < this.vertex.length; i++) {\n      this.vertex[i].push(near[i]);\n    }\n\n    this.vertex.sort(function (a, b) {\n      return a[3] - b[3];\n    });\n\n    for (var i = 0; i < this.vertex.length; i++) {\n      this.vertex[i].pop();\n    }\n\n    for (var i = 0; i < this.face.length; i++) {\n      for (var j = 0; j < this.face[i].length; j++) {\n        this.face[i][j] = near[this.face[i][j]];\n      }\n    }\n\n    this.sharedNodes = nearTo[12].length;\n    this.poleNodes = this.vertex.length - this.sharedNodes;\n  };\n  /**\n   * @param m\n   * @param faces\n   * @hidden\n   */\n\n\n  GeodesicData.prototype.setOrder = function (m, faces) {\n    var adjVerts = [];\n    var dualFaces = [];\n    var face = faces.pop();\n    dualFaces.push(face);\n    var index = this.face[face].indexOf(m);\n    index = (index + 2) % 3;\n    var v = this.face[face][index];\n    adjVerts.push(v);\n    var f = 0;\n\n    while (faces.length > 0) {\n      face = faces[f];\n\n      if (this.face[face].indexOf(v) > -1) {\n        // v is a vertex of face f\n        index = (this.face[face].indexOf(v) + 1) % 3;\n        v = this.face[face][index];\n        adjVerts.push(v);\n        dualFaces.push(face);\n        faces.splice(f, 1);\n        f = 0;\n      } else {\n        f++;\n      }\n    }\n\n    this.adjacentFaces.push(adjVerts);\n    return dualFaces;\n  };\n  /**\n   * @hidden\n   */\n\n\n  GeodesicData.prototype.toGoldbergPolyhedronData = function () {\n    var _this = this;\n\n    var goldbergPolyhedronData = new PolyhedronData(\"GeoDual\", \"Goldberg\", [], []);\n    goldbergPolyhedronData.name = \"GD dual\";\n    var verticesNb = this.vertex.length;\n    var map = new Array(verticesNb);\n\n    for (var v = 0; v < verticesNb; v++) {\n      map[v] = [];\n    }\n\n    for (var f = 0; f < this.face.length; f++) {\n      for (var i = 0; i < 3; i++) {\n        map[this.face[f][i]].push(f);\n      }\n    }\n\n    var cx = 0;\n    var cy = 0;\n    var cz = 0;\n    var face = [];\n    var vertex = [];\n    this.adjacentFaces = [];\n\n    for (var m = 0; m < map.length; m++) {\n      goldbergPolyhedronData.face[m] = this.setOrder(m, map[m].concat([]));\n      map[m].forEach(function (el) {\n        cx = 0;\n        cy = 0;\n        cz = 0;\n        face = _this.face[el];\n\n        for (var i = 0; i < 3; i++) {\n          vertex = _this.vertex[face[i]];\n          cx += vertex[0];\n          cy += vertex[1];\n          cz += vertex[2];\n        }\n\n        goldbergPolyhedronData.vertex[el] = [cx / 3, cy / 3, cz / 3];\n      });\n    }\n\n    return goldbergPolyhedronData;\n  }; //statics\n\n  /**Builds the data for a Geodesic Polyhedron from a primary triangle\n   * @param primTri the primary triangle\n   * @hidden\n   */\n\n\n  GeodesicData.BuildGeodesicData = function (primTri) {\n    var geodesicData = new GeodesicData(\"Geodesic-m-n\", \"Geodesic\", [[0, PHI, -1], [-PHI, 1, 0], [-1, 0, -PHI], [1, 0, -PHI], [PHI, 1, 0], [0, PHI, 1], [-1, 0, PHI], [-PHI, -1, 0], [0, -PHI, -1], [PHI, -1, 0], [1, 0, PHI], [0, -PHI, 1]], []);\n    primTri.setIndices();\n    primTri.calcCoeffs();\n    primTri.createInnerFacets();\n    primTri.edgeVecsABOB();\n    primTri.mapABOBtoOBOA();\n    primTri.mapABOBtoBAOA();\n\n    for (var f = 0; f < primTri.IDATA.face.length; f++) {\n      primTri.MapToFace(f, geodesicData);\n      geodesicData.innerToData(f, primTri);\n\n      if (primTri.IDATA.edgematch[f][1] === \"B\") {\n        geodesicData.mapABOBtoDATA(f, primTri);\n      }\n\n      if (primTri.IDATA.edgematch[f][1] === \"O\") {\n        geodesicData.mapOBOAtoDATA(f, primTri);\n      }\n\n      if (primTri.IDATA.edgematch[f][3] === \"A\") {\n        geodesicData.mapBAOAtoDATA(f, primTri);\n      }\n    }\n\n    geodesicData.orderData(primTri);\n    var radius = 1;\n    geodesicData.vertex = geodesicData.vertex.map(function (el) {\n      var a = el[0];\n      var b = el[1];\n      var c = el[2];\n      var d = Math.sqrt(a * a + b * b + c * c);\n      el[0] *= radius / d;\n      el[1] *= radius / d;\n      el[2] *= radius / d;\n      return el;\n    });\n    return geodesicData;\n  };\n\n  return GeodesicData;\n}(PolyhedronData);\n\nexport { GeodesicData };","map":{"version":3,"mappings":"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","names":["Vector3","TmpVectors","Scalar","PHI","_IsoVector","PolyhedronData","_PrimaryIsoTriangle","indexCount","vecToidx","m","n","g","m1","n1","HCF","fr","rot","O","A","B","oVec","Zero","aVec","bVec","oaVec","abVec","obVec","verts","idx","idxR","isoId","isoIdR","closestTo","vDist","vertByDist","matchIdx","f","IDATA","edgematch","face","x","y","i","vertices","length","thirdR3","Math","sqrt","LSQD","coau","cobu","coav","cobv","min","max","innerFacets","push","point","prev","next","pointR","clone","prevR","nextR","rotate60About","maxPoint","maxPrev","maxLeftPrev","vertexTypes","isoVecsABOB","temp","j","rotateNeg120","isoVecsOBOA","rotate120","isoVecsBAOA","faceNb","geodesicData","F","oidx","aidx","bidx","FromArray","vertex","OA","subtract","OB","scale","add","mapped","tempVec","cartesian","z","Array","y_1","x_1","ratio","y_2","x_2","sort","a","b","Infinity","len","distFrom","vert","primVert","v","distFromO","distFromA","distFromB","vertData","closest","dist","toCartesianOrigin","name","category","__extends","GeodesicData","primTri","map","el","nearTo","close","near","nearIndex","pop","sharedNodes","poleNodes","faces","adjVerts","dualFaces","index","indexOf","splice","adjacentFaces","goldbergPolyhedronData","verticesNb","cx","cy","cz","setOrder","concat","forEach","_this","setIndices","calcCoeffs","createInnerFacets","edgeVecsABOB","mapABOBtoOBOA","mapABOBtoBAOA","MapToFace","innerToData","mapABOBtoDATA","mapOBOAtoDATA","mapBAOAtoDATA","orderData","radius","c","d"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Meshes/geodesicMesh.ts"],"sourcesContent":["import { Vector3, TmpVectors } from \"../Maths/math.vector\";\r\nimport { Scalar } from \"../Maths/math.scalar\";\r\nimport { PHI } from \"../Maths/math.constants\";\r\nimport { _IsoVector } from \"../Maths/math.isovector\";\r\n\r\n/**\r\n * Class representing data for one face OAB of an equilateral icosahedron\r\n * When O is the isovector (0, 0), A is isovector (m, n)\r\n * @hidden\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport class _PrimaryIsoTriangle {\r\n    //properties\r\n    public m: number;\r\n    public n: number;\r\n    public cartesian: Vector3[] = [];\r\n    public vertices: _IsoVector[] = [];\r\n    public max: number[] = [];\r\n    public min: number[] = [];\r\n    public vecToidx: { [key: string]: number };\r\n    public vertByDist: { [key: string]: number[] };\r\n    public closestTo: number[][] = [];\r\n\r\n    public innerFacets: string[][] = [];\r\n    public isoVecsABOB: _IsoVector[][] = [];\r\n    public isoVecsOBOA: _IsoVector[][] = [];\r\n    public isoVecsBAOA: _IsoVector[][] = [];\r\n    public vertexTypes: number[][] = [];\r\n\r\n    public coau: number;\r\n    public cobu: number;\r\n    public coav: number;\r\n    public cobv: number;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    public IDATA: PolyhedronData = new PolyhedronData(\r\n        \"icosahedron\",\r\n        \"Regular\",\r\n        [\r\n            [0, PHI, -1],\r\n            [-PHI, 1, 0],\r\n            [-1, 0, -PHI],\r\n            [1, 0, -PHI],\r\n            [PHI, 1, 0],\r\n            [0, PHI, 1],\r\n            [-1, 0, PHI],\r\n            [-PHI, -1, 0],\r\n            [0, -PHI, -1],\r\n            [PHI, -1, 0],\r\n            [1, 0, PHI],\r\n            [0, -PHI, 1],\r\n        ],\r\n        [\r\n            [0, 2, 1],\r\n            [0, 3, 2],\r\n            [0, 4, 3],\r\n            [0, 5, 4],\r\n            [0, 1, 5],\r\n            [7, 6, 1],\r\n            [8, 7, 2],\r\n            [9, 8, 3],\r\n            [10, 9, 4],\r\n            [6, 10, 5],\r\n            [2, 7, 1],\r\n            [3, 8, 2],\r\n            [4, 9, 3],\r\n            [5, 10, 4],\r\n            [1, 6, 5],\r\n            [11, 6, 7],\r\n            [11, 7, 8],\r\n            [11, 8, 9],\r\n            [11, 9, 10],\r\n            [11, 10, 6],\r\n        ]\r\n    );\r\n\r\n    /**\r\n     * Creates the PrimaryIsoTriangle Triangle OAB\r\n     * @param m an integer\r\n     * @param n an integer\r\n     */\r\n\r\n    //operators\r\n    public setIndices() {\r\n        let indexCount = 12; // 12 vertices already assigned\r\n        const vecToidx: { [key: string]: number } = {}; //maps iso-vectors to indexCount;\r\n        const m = this.m;\r\n        const n = this.n;\r\n        let g = m; // hcf of m, n when n != 0\r\n        let m1 = 1;\r\n        let n1 = 0;\r\n        if (n !== 0) {\r\n            g = Scalar.HCF(m, n);\r\n        }\r\n        m1 = m / g;\r\n        n1 = n / g;\r\n\r\n        let fr: number | string; //face to the right of current face\r\n        let rot: number | string; //rotation about which vertex for fr\r\n        let O: number;\r\n        let A: number;\r\n        let B: number;\r\n        const oVec: _IsoVector = _IsoVector.Zero();\r\n        const aVec = new _IsoVector(m, n);\r\n        const bVec = new _IsoVector(-n, m + n);\r\n        const oaVec: _IsoVector = _IsoVector.Zero();\r\n        const abVec: _IsoVector = _IsoVector.Zero();\r\n        const obVec: _IsoVector = _IsoVector.Zero();\r\n        let verts: number[] = [];\r\n        let idx: string;\r\n        let idxR: string;\r\n        let isoId: string;\r\n        let isoIdR: string;\r\n\r\n        const closestTo: number[][] = [];\r\n        const vDist = this.vertByDist;\r\n\r\n        const matchIdx = (f: number, fr: number, isoId: string, isoIdR: string) => {\r\n            idx = f + \"|\" + isoId;\r\n            idxR = fr + \"|\" + isoIdR;\r\n            if (!(idx in vecToidx || idxR in vecToidx)) {\r\n                vecToidx[idx] = indexCount;\r\n                vecToidx[idxR] = indexCount;\r\n                indexCount++;\r\n            } else if (idx in vecToidx && !(idxR in vecToidx)) {\r\n                vecToidx[idxR] = vecToidx[idx];\r\n            } else if (idxR in vecToidx && !(idx in vecToidx)) {\r\n                vecToidx[idx] = vecToidx[idxR];\r\n            }\r\n            if (vDist[isoId][0] > 2) {\r\n                closestTo[vecToidx[idx]] = [-vDist[isoId][0], vDist[isoId][1], vecToidx[idx]];\r\n            } else {\r\n                closestTo[vecToidx[idx]] = [verts[vDist[isoId][0]], vDist[isoId][1], vecToidx[idx]];\r\n            }\r\n        };\r\n\r\n        this.IDATA.edgematch = [\r\n            [1, \"B\"],\r\n            [2, \"B\"],\r\n            [3, \"B\"],\r\n            [4, \"B\"],\r\n            [0, \"B\"],\r\n            [10, \"O\", 14, \"A\"],\r\n            [11, \"O\", 10, \"A\"],\r\n            [12, \"O\", 11, \"A\"],\r\n            [13, \"O\", 12, \"A\"],\r\n            [14, \"O\", 13, \"A\"],\r\n            [0, \"O\"],\r\n            [1, \"O\"],\r\n            [2, \"O\"],\r\n            [3, \"O\"],\r\n            [4, \"O\"],\r\n            [19, \"B\", 5, \"A\"],\r\n            [15, \"B\", 6, \"A\"],\r\n            [16, \"B\", 7, \"A\"],\r\n            [17, \"B\", 8, \"A\"],\r\n            [18, \"B\", 9, \"A\"],\r\n        ];\r\n\r\n        /***edges AB to OB***** rotation about B*/\r\n        for (let f = 0; f < 20; f++) {\r\n            //f current face\r\n\r\n            verts = this.IDATA.face[f];\r\n            O = verts[2];\r\n            A = verts[1];\r\n            B = verts[0];\r\n\r\n            isoId = oVec.x + \"|\" + oVec.y;\r\n            idx = f + \"|\" + isoId;\r\n            if (!(idx in vecToidx)) {\r\n                vecToidx[idx] = O;\r\n                closestTo[O] = [verts[vDist[isoId][0]], vDist[isoId][1]];\r\n            }\r\n\r\n            isoId = aVec.x + \"|\" + aVec.y;\r\n            idx = f + \"|\" + isoId;\r\n            if (!(idx in vecToidx)) {\r\n                vecToidx[idx] = A;\r\n                closestTo[A] = [verts[vDist[isoId][0]], vDist[isoId][1]];\r\n            }\r\n\r\n            isoId = bVec.x + \"|\" + bVec.y;\r\n            idx = f + \"|\" + isoId;\r\n            if (!(idx in vecToidx)) {\r\n                vecToidx[idx] = B;\r\n                closestTo[B] = [verts[vDist[isoId][0]], vDist[isoId][1]];\r\n            }\r\n\r\n            //for edge vertices\r\n            fr = <number>this.IDATA.edgematch[f][0];\r\n            rot = <string>this.IDATA.edgematch[f][1];\r\n            if (rot === \"B\") {\r\n                for (let i = 1; i < g; i++) {\r\n                    abVec.x = m - i * (m1 + n1);\r\n                    abVec.y = n + i * m1;\r\n                    obVec.x = -i * n1;\r\n                    obVec.y = i * (m1 + n1);\r\n                    isoId = abVec.x + \"|\" + abVec.y;\r\n                    isoIdR = obVec.x + \"|\" + obVec.y;\r\n                    matchIdx(f, fr, isoId, isoIdR);\r\n                }\r\n            }\r\n\r\n            if (rot === \"O\") {\r\n                for (let i = 1; i < g; i++) {\r\n                    obVec.x = -i * n1;\r\n                    obVec.y = i * (m1 + n1);\r\n                    oaVec.x = i * m1;\r\n                    oaVec.y = i * n1;\r\n                    isoId = obVec.x + \"|\" + obVec.y;\r\n                    isoIdR = oaVec.x + \"|\" + oaVec.y;\r\n                    matchIdx(f, fr, isoId, isoIdR);\r\n                }\r\n            }\r\n\r\n            fr = <number>this.IDATA.edgematch[f][2];\r\n            rot = <string>this.IDATA.edgematch[f][3];\r\n            if (rot && rot === \"A\") {\r\n                for (let i = 1; i < g; i++) {\r\n                    oaVec.x = i * m1;\r\n                    oaVec.y = i * n1;\r\n                    abVec.x = m - (g - i) * (m1 + n1); //reversed for BA\r\n                    abVec.y = n + (g - i) * m1; //reversed for BA\r\n                    isoId = oaVec.x + \"|\" + oaVec.y;\r\n                    isoIdR = abVec.x + \"|\" + abVec.y;\r\n                    matchIdx(f, fr, isoId, isoIdR);\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.vertices.length; i++) {\r\n                isoId = this.vertices[i].x + \"|\" + this.vertices[i].y;\r\n                idx = f + \"|\" + isoId;\r\n                if (!(idx in vecToidx)) {\r\n                    vecToidx[idx] = indexCount++;\r\n                    if (vDist[isoId][0] > 2) {\r\n                        closestTo[vecToidx[idx]] = [-vDist[isoId][0], vDist[isoId][1], vecToidx[idx]];\r\n                    } else {\r\n                        closestTo[vecToidx[idx]] = [verts[vDist[isoId][0]], vDist[isoId][1], vecToidx[idx]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.closestTo = closestTo;\r\n        this.vecToidx = vecToidx;\r\n    }\r\n\r\n    public calcCoeffs() {\r\n        const m = this.m;\r\n        const n = this.n;\r\n        const thirdR3 = Math.sqrt(3) / 3;\r\n\r\n        const LSQD = m * m + n * n + m * n;\r\n\r\n        this.coau = (m + n) / LSQD;\r\n        this.cobu = -n / LSQD;\r\n        this.coav = (-thirdR3 * (m - n)) / LSQD;\r\n        this.cobv = (thirdR3 * (2 * m + n)) / LSQD;\r\n    }\r\n\r\n    public createInnerFacets() {\r\n        const m = this.m;\r\n        const n = this.n;\r\n        for (let y = 0; y < n + m + 1; y++) {\r\n            for (let x = this.min[y]; x < this.max[y] + 1; x++) {\r\n                if (x < this.max[y] && x < this.max[y + 1] + 1) {\r\n                    this.innerFacets.push([\"|\" + x + \"|\" + y, \"|\" + x + \"|\" + (y + 1), \"|\" + (x + 1) + \"|\" + y]);\r\n                }\r\n                if (y > 0 && x < this.max[y - 1] && x + 1 < this.max[y] + 1) {\r\n                    this.innerFacets.push([\"|\" + x + \"|\" + y, \"|\" + (x + 1) + \"|\" + y, \"|\" + (x + 1) + \"|\" + (y - 1)]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public edgeVecsABOB() {\r\n        const m = this.m;\r\n        const n = this.n;\r\n\r\n        const B = new _IsoVector(-n, m + n);\r\n\r\n        for (let y = 1; y < m + n; y++) {\r\n            const point = new _IsoVector(this.min[y], y);\r\n            const prev = new _IsoVector(this.min[y - 1], y - 1);\r\n            const next = new _IsoVector(this.min[y + 1], y + 1);\r\n            const pointR = point.clone();\r\n            const prevR = prev.clone();\r\n            const nextR = next.clone();\r\n\r\n            pointR.rotate60About(B);\r\n            prevR.rotate60About(B);\r\n            nextR.rotate60About(B);\r\n\r\n            const maxPoint = new _IsoVector(this.max[pointR.y], pointR.y);\r\n            const maxPrev = new _IsoVector(this.max[pointR.y - 1], pointR.y - 1);\r\n            const maxLeftPrev = new _IsoVector(this.max[pointR.y - 1] - 1, pointR.y - 1);\r\n\r\n            if (pointR.x !== maxPoint.x || pointR.y !== maxPoint.y) {\r\n                if (pointR.x !== maxPrev.x) {\r\n                    // type2\r\n                    //up\r\n                    this.vertexTypes.push([1, 0, 0]);\r\n                    this.isoVecsABOB.push([point, maxPrev, maxLeftPrev]);\r\n                    //down\r\n                    this.vertexTypes.push([1, 0, 0]);\r\n                    this.isoVecsABOB.push([point, maxLeftPrev, maxPoint]);\r\n                } else if (pointR.y === nextR.y) {\r\n                    // type1\r\n                    //up\r\n                    this.vertexTypes.push([1, 1, 0]);\r\n                    this.isoVecsABOB.push([point, prev, maxPrev]);\r\n                    //down\r\n                    this.vertexTypes.push([1, 0, 1]);\r\n                    this.isoVecsABOB.push([point, maxPrev, next]);\r\n                } else {\r\n                    // type 0\r\n                    //up\r\n                    this.vertexTypes.push([1, 1, 0]);\r\n                    this.isoVecsABOB.push([point, prev, maxPrev]);\r\n                    //down\r\n                    this.vertexTypes.push([1, 0, 0]);\r\n                    this.isoVecsABOB.push([point, maxPrev, maxPoint]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public mapABOBtoOBOA() {\r\n        const point = new _IsoVector(0, 0);\r\n        for (let i = 0; i < this.isoVecsABOB.length; i++) {\r\n            const temp = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                point.x = this.isoVecsABOB[i][j].x;\r\n                point.y = this.isoVecsABOB[i][j].y;\r\n                if (this.vertexTypes[i][j] === 0) {\r\n                    point.rotateNeg120(this.m, this.n);\r\n                }\r\n                temp.push(point.clone());\r\n            }\r\n            this.isoVecsOBOA.push(temp);\r\n        }\r\n    }\r\n\r\n    public mapABOBtoBAOA() {\r\n        const point = new _IsoVector(0, 0);\r\n        for (let i = 0; i < this.isoVecsABOB.length; i++) {\r\n            const temp = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                point.x = this.isoVecsABOB[i][j].x;\r\n                point.y = this.isoVecsABOB[i][j].y;\r\n                if (this.vertexTypes[i][j] === 1) {\r\n                    point.rotate120(this.m, this.n);\r\n                }\r\n                temp.push(point.clone());\r\n            }\r\n            this.isoVecsBAOA.push(temp);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    public MapToFace(faceNb: number, geodesicData: PolyhedronData) {\r\n        const F = this.IDATA.face[faceNb];\r\n        const oidx = F[2];\r\n        const aidx = F[1];\r\n        const bidx = F[0];\r\n\r\n        const O = Vector3.FromArray(this.IDATA.vertex[oidx]);\r\n        const A = Vector3.FromArray(this.IDATA.vertex[aidx]);\r\n        const B = Vector3.FromArray(this.IDATA.vertex[bidx]);\r\n\r\n        const OA = A.subtract(O);\r\n        const OB = B.subtract(O);\r\n\r\n        const x: Vector3 = OA.scale(this.coau).add(OB.scale(this.cobu));\r\n        const y: Vector3 = OA.scale(this.coav).add(OB.scale(this.cobv));\r\n\r\n        const mapped = [];\r\n\r\n        let idx: string;\r\n        let tempVec: Vector3 = TmpVectors.Vector3[0];\r\n        for (let i = 0; i < this.cartesian.length; i++) {\r\n            tempVec = x.scale(this.cartesian[i].x).add(y.scale(this.cartesian[i].y)).add(O);\r\n            mapped[i] = [tempVec.x, tempVec.y, tempVec.z];\r\n            idx = faceNb + \"|\" + this.vertices[i].x + \"|\" + this.vertices[i].y;\r\n            geodesicData.vertex[this.vecToidx[idx]] = [tempVec.x, tempVec.y, tempVec.z];\r\n        }\r\n    }\r\n\r\n    //statics\r\n    /**Creates a primary triangle\r\n     * @param m\r\n     * @param n\r\n     * @hidden\r\n     */\r\n\r\n    public build(m: number, n: number) {\r\n        const vertices = new Array<_IsoVector>();\r\n\r\n        const O: _IsoVector = _IsoVector.Zero();\r\n        const A: _IsoVector = new _IsoVector(m, n);\r\n        const B: _IsoVector = new _IsoVector(-n, m + n);\r\n        vertices.push(O, A, B);\r\n\r\n        //max internal isoceles triangle vertices\r\n        for (let y = n; y < m + 1; y++) {\r\n            for (let x = 0; x < m + 1 - y; x++) {\r\n                vertices.push(new _IsoVector(x, y));\r\n            }\r\n        }\r\n\r\n        //shared vertices along edges when needed\r\n        if (n > 0) {\r\n            const g = Scalar.HCF(m, n);\r\n            const m1 = m / g;\r\n            const n1 = n / g;\r\n\r\n            for (let i = 1; i < g; i++) {\r\n                vertices.push(new _IsoVector(i * m1, i * n1)); //OA\r\n                vertices.push(new _IsoVector(-i * n1, i * (m1 + n1))); //OB\r\n                vertices.push(new _IsoVector(m - i * (m1 + n1), n + i * m1)); // AB\r\n            }\r\n\r\n            //lower rows vertices and their rotations\r\n            const ratio = m / n;\r\n            for (let y = 1; y < n; y++) {\r\n                for (let x = 0; x < y * ratio; x++) {\r\n                    vertices.push(new _IsoVector(x, y));\r\n                    vertices.push(new _IsoVector(x, y).rotate120(m, n));\r\n                    vertices.push(new _IsoVector(x, y).rotateNeg120(m, n));\r\n                }\r\n            }\r\n        }\r\n        //order vertices by x and then y\r\n        vertices.sort((a, b) => {\r\n            return a.x - b.x;\r\n        });\r\n\r\n        vertices.sort((a, b) => {\r\n            return a.y - b.y;\r\n        });\r\n\r\n        const min = new Array<number>(m + n + 1);\r\n        const max = new Array<number>(m + n + 1);\r\n        for (let i = 0; i < min.length; i++) {\r\n            min[i] = Infinity;\r\n            max[i] = -Infinity;\r\n        }\r\n\r\n        let y: number = 0;\r\n        let x: number = 0;\r\n\r\n        const len: number = vertices.length;\r\n        for (let i = 0; i < len; i++) {\r\n            x = vertices[i].x;\r\n            y = vertices[i].y;\r\n            min[y] = Math.min(x, min[y]);\r\n            max[y] = Math.max(x, max[y]);\r\n        }\r\n\r\n        //calculates the distance of a vertex from a given primary vertex\r\n        const distFrom = (vert: _IsoVector, primVert: string) => {\r\n            const v = vert.clone();\r\n            if (primVert === \"A\") {\r\n                v.rotateNeg120(m, n);\r\n            }\r\n            if (primVert === \"B\") {\r\n                v.rotate120(m, n);\r\n            }\r\n            if (v.x < 0) {\r\n                return v.y;\r\n            }\r\n            return v.x + v.y;\r\n        };\r\n\r\n        const cartesian: Vector3[] = [];\r\n        const distFromO: number[] = [];\r\n        const distFromA: number[] = [];\r\n        const distFromB: number[] = [];\r\n        const vertByDist: { [key: string]: number[] } = {};\r\n        const vertData: number[][] = [];\r\n        let closest: number = -1;\r\n        let dist: number = -1;\r\n        for (let i = 0; i < len; i++) {\r\n            cartesian[i] = vertices[i].toCartesianOrigin(new _IsoVector(0, 0), 0.5);\r\n            distFromO[i] = distFrom(vertices[i], \"O\");\r\n            distFromA[i] = distFrom(vertices[i], \"A\");\r\n            distFromB[i] = distFrom(vertices[i], \"B\");\r\n\r\n            if (distFromO[i] === distFromA[i] && distFromA[i] === distFromB[i]) {\r\n                closest = 3;\r\n                dist = distFromO[i];\r\n            } else if (distFromO[i] === distFromA[i]) {\r\n                closest = 4;\r\n                dist = distFromO[i];\r\n            } else if (distFromA[i] === distFromB[i]) {\r\n                closest = 5;\r\n                dist = distFromA[i];\r\n            } else if (distFromB[i] === distFromO[i]) {\r\n                closest = 6;\r\n                dist = distFromO[i];\r\n            }\r\n            if (distFromO[i] < distFromA[i] && distFromO[i] < distFromB[i]) {\r\n                closest = 2;\r\n                dist = distFromO[i];\r\n            }\r\n            if (distFromA[i] < distFromO[i] && distFromA[i] < distFromB[i]) {\r\n                closest = 1;\r\n                dist = distFromA[i];\r\n            }\r\n            if (distFromB[i] < distFromA[i] && distFromB[i] < distFromO[i]) {\r\n                closest = 0;\r\n                dist = distFromB[i];\r\n            }\r\n            vertData.push([closest, dist, vertices[i].x, vertices[i].y]);\r\n        }\r\n\r\n        vertData.sort((a, b) => {\r\n            return a[2] - b[2];\r\n        });\r\n        vertData.sort((a, b) => {\r\n            return a[3] - b[3];\r\n        });\r\n        vertData.sort((a, b) => {\r\n            return a[1] - b[1];\r\n        });\r\n        vertData.sort((a, b) => {\r\n            return a[0] - b[0];\r\n        });\r\n\r\n        for (let v = 0; v < vertData.length; v++) {\r\n            vertByDist[vertData[v][2] + \"|\" + vertData[v][3]] = [vertData[v][0], vertData[v][1], v];\r\n        }\r\n\r\n        this.m = m;\r\n        this.n = n;\r\n        this.vertices = vertices;\r\n        this.vertByDist = vertByDist;\r\n        this.cartesian = cartesian;\r\n        this.min = min;\r\n        this.max = max;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n/** Builds Polyhedron Data\r\n * @hidden\r\n */\r\n\r\nexport class PolyhedronData {\r\n    public edgematch: (number | string)[][];\r\n\r\n    constructor(public name: string, public category: string, public vertex: number[][], public face: number[][]) {}\r\n}\r\n\r\n/**\r\n * This class Extends the PolyhedronData Class to provide measures for a Geodesic Polyhedron\r\n */\r\nexport class GeodesicData extends PolyhedronData {\r\n    /**\r\n     * @hidden\r\n     */\r\n    public edgematch: (number | string)[][];\r\n    /**\r\n     * @hidden\r\n     */\r\n    public adjacentFaces: number[][];\r\n    /**\r\n     * @hidden\r\n     */\r\n    public sharedNodes: number;\r\n    /**\r\n     * @hidden\r\n     */\r\n    public poleNodes: number;\r\n    /**\r\n     * @param face\r\n     * @param primTri\r\n     * @hidden\r\n     */\r\n    public innerToData(face: number, primTri: _PrimaryIsoTriangle) {\r\n        for (let i = 0; i < primTri.innerFacets.length; i++) {\r\n            this.face.push(primTri.innerFacets[i].map((el) => primTri.vecToidx[face + el]));\r\n        }\r\n    }\r\n    /**\r\n     * @param faceNb\r\n     * @param primTri\r\n     * @hidden\r\n     */\r\n    public mapABOBtoDATA(faceNb: number, primTri: _PrimaryIsoTriangle) {\r\n        const fr = primTri.IDATA.edgematch[faceNb][0];\r\n        for (let i = 0; i < primTri.isoVecsABOB.length; i++) {\r\n            const temp = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                if (primTri.vertexTypes[i][j] === 0) {\r\n                    temp.push(faceNb + \"|\" + primTri.isoVecsABOB[i][j].x + \"|\" + primTri.isoVecsABOB[i][j].y);\r\n                } else {\r\n                    temp.push(fr + \"|\" + primTri.isoVecsABOB[i][j].x + \"|\" + primTri.isoVecsABOB[i][j].y);\r\n                }\r\n            }\r\n            this.face.push([primTri.vecToidx[temp[0]], primTri.vecToidx[temp[1]], primTri.vecToidx[temp[2]]]);\r\n        }\r\n    }\r\n    /**\r\n     * @param faceNb\r\n     * @param primTri\r\n     * @hidden\r\n     */\r\n    public mapOBOAtoDATA(faceNb: number, primTri: _PrimaryIsoTriangle) {\r\n        const fr = primTri.IDATA.edgematch[faceNb][0];\r\n        for (let i = 0; i < primTri.isoVecsOBOA.length; i++) {\r\n            const temp = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                if (primTri.vertexTypes[i][j] === 1) {\r\n                    temp.push(faceNb + \"|\" + primTri.isoVecsOBOA[i][j].x + \"|\" + primTri.isoVecsOBOA[i][j].y);\r\n                } else {\r\n                    temp.push(fr + \"|\" + primTri.isoVecsOBOA[i][j].x + \"|\" + primTri.isoVecsOBOA[i][j].y);\r\n                }\r\n            }\r\n            this.face.push([primTri.vecToidx[temp[0]], primTri.vecToidx[temp[1]], primTri.vecToidx[temp[2]]]);\r\n        }\r\n    }\r\n    /**\r\n     * @param faceNb\r\n     * @param primTri\r\n     * @hidden\r\n     */\r\n    public mapBAOAtoDATA(faceNb: number, primTri: _PrimaryIsoTriangle) {\r\n        const fr = primTri.IDATA.edgematch[faceNb][2];\r\n        for (let i = 0; i < primTri.isoVecsBAOA.length; i++) {\r\n            const temp = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                if (primTri.vertexTypes[i][j] === 1) {\r\n                    temp.push(faceNb + \"|\" + primTri.isoVecsBAOA[i][j].x + \"|\" + primTri.isoVecsBAOA[i][j].y);\r\n                } else {\r\n                    temp.push(fr + \"|\" + primTri.isoVecsBAOA[i][j].x + \"|\" + primTri.isoVecsBAOA[i][j].y);\r\n                }\r\n            }\r\n            this.face.push([primTri.vecToidx[temp[0]], primTri.vecToidx[temp[1]], primTri.vecToidx[temp[2]]]);\r\n        }\r\n    }\r\n    /**\r\n     * @param primTri\r\n     * @hidden\r\n     */\r\n    public orderData(primTri: _PrimaryIsoTriangle) {\r\n        const nearTo: number[][][] = [];\r\n        for (let i = 0; i < 13; i++) {\r\n            nearTo[i] = [];\r\n        }\r\n        const close: number[][] = primTri.closestTo;\r\n        for (let i = 0; i < close.length; i++) {\r\n            if (close[i][0] > -1) {\r\n                if (close[i][1] > 0) {\r\n                    nearTo[close[i][0]].push([i, close[i][1]]);\r\n                }\r\n            } else {\r\n                nearTo[12].push([i, close[i][0]]);\r\n            }\r\n        }\r\n\r\n        const near: number[] = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            near[i] = i;\r\n        }\r\n        let nearIndex = 12;\r\n        for (let i = 0; i < 12; i++) {\r\n            nearTo[i].sort((a: number[], b: number[]) => {\r\n                return a[1] - b[1];\r\n            });\r\n            for (let j = 0; j < nearTo[i].length; j++) {\r\n                near[nearTo[i][j][0]] = nearIndex++;\r\n            }\r\n        }\r\n\r\n        for (let j = 0; j < nearTo[12].length; j++) {\r\n            near[nearTo[12][j][0]] = nearIndex++;\r\n        }\r\n\r\n        for (let i = 0; i < this.vertex.length; i++) {\r\n            this.vertex[i].push(near[i]);\r\n        }\r\n\r\n        this.vertex.sort((a, b) => {\r\n            return a[3] - b[3];\r\n        });\r\n\r\n        for (let i = 0; i < this.vertex.length; i++) {\r\n            this.vertex[i].pop();\r\n        }\r\n\r\n        for (let i = 0; i < this.face.length; i++) {\r\n            for (let j = 0; j < this.face[i].length; j++) {\r\n                this.face[i][j] = near[this.face[i][j]];\r\n            }\r\n        }\r\n\r\n        this.sharedNodes = nearTo[12].length;\r\n        this.poleNodes = this.vertex.length - this.sharedNodes;\r\n    }\r\n\r\n    /**\r\n     * @param m\r\n     * @param faces\r\n     * @hidden\r\n     */\r\n    public setOrder(m: number, faces: number[]) {\r\n        const adjVerts: number[] = [];\r\n        const dualFaces: number[] = [];\r\n        let face: number = <number>faces.pop();\r\n        dualFaces.push(face);\r\n        let index = this.face[face].indexOf(m);\r\n        index = (index + 2) % 3;\r\n        let v = this.face[face][index];\r\n        adjVerts.push(v);\r\n        let f = 0;\r\n        while (faces.length > 0) {\r\n            face = faces[f];\r\n            if (this.face[face].indexOf(v) > -1) {\r\n                // v is a vertex of face f\r\n                index = (this.face[face].indexOf(v) + 1) % 3;\r\n                v = this.face[face][index];\r\n                adjVerts.push(v);\r\n                dualFaces.push(face);\r\n                faces.splice(f, 1);\r\n                f = 0;\r\n            } else {\r\n                f++;\r\n            }\r\n        }\r\n        this.adjacentFaces.push(adjVerts);\r\n        return dualFaces;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    public toGoldbergPolyhedronData(): PolyhedronData {\r\n        const goldbergPolyhedronData: PolyhedronData = new PolyhedronData(\"GeoDual\", \"Goldberg\", [], []);\r\n        goldbergPolyhedronData.name = \"GD dual\";\r\n        const verticesNb: number = this.vertex.length;\r\n        const map = new Array(verticesNb);\r\n        for (let v = 0; v < verticesNb; v++) {\r\n            map[v] = [];\r\n        }\r\n        for (let f = 0; f < this.face.length; f++) {\r\n            for (let i = 0; i < 3; i++) {\r\n                map[this.face[f][i]].push(f);\r\n            }\r\n        }\r\n        let cx = 0;\r\n        let cy = 0;\r\n        let cz = 0;\r\n        let face = [];\r\n        let vertex = [];\r\n        this.adjacentFaces = [];\r\n        for (let m = 0; m < map.length; m++) {\r\n            goldbergPolyhedronData.face[m] = this.setOrder(m, map[m].concat([]));\r\n            map[m].forEach((el: number) => {\r\n                cx = 0;\r\n                cy = 0;\r\n                cz = 0;\r\n                face = this.face[el];\r\n                for (let i = 0; i < 3; i++) {\r\n                    vertex = this.vertex[face[i]];\r\n                    cx += vertex[0];\r\n                    cy += vertex[1];\r\n                    cz += vertex[2];\r\n                }\r\n                goldbergPolyhedronData.vertex[el] = [cx / 3, cy / 3, cz / 3];\r\n            });\r\n        }\r\n        return goldbergPolyhedronData;\r\n    }\r\n\r\n    //statics\r\n    /**Builds the data for a Geodesic Polyhedron from a primary triangle\r\n     * @param primTri the primary triangle\r\n     * @hidden\r\n     */\r\n\r\n    public static BuildGeodesicData(primTri: _PrimaryIsoTriangle) {\r\n        const geodesicData = new GeodesicData(\r\n            \"Geodesic-m-n\",\r\n            \"Geodesic\",\r\n            [\r\n                [0, PHI, -1],\r\n                [-PHI, 1, 0],\r\n                [-1, 0, -PHI],\r\n                [1, 0, -PHI],\r\n                [PHI, 1, 0],\r\n                [0, PHI, 1],\r\n                [-1, 0, PHI],\r\n                [-PHI, -1, 0],\r\n                [0, -PHI, -1],\r\n                [PHI, -1, 0],\r\n                [1, 0, PHI],\r\n                [0, -PHI, 1],\r\n            ],\r\n            []\r\n        );\r\n\r\n        primTri.setIndices();\r\n        primTri.calcCoeffs();\r\n        primTri.createInnerFacets();\r\n        primTri.edgeVecsABOB();\r\n        primTri.mapABOBtoOBOA();\r\n        primTri.mapABOBtoBAOA();\r\n\r\n        for (let f = 0; f < primTri.IDATA.face.length; f++) {\r\n            primTri.MapToFace(f, geodesicData);\r\n            geodesicData.innerToData(f, primTri);\r\n            if (primTri.IDATA.edgematch[f][1] === \"B\") {\r\n                geodesicData.mapABOBtoDATA(f, primTri);\r\n            }\r\n            if (primTri.IDATA.edgematch[f][1] === \"O\") {\r\n                geodesicData.mapOBOAtoDATA(f, primTri);\r\n            }\r\n            if (primTri.IDATA.edgematch[f][3] === \"A\") {\r\n                geodesicData.mapBAOAtoDATA(f, primTri);\r\n            }\r\n        }\r\n\r\n        geodesicData.orderData(primTri);\r\n        const radius = 1;\r\n        geodesicData.vertex = geodesicData.vertex.map(function (el) {\r\n            const a = el[0];\r\n            const b = el[1];\r\n            const c = el[2];\r\n            const d = Math.sqrt(a * a + b * b + c * c);\r\n            el[0] *= radius / d;\r\n            el[1] *= radius / d;\r\n            el[2] *= radius / d;\r\n            return el;\r\n        });\r\n\r\n        return geodesicData;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}