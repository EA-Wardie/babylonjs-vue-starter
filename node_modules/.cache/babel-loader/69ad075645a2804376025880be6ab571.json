{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nvar name = \"fogFragmentDeclaration\";\nvar shader = \"#ifdef FOG\\n#define FOGMODE_NONE 0.\\n#define FOGMODE_EXP 1.\\n#define FOGMODE_EXP2 2.\\n#define FOGMODE_LINEAR 3.\\n#define E 2.71828\\nuniform vec4 vFogInfos;\\nuniform vec3 vFogColor;\\nvarying vec3 vFogDistance;\\nfloat CalcFogFactor()\\n{\\nfloat fogCoeff=1.0;\\nfloat fogStart=vFogInfos.y;\\nfloat fogEnd=vFogInfos.z;\\nfloat fogDensity=vFogInfos.w;\\nfloat fogDistance=length(vFogDistance);\\nif (FOGMODE_LINEAR==vFogInfos.x)\\n{\\nfogCoeff=(fogEnd-fogDistance)/(fogEnd-fogStart);\\n}\\nelse if (FOGMODE_EXP==vFogInfos.x)\\n{\\nfogCoeff=1.0/pow(E,fogDistance*fogDensity);\\n}\\nelse if (FOGMODE_EXP2==vFogInfos.x)\\n{\\nfogCoeff=1.0/pow(E,fogDistance*fogDistance*fogDensity*fogDensity);\\n}\\nreturn clamp(fogCoeff,0.0,1.0);\\n}\\n#endif\\n\"; // Sideeffect\n\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\n\nexport var fogFragmentDeclaration = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,8BAA5B;AAEA,IAAMC,IAAI,GAAG,wBAAb;AACA,IAAMC,MAAM,GAAG,+sBAAf,C,CAgCA;;AACAF,WAAW,CAACG,oBAAZ,CAAiCF,IAAjC,IAAyCC,MAAzC;AACA;;AACA,OAAO,IAAME,sBAAsB,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAA/B","names":["ShaderStore","name","shader","IncludesShadersStore","fogFragmentDeclaration"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/fogFragmentDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"fogFragmentDeclaration\";\nconst shader = `#ifdef FOG\n#define FOGMODE_NONE 0.\n#define FOGMODE_EXP 1.\n#define FOGMODE_EXP2 2.\n#define FOGMODE_LINEAR 3.\n#define E 2.71828\nuniform vec4 vFogInfos;\runiform vec3 vFogColor;\rvarying vec3 vFogDistance;\rfloat CalcFogFactor()\r{\rfloat fogCoeff=1.0;\rfloat fogStart=vFogInfos.y;\rfloat fogEnd=vFogInfos.z;\rfloat fogDensity=vFogInfos.w;\rfloat fogDistance=length(vFogDistance);\rif (FOGMODE_LINEAR==vFogInfos.x)\r{\rfogCoeff=(fogEnd-fogDistance)/(fogEnd-fogStart);\r}\relse if (FOGMODE_EXP==vFogInfos.x)\r{\rfogCoeff=1.0/pow(E,fogDistance*fogDensity);\r}\relse if (FOGMODE_EXP2==vFogInfos.x)\r{\rfogCoeff=1.0/pow(E,fogDistance*fogDistance*fogDensity*fogDensity);\r}\rreturn clamp(fogCoeff,0.0,1.0);\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const fogFragmentDeclaration = { name, shader };\n"]},"metadata":{},"sourceType":"module"}