{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Quaternion } from \"../../Maths/math.vector.js\";\n/**\n * A generic trigger-only motion controller for WebXR\n */\n\nvar WebXRGenericTriggerMotionController =\n/** @class */\nfunction (_super) {\n  __extends(WebXRGenericTriggerMotionController, _super);\n\n  function WebXRGenericTriggerMotionController(scene, gamepadObject, handedness) {\n    var _this = _super.call(this, scene, GenericTriggerLayout[handedness], gamepadObject, handedness) || this;\n\n    _this.profileId = WebXRGenericTriggerMotionController.ProfileId;\n    return _this;\n  }\n\n  WebXRGenericTriggerMotionController.prototype._getFilenameAndPath = function () {\n    return {\n      filename: \"generic.babylon\",\n      path: \"https://controllers.babylonjs.com/generic/\"\n    };\n  };\n\n  WebXRGenericTriggerMotionController.prototype._getModelLoadingConstraints = function () {\n    return true;\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  WebXRGenericTriggerMotionController.prototype._processLoadedModel = function (meshes) {// nothing to do\n  };\n\n  WebXRGenericTriggerMotionController.prototype._setRootMesh = function (meshes) {\n    var _this = this;\n\n    this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n    meshes.forEach(function (mesh) {\n      mesh.isPickable = false;\n\n      if (!mesh.parent) {\n        mesh.setParent(_this.rootMesh);\n      }\n    });\n    this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n  };\n\n  WebXRGenericTriggerMotionController.prototype._updateModel = function () {// no-op\n  };\n  /**\n   * Static version of the profile id of this controller\n   */\n\n\n  WebXRGenericTriggerMotionController.ProfileId = \"generic-trigger\";\n  return WebXRGenericTriggerMotionController;\n}(WebXRAbstractMotionController);\n\nexport { WebXRGenericTriggerMotionController }; // https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/generic/generic-trigger-touchpad-thumbstick.json\n\nvar GenericTriggerLayout = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-left\",\n    assetPath: \"left.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-right\",\n    assetPath: \"right.glb\"\n  },\n  none: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-none\",\n    assetPath: \"none.glb\"\n  }\n};","map":{"version":3,"mappings":";;;;AACA,SAASA,6BAAT,QAA8C,oCAA9C;AAGA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AAEA;;;;AAGA;AAAA;AAAA;AAAyDC;;AAQrD,+CAAYC,KAAZ,EAA0BC,aAA1B,EAAyEC,UAAzE,EAA+G;AAA/G,gBACIC,kBAAMH,KAAN,EAAaI,oBAAoB,CAACF,UAAD,CAAjC,EAA+CD,aAA/C,EAA8DC,UAA9D,KAAyE,IAD7E;;AAFOG,sBAAYC,mCAAmC,CAACC,SAAhD;;AAIN;;AAESD,sEAAV;AACI,WAAO;AACHE,cAAQ,EAAE,iBADP;AAEHC,UAAI,EAAE;AAFH,KAAP;AAIH,GALS;;AAOAH,8EAAV;AACI,WAAO,IAAP;AACH,GAFS,CAnBd,CAuBI;;;AACUA,sEAAV,UAA8BI,MAA9B,EAAoD,CAChD;AACH,GAFS;;AAIAJ,+DAAV,UAAuBI,MAAvB,EAA6C;AAA7C;;AACI,SAAKC,QAAL,GAAgB,IAAId,IAAJ,CAAS,KAAKe,SAAL,GAAiB,GAAjB,GAAuB,KAAKV,UAArC,EAAiD,KAAKF,KAAtD,CAAhB;AAEAU,UAAM,CAACG,OAAP,CAAe,UAACC,IAAD,EAAK;AAChBA,UAAI,CAACC,UAAL,GAAkB,KAAlB;;AACA,UAAI,CAACD,IAAI,CAACE,MAAV,EAAkB;AACdF,YAAI,CAACG,SAAL,CAAeZ,KAAI,CAACM,QAApB;AACH;AACJ,KALD;AAOA,SAAKA,QAAL,CAAcO,kBAAd,GAAmCpB,UAAU,CAACqB,eAAX,CAA2B,CAA3B,EAA8BC,IAAI,CAACC,EAAnC,EAAuC,CAAvC,CAAnC;AACH,GAXS;;AAaAf,+DAAV,aACI;AACH,GAFS;AAxCV;;;;;AAGcA,kDAAY,iBAAZ;AAwClB;AAAC,CA5CD,CAAyDV,6BAAzD;;SAAaU,sC,CA8Cb;;AACA,IAAMF,oBAAoB,GAA+B;AACrDkB,MAAI,EAAE;AACFC,qBAAiB,EAAE,qBADjB;AAEFC,cAAU,EAAE;AACR;AACA,6BAAuB;AACnBC,YAAI,EAAE,SADa;AAEnBC,sBAAc,EAAE;AACZC,gBAAM,EAAE;AADI,SAFG;AAKnBC,oBAAY,EAAE,qBALK;AAMnBC,uBAAe,EAAE;AANE;AAFf,KAFV;AAaFC,kBAAc,EAAE,aAbd;AAcFF,gBAAY,EAAE,sBAdZ;AAeFG,aAAS,EAAE;AAfT,GAD+C;AAkBrDC,OAAK,EAAE;AACHT,qBAAiB,EAAE,qBADhB;AAEHC,cAAU,EAAE;AACR;AACA,6BAAuB;AACnBC,YAAI,EAAE,SADa;AAEnBC,sBAAc,EAAE;AACZC,gBAAM,EAAE;AADI,SAFG;AAKnBC,oBAAY,EAAE,qBALK;AAMnBC,uBAAe,EAAE;AANE;AAFf,KAFT;AAaHC,kBAAc,EAAE,aAbb;AAcHF,gBAAY,EAAE,uBAdX;AAeHG,aAAS,EAAE;AAfR,GAlB8C;AAmCrDE,MAAI,EAAE;AACFV,qBAAiB,EAAE,qBADjB;AAEFC,cAAU,EAAE;AACR;AACA,6BAAuB;AACnBC,YAAI,EAAE,SADa;AAEnBC,sBAAc,EAAE;AACZC,gBAAM,EAAE;AADI,SAFG;AAKnBC,oBAAY,EAAE,qBALK;AAMnBC,uBAAe,EAAE;AANE;AAFf,KAFV;AAaFC,kBAAc,EAAE,aAbd;AAcFF,gBAAY,EAAE,sBAdZ;AAeFG,aAAS,EAAE;AAfT;AAnC+C,CAAzD","names":["WebXRAbstractMotionController","Mesh","Quaternion","__extends","scene","gamepadObject","handedness","_super","GenericTriggerLayout","_this","WebXRGenericTriggerMotionController","ProfileId","filename","path","meshes","rootMesh","profileId","forEach","mesh","isPickable","parent","setParent","rotationQuaternion","FromEulerAngles","Math","PI","left","selectComponentId","components","type","gamepadIndices","button","rootNodeName","visualResponses","gamepadMapping","assetPath","right","none"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/XR/motionController/webXRGenericMotionController.ts"],"sourcesContent":["import type { IMinimalMotionControllerObject, MotionControllerHandedness, IMotionControllerLayoutMap } from \"./webXRAbstractMotionController\";\r\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\r\nimport type { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport type { Scene } from \"../../scene\";\r\nimport { Mesh } from \"../../Meshes/mesh\";\r\nimport { Quaternion } from \"../../Maths/math.vector\";\r\n\r\n/**\r\n * A generic trigger-only motion controller for WebXR\r\n */\r\nexport class WebXRGenericTriggerMotionController extends WebXRAbstractMotionController {\r\n    /**\r\n     * Static version of the profile id of this controller\r\n     */\r\n    public static ProfileId = \"generic-trigger\";\r\n\r\n    public profileId = WebXRGenericTriggerMotionController.ProfileId;\r\n\r\n    constructor(scene: Scene, gamepadObject: IMinimalMotionControllerObject, handedness: MotionControllerHandedness) {\r\n        super(scene, GenericTriggerLayout[handedness], gamepadObject, handedness);\r\n    }\r\n\r\n    protected _getFilenameAndPath(): { filename: string; path: string } {\r\n        return {\r\n            filename: \"generic.babylon\",\r\n            path: \"https://controllers.babylonjs.com/generic/\",\r\n        };\r\n    }\r\n\r\n    protected _getModelLoadingConstraints(): boolean {\r\n        return true;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected _processLoadedModel(meshes: AbstractMesh[]): void {\r\n        // nothing to do\r\n    }\r\n\r\n    protected _setRootMesh(meshes: AbstractMesh[]): void {\r\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\r\n\r\n        meshes.forEach((mesh) => {\r\n            mesh.isPickable = false;\r\n            if (!mesh.parent) {\r\n                mesh.setParent(this.rootMesh);\r\n            }\r\n        });\r\n\r\n        this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\r\n    }\r\n\r\n    protected _updateModel(): void {\r\n        // no-op\r\n    }\r\n}\r\n\r\n// https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/generic/generic-trigger-touchpad-thumbstick.json\r\nconst GenericTriggerLayout: IMotionControllerLayoutMap = {\r\n    left: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-trigger-left\",\r\n        assetPath: \"left.glb\",\r\n    },\r\n    right: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-trigger-right\",\r\n        assetPath: \"right.glb\",\r\n    },\r\n    none: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-trigger-none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}