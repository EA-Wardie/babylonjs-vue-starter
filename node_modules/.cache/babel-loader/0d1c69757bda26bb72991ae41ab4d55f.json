{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nimport \"./ShadersInclude/imageProcessingDeclaration.js\";\nimport \"./ShadersInclude/helperFunctions.js\";\nimport \"./ShadersInclude/imageProcessingFunctions.js\";\nvar name = \"imageProcessingPixelShader\";\nvar shader = \"varying vec2 vUV;\\nuniform sampler2D textureSampler;\\n#include<imageProcessingDeclaration>\\n#include<helperFunctions>\\n#include<imageProcessingFunctions>\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void)\\n{\\nvec4 result=texture2D(textureSampler,vUV);\\n#ifdef IMAGEPROCESSING\\n#ifndef FROMLINEARSPACE\\nresult.rgb=toLinearSpace(result.rgb);\\n#endif\\nresult=applyImageProcessing(result);\\n#else\\n#ifdef FROMLINEARSPACE\\nresult=applyImageProcessing(result);\\n#endif\\n#endif\\ngl_FragColor=result;\\n}\"; // Sideeffect\n\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\n\nexport var imageProcessingPixelShader = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAO,gDAAP;AACA,OAAO,qCAAP;AACA,OAAO,8CAAP;AAEA,IAAMC,IAAI,GAAG,4BAAb;AACA,IAAMC,MAAM,GAAG,ofAAf,C,CAqBA;;AACAF,WAAW,CAACG,YAAZ,CAAyBF,IAAzB,IAAiCC,MAAjC;AACA;;AACA,OAAO,IAAME,0BAA0B,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAAnC","names":["ShaderStore","name","shader","ShadersStore","imageProcessingPixelShader"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Shaders/imageProcessing.fragment.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/imageProcessingDeclaration\";\nimport \"./ShadersInclude/helperFunctions\";\nimport \"./ShadersInclude/imageProcessingFunctions\";\n\nconst name = \"imageProcessingPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\r#include<imageProcessingDeclaration>\n#include<helperFunctions>\n#include<imageProcessingFunctions>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rvec4 result=texture2D(textureSampler,vUV);\r#ifdef IMAGEPROCESSING\n#ifndef FROMLINEARSPACE\nresult.rgb=toLinearSpace(result.rgb);\r#endif\nresult=applyImageProcessing(result);\r#else\n#ifdef FROMLINEARSPACE\nresult=applyImageProcessing(result);\r#endif\n#endif\ngl_FragColor=result;\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport const imageProcessingPixelShader = { name, shader };\n"]},"metadata":{},"sourceType":"module"}