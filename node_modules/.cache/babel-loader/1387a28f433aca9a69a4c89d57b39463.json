{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { Scene } from \"../scene.js\";\nimport { SceneComponentConstants } from \"../sceneComponent.js\";\nimport { GeometryBufferRenderer } from \"./geometryBufferRenderer.js\";\nObject.defineProperty(Scene.prototype, \"geometryBufferRenderer\", {\n  get: function get() {\n    return this._geometryBufferRenderer;\n  },\n  set: function set(value) {\n    if (value && value.isSupported) {\n      this._geometryBufferRenderer = value;\n    }\n  },\n  enumerable: true,\n  configurable: true\n});\n\nScene.prototype.enableGeometryBufferRenderer = function (ratio) {\n  if (ratio === void 0) {\n    ratio = 1;\n  }\n\n  if (this._geometryBufferRenderer) {\n    return this._geometryBufferRenderer;\n  }\n\n  this._geometryBufferRenderer = new GeometryBufferRenderer(this, ratio);\n\n  if (!this._geometryBufferRenderer.isSupported) {\n    this._geometryBufferRenderer = null;\n  }\n\n  return this._geometryBufferRenderer;\n};\n\nScene.prototype.disableGeometryBufferRenderer = function () {\n  if (!this._geometryBufferRenderer) {\n    return;\n  }\n\n  this._geometryBufferRenderer.dispose();\n\n  this._geometryBufferRenderer = null;\n};\n/**\n * Defines the Geometry Buffer scene component responsible to manage a G-Buffer useful\n * in several rendering techniques.\n */\n\n\nvar GeometryBufferRendererSceneComponent =\n/** @class */\nfunction () {\n  /**\n   * Creates a new instance of the component for the given scene\n   * @param scene Defines the scene to register the component in\n   */\n  function GeometryBufferRendererSceneComponent(scene) {\n    /**\n     * The component name helpful to identify the component in the list of scene components.\n     */\n    this.name = SceneComponentConstants.NAME_GEOMETRYBUFFERRENDERER;\n    this.scene = scene;\n  }\n  /**\n   * Registers the component in a given scene\n   */\n\n\n  GeometryBufferRendererSceneComponent.prototype.register = function () {\n    this.scene._gatherRenderTargetsStage.registerStep(SceneComponentConstants.STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER, this, this._gatherRenderTargets);\n  };\n  /**\n   * Rebuilds the elements related to this component in case of\n   * context lost for instance.\n   */\n\n\n  GeometryBufferRendererSceneComponent.prototype.rebuild = function () {// Nothing to do for this component\n  };\n  /**\n   * Disposes the component and the associated resources\n   */\n\n\n  GeometryBufferRendererSceneComponent.prototype.dispose = function () {// Nothing to do for this component\n  };\n\n  GeometryBufferRendererSceneComponent.prototype._gatherRenderTargets = function (renderTargets) {\n    if (this.scene._geometryBufferRenderer) {\n      renderTargets.push(this.scene._geometryBufferRenderer.getGBuffer());\n    }\n  };\n\n  return GeometryBufferRendererSceneComponent;\n}();\n\nexport { GeometryBufferRendererSceneComponent };\n\nGeometryBufferRenderer._SceneComponentInitialization = function (scene) {\n  // Register the G Buffer component to the scene.\n  var component = scene._getComponent(SceneComponentConstants.NAME_GEOMETRYBUFFERRENDERER);\n\n  if (!component) {\n    component = new GeometryBufferRendererSceneComponent(scene);\n\n    scene._addComponent(component);\n  }\n};","map":{"version":3,"mappings":";;AACA,SAASA,KAAT,QAAsB,aAAtB;AAEA,SAASC,uBAAT,QAAwC,sBAAxC;AAGA,SAASC,sBAAT,QAAuC,6BAAvC;AA0BAC,MAAM,CAACC,cAAP,CAAsBJ,KAAK,CAACK,SAA5B,EAAuC,wBAAvC,EAAiE;AAC7DC,KAAG,EAAE;AACD,WAAO,KAAKC,uBAAZ;AACH,GAH4D;AAI7DC,KAAG,EAAE,aAAuBC,KAAvB,EAA8D;AAC/D,QAAIA,KAAK,IAAIA,KAAK,CAACC,WAAnB,EAAgC;AAC5B,WAAKH,uBAAL,GAA+BE,KAA/B;AACH;AACJ,GAR4D;AAS7DE,YAAU,EAAE,IATiD;AAU7DC,cAAY,EAAE;AAV+C,CAAjE;;AAaAZ,KAAK,CAACK,SAAN,CAAgBQ,4BAAhB,GAA+C,UAAUC,KAAV,EAA2B;AAAjB;AAAAA;AAAiB;;AACtE,MAAI,KAAKP,uBAAT,EAAkC;AAC9B,WAAO,KAAKA,uBAAZ;AACH;;AAED,OAAKA,uBAAL,GAA+B,IAAIL,sBAAJ,CAA2B,IAA3B,EAAiCY,KAAjC,CAA/B;;AACA,MAAI,CAAC,KAAKP,uBAAL,CAA6BG,WAAlC,EAA+C;AAC3C,SAAKH,uBAAL,GAA+B,IAA/B;AACH;;AAED,SAAO,KAAKA,uBAAZ;AACH,CAXD;;AAaAP,KAAK,CAACK,SAAN,CAAgBU,6BAAhB,GAAgD;AAC5C,MAAI,CAAC,KAAKR,uBAAV,EAAmC;AAC/B;AACH;;AAED,OAAKA,uBAAL,CAA6BS,OAA7B;;AACA,OAAKT,uBAAL,GAA+B,IAA/B;AACH,CAPD;AASA;;;;;;AAIA;AAAA;AAAA;AAWI;;;;AAIA,gDAAYU,KAAZ,EAAwB;AAdxB;;;AAGgB,gBAAOhB,uBAAuB,CAACiB,2BAA/B;AAYZ,SAAKD,KAAL,GAAaA,KAAb;AACH;AAED;;;;;AAGOE,4DAAP;AACI,SAAKF,KAAL,CAAWG,yBAAX,CAAqCC,YAArC,CAAkDpB,uBAAuB,CAACqB,+CAA1E,EAA2H,IAA3H,EAAiI,KAAKC,oBAAtI;AACH,GAFM;AAIP;;;;;;AAIOJ,2DAAP,aACI;AACH,GAFM;AAIP;;;;;AAGOA,2DAAP,aACI;AACH,GAFM;;AAICA,wEAAR,UAA6BK,aAA7B,EAAsF;AAClF,QAAI,KAAKP,KAAL,CAAWV,uBAAf,EAAwC;AACpCiB,mBAAa,CAACC,IAAd,CAAmB,KAAKR,KAAL,CAAWV,uBAAX,CAAmCmB,UAAnC,EAAnB;AACH;AACJ,GAJO;;AAKZ;AAAC,CA9CD;;;;AAgDAxB,sBAAsB,CAACyB,6BAAvB,GAAuD,UAACV,KAAD,EAAa;AAChE;AACA,MAAIW,SAAS,GAAGX,KAAK,CAACY,aAAN,CAAoB5B,uBAAuB,CAACiB,2BAA5C,CAAhB;;AACA,MAAI,CAACU,SAAL,EAAgB;AACZA,aAAS,GAAG,IAAIT,oCAAJ,CAAyCF,KAAzC,CAAZ;;AACAA,SAAK,CAACa,aAAN,CAAoBF,SAApB;AACH;AACJ,CAPD","names":["Scene","SceneComponentConstants","GeometryBufferRenderer","Object","defineProperty","prototype","get","_geometryBufferRenderer","set","value","isSupported","enumerable","configurable","enableGeometryBufferRenderer","ratio","disableGeometryBufferRenderer","dispose","scene","NAME_GEOMETRYBUFFERRENDERER","GeometryBufferRendererSceneComponent","_gatherRenderTargetsStage","registerStep","STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER","_gatherRenderTargets","renderTargets","push","getGBuffer","_SceneComponentInitialization","component","_getComponent","_addComponent"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Rendering/geometryBufferRendererSceneComponent.ts"],"sourcesContent":["import type { Nullable } from \"../types\";\r\nimport { Scene } from \"../scene\";\r\nimport type { ISceneComponent } from \"../sceneComponent\";\r\nimport { SceneComponentConstants } from \"../sceneComponent\";\r\nimport type { SmartArrayNoDuplicate } from \"../Misc/smartArray\";\r\nimport type { RenderTargetTexture } from \"../Materials/Textures/renderTargetTexture\";\r\nimport { GeometryBufferRenderer } from \"./geometryBufferRenderer\";\r\n\r\ndeclare module \"../scene\" {\r\n    export interface Scene {\r\n        /** @hidden (Backing field) */\r\n        _geometryBufferRenderer: Nullable<GeometryBufferRenderer>;\r\n\r\n        /**\r\n         * Gets or Sets the current geometry buffer associated to the scene.\r\n         */\r\n        geometryBufferRenderer: Nullable<GeometryBufferRenderer>;\r\n\r\n        /**\r\n         * Enables a GeometryBufferRender and associates it with the scene\r\n         * @param ratio defines the scaling ratio to apply to the renderer (1 by default which means same resolution)\r\n         * @returns the GeometryBufferRenderer\r\n         */\r\n        enableGeometryBufferRenderer(ratio?: number): Nullable<GeometryBufferRenderer>;\r\n\r\n        /**\r\n         * Disables the GeometryBufferRender associated with the scene\r\n         */\r\n        disableGeometryBufferRenderer(): void;\r\n    }\r\n}\r\n\r\nObject.defineProperty(Scene.prototype, \"geometryBufferRenderer\", {\r\n    get: function (this: Scene) {\r\n        return this._geometryBufferRenderer;\r\n    },\r\n    set: function (this: Scene, value: Nullable<GeometryBufferRenderer>) {\r\n        if (value && value.isSupported) {\r\n            this._geometryBufferRenderer = value;\r\n        }\r\n    },\r\n    enumerable: true,\r\n    configurable: true,\r\n});\r\n\r\nScene.prototype.enableGeometryBufferRenderer = function (ratio: number = 1): Nullable<GeometryBufferRenderer> {\r\n    if (this._geometryBufferRenderer) {\r\n        return this._geometryBufferRenderer;\r\n    }\r\n\r\n    this._geometryBufferRenderer = new GeometryBufferRenderer(this, ratio);\r\n    if (!this._geometryBufferRenderer.isSupported) {\r\n        this._geometryBufferRenderer = null;\r\n    }\r\n\r\n    return this._geometryBufferRenderer;\r\n};\r\n\r\nScene.prototype.disableGeometryBufferRenderer = function (): void {\r\n    if (!this._geometryBufferRenderer) {\r\n        return;\r\n    }\r\n\r\n    this._geometryBufferRenderer.dispose();\r\n    this._geometryBufferRenderer = null;\r\n};\r\n\r\n/**\r\n * Defines the Geometry Buffer scene component responsible to manage a G-Buffer useful\r\n * in several rendering techniques.\r\n */\r\nexport class GeometryBufferRendererSceneComponent implements ISceneComponent {\r\n    /**\r\n     * The component name helpful to identify the component in the list of scene components.\r\n     */\r\n    public readonly name = SceneComponentConstants.NAME_GEOMETRYBUFFERRENDERER;\r\n\r\n    /**\r\n     * The scene the component belongs to.\r\n     */\r\n    public scene: Scene;\r\n\r\n    /**\r\n     * Creates a new instance of the component for the given scene\r\n     * @param scene Defines the scene to register the component in\r\n     */\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    /**\r\n     * Registers the component in a given scene\r\n     */\r\n    public register(): void {\r\n        this.scene._gatherRenderTargetsStage.registerStep(SceneComponentConstants.STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER, this, this._gatherRenderTargets);\r\n    }\r\n\r\n    /**\r\n     * Rebuilds the elements related to this component in case of\r\n     * context lost for instance.\r\n     */\r\n    public rebuild(): void {\r\n        // Nothing to do for this component\r\n    }\r\n\r\n    /**\r\n     * Disposes the component and the associated resources\r\n     */\r\n    public dispose(): void {\r\n        // Nothing to do for this component\r\n    }\r\n\r\n    private _gatherRenderTargets(renderTargets: SmartArrayNoDuplicate<RenderTargetTexture>): void {\r\n        if (this.scene._geometryBufferRenderer) {\r\n            renderTargets.push(this.scene._geometryBufferRenderer.getGBuffer());\r\n        }\r\n    }\r\n}\r\n\r\nGeometryBufferRenderer._SceneComponentInitialization = (scene: Scene) => {\r\n    // Register the G Buffer component to the scene.\r\n    let component = scene._getComponent(SceneComponentConstants.NAME_GEOMETRYBUFFERRENDERER) as GeometryBufferRendererSceneComponent;\r\n    if (!component) {\r\n        component = new GeometryBufferRendererSceneComponent(scene);\r\n        scene._addComponent(component);\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}