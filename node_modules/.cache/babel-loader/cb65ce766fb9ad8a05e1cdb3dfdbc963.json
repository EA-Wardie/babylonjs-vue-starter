{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\n\n/** @hidden */\nvar WebGPUSnapshotRendering =\n/** @class */\nfunction () {\n  function WebGPUSnapshotRendering(engine, renderingMode, bundleList, bundleListRenderTarget) {\n    this._record = false;\n    this._play = false;\n    this._mainPassBundleList = [];\n    this._enabled = false;\n    this._engine = engine;\n    this._mode = renderingMode;\n    this._bundleList = bundleList;\n    this._bundleListRenderTarget = bundleListRenderTarget;\n  }\n\n  Object.defineProperty(WebGPUSnapshotRendering.prototype, \"enabled\", {\n    get: function get() {\n      return this._enabled;\n    },\n    set: function set(activate) {\n      this._mainPassBundleList.length = 0;\n      this._record = this._enabled = activate;\n      this._play = false;\n\n      if (activate) {\n        this._modeSaved = this._mode;\n        this._mode = 0; // need to reset to standard for the recording pass to avoid some code being bypassed\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(WebGPUSnapshotRendering.prototype, \"play\", {\n    get: function get() {\n      return this._play;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(WebGPUSnapshotRendering.prototype, \"record\", {\n    get: function get() {\n      return this._record;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(WebGPUSnapshotRendering.prototype, \"mode\", {\n    get: function get() {\n      return this._mode;\n    },\n    set: function set(mode) {\n      if (this._record) {\n        this._modeSaved = mode;\n      } else {\n        this._mode = mode;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WebGPUSnapshotRendering.prototype.endMainRenderPass = function () {\n    if (this._record) {\n      this._mainPassBundleList.push(this._bundleList.clone());\n    }\n  };\n\n  WebGPUSnapshotRendering.prototype.endRenderTargetPass = function (currentRenderPass, gpuWrapper) {\n    var _a, _b, _c, _d;\n\n    if (this._play) {\n      (_b = (_a = gpuWrapper._bundleLists) === null || _a === void 0 ? void 0 : _a[gpuWrapper._currentLayer]) === null || _b === void 0 ? void 0 : _b.run(currentRenderPass);\n\n      if (this._mode === 1) {\n        this._engine._reportDrawCall((_d = (_c = gpuWrapper._bundleLists) === null || _c === void 0 ? void 0 : _c[gpuWrapper._currentLayer]) === null || _d === void 0 ? void 0 : _d.numDrawCalls);\n      }\n    } else if (this._record) {\n      if (!gpuWrapper._bundleLists) {\n        gpuWrapper._bundleLists = [];\n      }\n\n      gpuWrapper._bundleLists[gpuWrapper._currentLayer] = this._bundleListRenderTarget.clone();\n\n      gpuWrapper._bundleLists[gpuWrapper._currentLayer].run(currentRenderPass);\n\n      this._bundleListRenderTarget.reset();\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  WebGPUSnapshotRendering.prototype.endFrame = function (mainRenderPass) {\n    if (this._record) {\n      this._mainPassBundleList.push(this._bundleList.clone());\n\n      this._record = false;\n      this._play = true;\n      this._mode = this._modeSaved;\n    }\n\n    if (mainRenderPass !== null && this._play) {\n      for (var i = 0; i < this._mainPassBundleList.length; ++i) {\n        this._mainPassBundleList[i].run(mainRenderPass);\n\n        if (this._mode === 1) {\n          this._engine._reportDrawCall(this._mainPassBundleList[i].numDrawCalls);\n        }\n      }\n    }\n  };\n\n  WebGPUSnapshotRendering.prototype.reset = function () {\n    this.enabled = false;\n    this.enabled = true;\n  };\n\n  return WebGPUSnapshotRendering;\n}();\n\nexport { WebGPUSnapshotRendering };","map":{"version":3,"mappings":"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","names":["engine","renderingMode","bundleList","bundleListRenderTarget","_engine","_mode","_bundleList","_bundleListRenderTarget","Object","WebGPUSnapshotRendering","_enabled","activate","_mainPassBundleList","length","_record","_play","_modeSaved","mode","push","clone","currentRenderPass","gpuWrapper","_bundleLists","_a","_currentLayer","_b","run","_reportDrawCall","_c","_d","numDrawCalls","reset","mainRenderPass","i","enabled"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGPU/webgpuSnapshotRendering.ts"],"sourcesContent":["import type { Nullable } from \"../../types\";\r\nimport { Constants } from \"../constants\";\r\nimport type { WebGPUEngine } from \"../webgpuEngine\";\r\nimport type { WebGPUBundleList } from \"./webgpuBundleList\";\r\nimport type { WebGPUHardwareTexture } from \"./webgpuHardwareTexture\";\r\n\r\n/** @hidden */\r\nexport class WebGPUSnapshotRendering {\r\n    private _engine: WebGPUEngine;\r\n\r\n    private _record = false;\r\n    private _play = false;\r\n    private _mainPassBundleList: WebGPUBundleList[] = [];\r\n    private _modeSaved: number;\r\n    private _bundleList: WebGPUBundleList;\r\n    private _bundleListRenderTarget: WebGPUBundleList;\r\n\r\n    private _enabled = false;\r\n    private _mode: number;\r\n\r\n    constructor(engine: WebGPUEngine, renderingMode: number, bundleList: WebGPUBundleList, bundleListRenderTarget: WebGPUBundleList) {\r\n        this._engine = engine;\r\n        this._mode = renderingMode;\r\n        this._bundleList = bundleList;\r\n        this._bundleListRenderTarget = bundleListRenderTarget;\r\n    }\r\n\r\n    public get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    public get play() {\r\n        return this._play;\r\n    }\r\n\r\n    public get record() {\r\n        return this._record;\r\n    }\r\n\r\n    public set enabled(activate: boolean) {\r\n        this._mainPassBundleList.length = 0;\r\n        this._record = this._enabled = activate;\r\n        this._play = false;\r\n        if (activate) {\r\n            this._modeSaved = this._mode;\r\n            this._mode = Constants.SNAPSHOTRENDERING_STANDARD; // need to reset to standard for the recording pass to avoid some code being bypassed\r\n        }\r\n    }\r\n\r\n    public get mode(): number {\r\n        return this._mode;\r\n    }\r\n\r\n    public set mode(mode: number) {\r\n        if (this._record) {\r\n            this._modeSaved = mode;\r\n        } else {\r\n            this._mode = mode;\r\n        }\r\n    }\r\n\r\n    public endMainRenderPass(): void {\r\n        if (this._record) {\r\n            this._mainPassBundleList.push(this._bundleList.clone());\r\n        }\r\n    }\r\n\r\n    public endRenderTargetPass(currentRenderPass: GPURenderPassEncoder, gpuWrapper: WebGPUHardwareTexture): boolean {\r\n        if (this._play) {\r\n            gpuWrapper._bundleLists?.[gpuWrapper._currentLayer]?.run(currentRenderPass);\r\n            if (this._mode === Constants.SNAPSHOTRENDERING_FAST) {\r\n                this._engine._reportDrawCall(gpuWrapper._bundleLists?.[gpuWrapper._currentLayer]?.numDrawCalls);\r\n            }\r\n        } else if (this._record) {\r\n            if (!gpuWrapper._bundleLists) {\r\n                gpuWrapper._bundleLists = [];\r\n            }\r\n            gpuWrapper._bundleLists[gpuWrapper._currentLayer] = this._bundleListRenderTarget.clone();\r\n            gpuWrapper._bundleLists[gpuWrapper._currentLayer].run(currentRenderPass);\r\n            this._bundleListRenderTarget.reset();\r\n        } else {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public endFrame(mainRenderPass: Nullable<GPURenderPassEncoder>): void {\r\n        if (this._record) {\r\n            this._mainPassBundleList.push(this._bundleList.clone());\r\n            this._record = false;\r\n            this._play = true;\r\n            this._mode = this._modeSaved;\r\n        }\r\n\r\n        if (mainRenderPass !== null && this._play) {\r\n            for (let i = 0; i < this._mainPassBundleList.length; ++i) {\r\n                this._mainPassBundleList[i].run(mainRenderPass);\r\n                if (this._mode === Constants.SNAPSHOTRENDERING_FAST) {\r\n                    this._engine._reportDrawCall(this._mainPassBundleList[i].numDrawCalls);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.enabled = false;\r\n        this.enabled = true;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}