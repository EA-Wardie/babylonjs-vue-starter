{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial.js\";\nimport { GLTFLoader } from \"../glTFLoader.js\";\nvar NAME = \"MSFT_minecraftMesh\";\n/** @hidden */\n\nvar MSFT_minecraftMesh =\n/** @class */\nfunction () {\n  function MSFT_minecraftMesh(loader) {\n    this.name = NAME;\n    this._loader = loader;\n    this.enabled = this._loader.isExtensionUsed(NAME);\n  }\n\n  MSFT_minecraftMesh.prototype.dispose = function () {\n    this._loader = null;\n  };\n\n  MSFT_minecraftMesh.prototype.loadMaterialPropertiesAsync = function (context, material, babylonMaterial) {\n    var _this = this;\n\n    return GLTFLoader.LoadExtraAsync(context, material, this.name, function (extraContext, extra) {\n      if (extra) {\n        if (!(babylonMaterial instanceof PBRMaterial)) {\n          throw new Error(\"\".concat(extraContext, \": Material type not supported\"));\n        }\n\n        var promise = _this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial);\n\n        if (babylonMaterial.needAlphaBlending()) {\n          babylonMaterial.forceDepthWrite = true;\n          babylonMaterial.separateCullingPass = true;\n        }\n\n        babylonMaterial.backFaceCulling = babylonMaterial.forceDepthWrite;\n        babylonMaterial.twoSidedLighting = true;\n        return promise;\n      }\n\n      return null;\n    });\n  };\n\n  return MSFT_minecraftMesh;\n}();\n\nexport { MSFT_minecraftMesh };\nGLTFLoader.RegisterExtension(NAME, function (loader) {\n  return new MSFT_minecraftMesh(loader);\n});","map":{"version":3,"mappings":";;;AAGA,SAASA,WAAT,QAAsB,8CAAtB;AAIA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,IAAMC,IAAI,GAAG,oBAAb;AAEA;;AACA;AAAA;AAAA;AAMI,8BAAYC,MAAZ,EAA8B;AALd,gBAAOD,IAAP;AAMZ,SAAKE,OAAL,GAAeD,MAAf;AACA,SAAKE,OAAL,GAAe,KAAKD,OAAL,CAAaE,eAAb,CAA6BJ,IAA7B,CAAf;AACH;;AAEMK,yCAAP;AACK,SAAKH,OAAL,GAAuB,IAAvB;AACJ,GAFM;;AAIAG,6DAAP,UAAmCC,OAAnC,EAAoDC,QAApD,EAAyEC,eAAzE,EAAkG;AAAlG;;AACI,WAAOT,UAAU,CAACU,cAAX,CAAmCH,OAAnC,EAA4CC,QAA5C,EAAsD,KAAKG,IAA3D,EAAiE,UAACC,YAAD,EAAeC,KAAf,EAAoB;AACxF,UAAIA,KAAJ,EAAW;AACP,YAAI,EAAEJ,eAAe,YAAYV,WAA7B,CAAJ,EAA+C;AAC3C,gBAAM,IAAIe,KAAJ,CAAU,UAAGF,YAAH,EAAe,+BAAf,CAAV,CAAN;AACH;;AAED,YAAMG,OAAO,GAAGC,KAAI,CAACb,OAAL,CAAac,2BAAb,CAAyCV,OAAzC,EAAkDC,QAAlD,EAA4DC,eAA5D,CAAhB;;AAEA,YAAIA,eAAe,CAACS,iBAAhB,EAAJ,EAAyC;AACrCT,yBAAe,CAACU,eAAhB,GAAkC,IAAlC;AACAV,yBAAe,CAACW,mBAAhB,GAAsC,IAAtC;AACH;;AAEDX,uBAAe,CAACY,eAAhB,GAAkCZ,eAAe,CAACU,eAAlD;AACAV,uBAAe,CAACa,gBAAhB,GAAmC,IAAnC;AAEA,eAAOP,OAAP;AACH;;AAED,aAAO,IAAP;AACH,KApBM,CAAP;AAqBH,GAtBM;;AAuBX;AAAC,CAtCD;;;AAwCAf,UAAU,CAACuB,iBAAX,CAA6BtB,IAA7B,EAAmC,UAACC,MAAD,EAAO;AAAK,aAAII,kBAAJ,CAAuBJ,MAAvB;AAA8B,CAA7E","names":["PBRMaterial","GLTFLoader","NAME","loader","_loader","enabled","isExtensionUsed","MSFT_minecraftMesh","context","material","babylonMaterial","LoadExtraAsync","name","extraContext","extra","Error","promise","_this","loadMaterialPropertiesAsync","needAlphaBlending","forceDepthWrite","separateCullingPass","backFaceCulling","twoSidedLighting","RegisterExtension"],"sourceRoot":"","sources":["../../../../../../../lts/loaders/generated/glTF/2.0/Extensions/MSFT_minecraftMesh.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Material } from \"core/Materials/material\";\r\nimport { PBRMaterial } from \"core/Materials/PBR/pbrMaterial\";\r\n\r\nimport type { IMaterial } from \"../glTFLoaderInterfaces\";\r\nimport type { IGLTFLoaderExtension } from \"../glTFLoaderExtension\";\r\nimport { GLTFLoader } from \"../glTFLoader\";\r\n\r\nconst NAME = \"MSFT_minecraftMesh\";\r\n\r\n/** @hidden */\r\nexport class MSFT_minecraftMesh implements IGLTFLoaderExtension {\r\n    public readonly name = NAME;\r\n    public enabled: boolean;\r\n\r\n    private _loader: GLTFLoader;\r\n\r\n    constructor(loader: GLTFLoader) {\r\n        this._loader = loader;\r\n        this.enabled = this._loader.isExtensionUsed(NAME);\r\n    }\r\n\r\n    public dispose() {\r\n        (this._loader as any) = null;\r\n    }\r\n\r\n    public loadMaterialPropertiesAsync(context: string, material: IMaterial, babylonMaterial: Material): Nullable<Promise<void>> {\r\n        return GLTFLoader.LoadExtraAsync<boolean>(context, material, this.name, (extraContext, extra) => {\r\n            if (extra) {\r\n                if (!(babylonMaterial instanceof PBRMaterial)) {\r\n                    throw new Error(`${extraContext}: Material type not supported`);\r\n                }\r\n\r\n                const promise = this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial);\r\n\r\n                if (babylonMaterial.needAlphaBlending()) {\r\n                    babylonMaterial.forceDepthWrite = true;\r\n                    babylonMaterial.separateCullingPass = true;\r\n                }\r\n\r\n                babylonMaterial.backFaceCulling = babylonMaterial.forceDepthWrite;\r\n                babylonMaterial.twoSidedLighting = true;\r\n\r\n                return promise;\r\n            }\r\n\r\n            return null;\r\n        });\r\n    }\r\n}\r\n\r\nGLTFLoader.RegisterExtension(NAME, (loader) => new MSFT_minecraftMesh(loader));\r\n"]},"metadata":{},"sourceType":"module"}