{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to expand a Color3/4 into 4 outputs (one for each component)\n */\n\nvar ColorSplitterBlock =\n/** @class */\nfunction (_super) {\n  __extends(ColorSplitterBlock, _super);\n  /**\n   * Create a new ColorSplitterBlock\n   * @param name defines the block name\n   */\n\n\n  function ColorSplitterBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"rgba\", NodeMaterialBlockConnectionPointTypes.Color4, true);\n\n    _this.registerInput(\"rgb \", NodeMaterialBlockConnectionPointTypes.Color3, true);\n\n    _this.registerOutput(\"rgb\", NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this.registerOutput(\"r\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"g\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"b\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"a\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.inputsAreExclusive = true;\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  ColorSplitterBlock.prototype.getClassName = function () {\n    return \"ColorSplitterBlock\";\n  };\n\n  Object.defineProperty(ColorSplitterBlock.prototype, \"rgba\", {\n    /**\n     * Gets the rgba component (input)\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"rgbIn\", {\n    /**\n     * Gets the rgb component (input)\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"rgbOut\", {\n    /**\n     * Gets the rgb component (output)\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"r\", {\n    /**\n     * Gets the r component (output)\n     */\n    get: function get() {\n      return this._outputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"g\", {\n    /**\n     * Gets the g component (output)\n     */\n    get: function get() {\n      return this._outputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"b\", {\n    /**\n     * Gets the b component (output)\n     */\n    get: function get() {\n      return this._outputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"a\", {\n    /**\n     * Gets the a component (output)\n     */\n    get: function get() {\n      return this._outputs[4];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ColorSplitterBlock.prototype._inputRename = function (name) {\n    if (name === \"rgb \") {\n      return \"rgbIn\";\n    }\n\n    return name;\n  };\n\n  ColorSplitterBlock.prototype._outputRename = function (name) {\n    if (name === \"rgb\") {\n      return \"rgbOut\";\n    }\n\n    return name;\n  };\n\n  ColorSplitterBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var input = this.rgba.isConnected ? this.rgba : this.rgbIn;\n\n    if (!input.isConnected) {\n      return;\n    }\n\n    var rgbOutput = this._outputs[0];\n    var rOutput = this._outputs[1];\n    var gOutput = this._outputs[2];\n    var bOutput = this._outputs[3];\n    var aOutput = this._outputs[4];\n\n    if (rgbOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(rgbOutput, state) + \" = \".concat(input.associatedVariableName, \".rgb;\\r\\n\");\n    }\n\n    if (rOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(rOutput, state) + \" = \".concat(input.associatedVariableName, \".r;\\r\\n\");\n    }\n\n    if (gOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(gOutput, state) + \" = \".concat(input.associatedVariableName, \".g;\\r\\n\");\n    }\n\n    if (bOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(bOutput, state) + \" = \".concat(input.associatedVariableName, \".b;\\r\\n\");\n    }\n\n    if (aOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(aOutput, state) + \" = \".concat(input.associatedVariableName, \".a;\\r\\n\");\n    }\n\n    return this;\n  };\n\n  return ColorSplitterBlock;\n}(NodeMaterialBlock);\n\nexport { ColorSplitterBlock };\nRegisterClass(\"BABYLON.ColorSplitterBlock\", ColorSplitterBlock);","map":{"version":3,"mappings":";;AAAA,SAASA,iBAAT,QAAkC,yBAAlC;AACA,SAASC,qCAAT,QAAsD,mDAAtD;AAEA,SAASC,wBAAT,QAAyC,sCAAzC;AAEA,SAASC,aAAT,QAA8B,4BAA9B;AAEA;;;;AAGA;AAAA;AAAA;AAAwCC;AACpC;;;;;;AAIA,8BAAmBC,IAAnB,EAA+B;AAA/B,gBACIC,kBAAMD,IAAN,EAAYH,wBAAwB,CAACK,OAArC,KAA6C,IADjD;;AAGIC,SAAI,CAACC,aAAL,CAAmB,MAAnB,EAA2BR,qCAAqC,CAACS,MAAjE,EAAyE,IAAzE;;AACAF,SAAI,CAACC,aAAL,CAAmB,MAAnB,EAA2BR,qCAAqC,CAACU,MAAjE,EAAyE,IAAzE;;AAEAH,SAAI,CAACI,cAAL,CAAoB,KAApB,EAA2BX,qCAAqC,CAACU,MAAjE;;AACAH,SAAI,CAACI,cAAL,CAAoB,GAApB,EAAyBX,qCAAqC,CAACY,KAA/D;;AACAL,SAAI,CAACI,cAAL,CAAoB,GAApB,EAAyBX,qCAAqC,CAACY,KAA/D;;AACAL,SAAI,CAACI,cAAL,CAAoB,GAApB,EAAyBX,qCAAqC,CAACY,KAA/D;;AACAL,SAAI,CAACI,cAAL,CAAoB,GAApB,EAAyBX,qCAAqC,CAACY,KAA/D;;AAEAL,SAAI,CAACM,kBAAL,GAA0B,IAA1B;;AACH;AAED;;;;;;AAIOC,8CAAP;AACI,WAAO,oBAAP;AACH,GAFM;;AAOPC,wBAAWD,4BAAX,EAAW,MAAX,EAAe;AAHf;;;SAGA;AACI,aAAO,KAAKE,OAAL,CAAa,CAAb,CAAP;AACH,KAFc;qBAAA;;AAAA,GAAf;AAOAD,wBAAWD,4BAAX,EAAW,OAAX,EAAgB;AAHhB;;;SAGA;AACI,aAAO,KAAKE,OAAL,CAAa,CAAb,CAAP;AACH,KAFe;qBAAA;;AAAA,GAAhB;AAOAD,wBAAWD,4BAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA;AACI,aAAO,KAAKG,QAAL,CAAc,CAAd,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAOAF,wBAAWD,4BAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA;AACI,aAAO,KAAKG,QAAL,CAAc,CAAd,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAOAF,wBAAWD,4BAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA;AACI,aAAO,KAAKG,QAAL,CAAc,CAAd,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAMAF,wBAAWD,4BAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA;AACI,aAAO,KAAKG,QAAL,CAAc,CAAd,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAMAF,wBAAWD,4BAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA;AACI,aAAO,KAAKG,QAAL,CAAc,CAAd,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;;AAIUH,8CAAV,UAAuBV,IAAvB,EAAmC;AAC/B,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,aAAO,OAAP;AACH;;AACD,WAAOA,IAAP;AACH,GALS;;AAOAU,+CAAV,UAAwBV,IAAxB,EAAoC;AAChC,QAAIA,IAAI,KAAK,KAAb,EAAoB;AAChB,aAAO,QAAP;AACH;;AACD,WAAOA,IAAP;AACH,GALS;;AAOAU,6CAAV,UAAsBI,KAAtB,EAAmD;AAC/Cb,qBAAMc,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBF,KAAlB;;AAEA,QAAMG,KAAK,GAAG,KAAKC,IAAL,CAAUC,WAAV,GAAwB,KAAKD,IAA7B,GAAoC,KAAKE,KAAvD;;AAEA,QAAI,CAACH,KAAK,CAACE,WAAX,EAAwB;AACpB;AACH;;AAED,QAAME,SAAS,GAAG,KAAKR,QAAL,CAAc,CAAd,CAAlB;AACA,QAAMS,OAAO,GAAG,KAAKT,QAAL,CAAc,CAAd,CAAhB;AACA,QAAMU,OAAO,GAAG,KAAKV,QAAL,CAAc,CAAd,CAAhB;AACA,QAAMW,OAAO,GAAG,KAAKX,QAAL,CAAc,CAAd,CAAhB;AACA,QAAMY,OAAO,GAAG,KAAKZ,QAAL,CAAc,CAAd,CAAhB;;AAEA,QAAIQ,SAAS,CAACK,YAAd,EAA4B;AACxBZ,WAAK,CAACa,iBAAN,IAA2B,KAAKC,cAAL,CAAoBP,SAApB,EAA+BP,KAA/B,IAAwC,aAAMG,KAAK,CAACY,sBAAZ,EAAkC,WAAlC,CAAnE;AACH;;AACD,QAAIP,OAAO,CAACI,YAAZ,EAA0B;AACtBZ,WAAK,CAACa,iBAAN,IAA2B,KAAKC,cAAL,CAAoBN,OAApB,EAA6BR,KAA7B,IAAsC,aAAMG,KAAK,CAACY,sBAAZ,EAAkC,SAAlC,CAAjE;AACH;;AACD,QAAIN,OAAO,CAACG,YAAZ,EAA0B;AACtBZ,WAAK,CAACa,iBAAN,IAA2B,KAAKC,cAAL,CAAoBL,OAApB,EAA6BT,KAA7B,IAAsC,aAAMG,KAAK,CAACY,sBAAZ,EAAkC,SAAlC,CAAjE;AACH;;AACD,QAAIL,OAAO,CAACE,YAAZ,EAA0B;AACtBZ,WAAK,CAACa,iBAAN,IAA2B,KAAKC,cAAL,CAAoBJ,OAApB,EAA6BV,KAA7B,IAAsC,aAAMG,KAAK,CAACY,sBAAZ,EAAkC,SAAlC,CAAjE;AACH;;AACD,QAAIJ,OAAO,CAACC,YAAZ,EAA0B;AACtBZ,WAAK,CAACa,iBAAN,IAA2B,KAAKC,cAAL,CAAoBH,OAApB,EAA6BX,KAA7B,IAAsC,aAAMG,KAAK,CAACY,sBAAZ,EAAkC,SAAlC,CAAjE;AACH;;AAED,WAAO,IAAP;AACH,GAhCS;;AAiCd;AAAC,CA1HD,CAAwClC,iBAAxC;;;AA4HAG,aAAa,CAAC,4BAAD,EAA+BY,kBAA/B,CAAb","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Neutral","_this","registerInput","Color4","Color3","registerOutput","Float","inputsAreExclusive","ColorSplitterBlock","Object","_inputs","_outputs","state","_buildBlock","call","input","rgba","isConnected","rgbIn","rgbOutput","rOutput","gOutput","bOutput","aOutput","hasEndpoints","compilationString","_declareOutput","associatedVariableName"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/colorSplitterBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n\r\n/**\r\n * Block used to expand a Color3/4 into 4 outputs (one for each component)\r\n */\r\nexport class ColorSplitterBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Create a new ColorSplitterBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"rgba\", NodeMaterialBlockConnectionPointTypes.Color4, true);\r\n        this.registerInput(\"rgb \", NodeMaterialBlockConnectionPointTypes.Color3, true);\r\n\r\n        this.registerOutput(\"rgb\", NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this.registerOutput(\"r\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"g\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"b\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"a\", NodeMaterialBlockConnectionPointTypes.Float);\r\n\r\n        this.inputsAreExclusive = true;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"ColorSplitterBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the rgba component (input)\r\n     */\r\n    public get rgba(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the rgb component (input)\r\n     */\r\n    public get rgbIn(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the rgb component (output)\r\n     */\r\n    public get rgbOut(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the r component (output)\r\n     */\r\n    public get r(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the g component (output)\r\n     */\r\n    public get g(): NodeMaterialConnectionPoint {\r\n        return this._outputs[2];\r\n    }\r\n    /**\r\n     * Gets the b component (output)\r\n     */\r\n    public get b(): NodeMaterialConnectionPoint {\r\n        return this._outputs[3];\r\n    }\r\n    /**\r\n     * Gets the a component (output)\r\n     */\r\n    public get a(): NodeMaterialConnectionPoint {\r\n        return this._outputs[4];\r\n    }\r\n\r\n    protected _inputRename(name: string) {\r\n        if (name === \"rgb \") {\r\n            return \"rgbIn\";\r\n        }\r\n        return name;\r\n    }\r\n\r\n    protected _outputRename(name: string) {\r\n        if (name === \"rgb\") {\r\n            return \"rgbOut\";\r\n        }\r\n        return name;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const input = this.rgba.isConnected ? this.rgba : this.rgbIn;\r\n\r\n        if (!input.isConnected) {\r\n            return;\r\n        }\r\n\r\n        const rgbOutput = this._outputs[0];\r\n        const rOutput = this._outputs[1];\r\n        const gOutput = this._outputs[2];\r\n        const bOutput = this._outputs[3];\r\n        const aOutput = this._outputs[4];\r\n\r\n        if (rgbOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(rgbOutput, state) + ` = ${input.associatedVariableName}.rgb;\\r\\n`;\r\n        }\r\n        if (rOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(rOutput, state) + ` = ${input.associatedVariableName}.r;\\r\\n`;\r\n        }\r\n        if (gOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(gOutput, state) + ` = ${input.associatedVariableName}.g;\\r\\n`;\r\n        }\r\n        if (bOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(bOutput, state) + ` = ${input.associatedVariableName}.b;\\r\\n`;\r\n        }\r\n        if (aOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(aOutput, state) + ` = ${input.associatedVariableName}.a;\\r\\n`;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.ColorSplitterBlock\", ColorSplitterBlock);\r\n"]},"metadata":{},"sourceType":"module"}