{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used to get the derivative value on x and y of a given input\n */\n\nvar DerivativeBlock =\n/** @class */\nfunction (_super) {\n  __extends(DerivativeBlock, _super);\n  /**\n   * Create a new DerivativeBlock\n   * @param name defines the block name\n   */\n\n\n  function DerivativeBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n\n    _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect, false);\n\n    _this.registerOutput(\"dx\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this.registerOutput(\"dy\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n    _this._outputs[1]._typeConnectionSource = _this._inputs[0];\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  DerivativeBlock.prototype.getClassName = function () {\n    return \"DerivativeBlock\";\n  };\n\n  Object.defineProperty(DerivativeBlock.prototype, \"input\", {\n    /**\n     * Gets the input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DerivativeBlock.prototype, \"dx\", {\n    /**\n     * Gets the derivative output on x\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DerivativeBlock.prototype, \"dy\", {\n    /**\n     * Gets the derivative output on y\n     */\n    get: function get() {\n      return this._outputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DerivativeBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var dx = this._outputs[0];\n    var dy = this._outputs[1];\n\n    state._emitExtension(\"derivatives\", \"#extension GL_OES_standard_derivatives : enable\");\n\n    if (dx.hasEndpoints) {\n      state.compilationString += this._declareOutput(dx, state) + \" = dFdx(\".concat(this.input.associatedVariableName, \");\\r\\n\");\n    }\n\n    if (dy.hasEndpoints) {\n      state.compilationString += this._declareOutput(dy, state) + \" = dFdy(\".concat(this.input.associatedVariableName, \");\\r\\n\");\n    }\n\n    return this;\n  };\n\n  return DerivativeBlock;\n}(NodeMaterialBlock);\n\nexport { DerivativeBlock };\nRegisterClass(\"BABYLON.DerivativeBlock\", DerivativeBlock);","map":{"version":3,"mappings":";;AAAA,SAASA,iBAAT,QAAkC,4BAAlC;AACA,SAASC,qCAAT,QAAsD,sDAAtD;AAEA,SAASC,wBAAT,QAAyC,yCAAzC;AAEA,SAASC,aAAT,QAA8B,+BAA9B;AAEA;;;;AAGA;AAAA;AAAA;AAAqCC;AACjC;;;;;;AAIA,2BAAmBC,IAAnB,EAA+B;AAA/B,gBACIC,kBAAMD,IAAN,EAAYH,wBAAwB,CAACK,QAArC,KAA8C,IADlD;;AAGIC,SAAI,CAACC,aAAL,CAAmB,OAAnB,EAA4BR,qCAAqC,CAACS,UAAlE,EAA8E,KAA9E;;AACAF,SAAI,CAACG,cAAL,CAAoB,IAApB,EAA0BV,qCAAqC,CAACW,YAAhE;;AACAJ,SAAI,CAACG,cAAL,CAAoB,IAApB,EAA0BV,qCAAqC,CAACW,YAAhE;;AAEAJ,SAAI,CAACK,QAAL,CAAc,CAAd,EAAiBC,qBAAjB,GAAyCN,KAAI,CAACO,OAAL,CAAa,CAAb,CAAzC;AACAP,SAAI,CAACK,QAAL,CAAc,CAAd,EAAiBC,qBAAjB,GAAyCN,KAAI,CAACO,OAAL,CAAa,CAAb,CAAzC;;AACH;AAED;;;;;;AAIOC,2CAAP;AACI,WAAO,iBAAP;AACH,GAFM;;AAOPC,wBAAWD,yBAAX,EAAW,OAAX,EAAgB;AAHhB;;;SAGA;AACI,aAAO,KAAKD,OAAL,CAAa,CAAb,CAAP;AACH,KAFe;qBAAA;;AAAA,GAAhB;AAOAE,wBAAWD,yBAAX,EAAW,IAAX,EAAa;AAHb;;;SAGA;AACI,aAAO,KAAKH,QAAL,CAAc,CAAd,CAAP;AACH,KAFY;qBAAA;;AAAA,GAAb;AAOAI,wBAAWD,yBAAX,EAAW,IAAX,EAAa;AAHb;;;SAGA;AACI,aAAO,KAAKH,QAAL,CAAc,CAAd,CAAP;AACH,KAFY;qBAAA;;AAAA,GAAb;;AAIUG,0CAAV,UAAsBE,KAAtB,EAAmD;AAC/CZ,qBAAMa,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBF,KAAlB;;AAEA,QAAMG,EAAE,GAAG,KAAKR,QAAL,CAAc,CAAd,CAAX;AACA,QAAMS,EAAE,GAAG,KAAKT,QAAL,CAAc,CAAd,CAAX;;AAEAK,SAAK,CAACK,cAAN,CAAqB,aAArB,EAAoC,iDAApC;;AAEA,QAAIF,EAAE,CAACG,YAAP,EAAqB;AACjBN,WAAK,CAACO,iBAAN,IAA2B,KAAKC,cAAL,CAAoBL,EAApB,EAAwBH,KAAxB,IAAiC,kBAAW,KAAKS,KAAL,CAAWC,sBAAtB,EAA4C,QAA5C,CAA5D;AACH;;AAED,QAAIN,EAAE,CAACE,YAAP,EAAqB;AACjBN,WAAK,CAACO,iBAAN,IAA2B,KAAKC,cAAL,CAAoBJ,EAApB,EAAwBJ,KAAxB,IAAiC,kBAAW,KAAKS,KAAL,CAAWC,sBAAtB,EAA4C,QAA5C,CAA5D;AACH;;AAED,WAAO,IAAP;AACH,GAjBS;;AAkBd;AAAC,CA/DD,CAAqC5B,iBAArC;;;AAiEAG,aAAa,CAAC,yBAAD,EAA4Ba,eAA5B,CAAb","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","__extends","name","_super","Fragment","_this","registerInput","AutoDetect","registerOutput","BasedOnInput","_outputs","_typeConnectionSource","_inputs","DerivativeBlock","Object","state","_buildBlock","call","dx","dy","_emitExtension","hasEndpoints","compilationString","_declareOutput","input","associatedVariableName"],"sourceRoot":"","sources":["../../../../../../../../lts/core/generated/Materials/Node/Blocks/Fragment/derivativeBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../../nodeMaterialBuildState\";\r\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets\";\r\nimport type { NodeMaterialConnectionPoint } from \"../../nodeMaterialBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\n\r\n/**\r\n * Block used to get the derivative value on x and y of a given input\r\n */\r\nexport class DerivativeBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Create a new DerivativeBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Fragment);\r\n\r\n        this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect, false);\r\n        this.registerOutput(\"dx\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n        this.registerOutput(\"dy\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n        this._outputs[1]._typeConnectionSource = this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"DerivativeBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the input component\r\n     */\r\n    public get input(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the derivative output on x\r\n     */\r\n    public get dx(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the derivative output on y\r\n     */\r\n    public get dy(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const dx = this._outputs[0];\r\n        const dy = this._outputs[1];\r\n\r\n        state._emitExtension(\"derivatives\", \"#extension GL_OES_standard_derivatives : enable\");\r\n\r\n        if (dx.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(dx, state) + ` = dFdx(${this.input.associatedVariableName});\\r\\n`;\r\n        }\r\n\r\n        if (dy.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(dy, state) + ` = dFdy(${this.input.associatedVariableName});\\r\\n`;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.DerivativeBlock\", DerivativeBlock);\r\n"]},"metadata":{},"sourceType":"module"}