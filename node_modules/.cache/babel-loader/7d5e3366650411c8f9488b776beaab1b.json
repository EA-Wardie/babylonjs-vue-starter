{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Operations supported by the Wave block\n */\n\nexport var WaveBlockKind;\n\n(function (WaveBlockKind) {\n  /** SawTooth */\n  WaveBlockKind[WaveBlockKind[\"SawTooth\"] = 0] = \"SawTooth\";\n  /** Square */\n\n  WaveBlockKind[WaveBlockKind[\"Square\"] = 1] = \"Square\";\n  /** Triangle */\n\n  WaveBlockKind[WaveBlockKind[\"Triangle\"] = 2] = \"Triangle\";\n})(WaveBlockKind || (WaveBlockKind = {}));\n/**\n * Block used to apply wave operation to floats\n */\n\n\nvar WaveBlock =\n/** @class */\nfunction (_super) {\n  __extends(WaveBlock, _super);\n  /**\n   * Creates a new WaveBlock\n   * @param name defines the block name\n   */\n\n\n  function WaveBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /**\n     * Gets or sets the kibnd of wave to be applied by the block\n     */\n\n\n    _this.kind = WaveBlockKind.SawTooth;\n\n    _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n\n    _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  WaveBlock.prototype.getClassName = function () {\n    return \"WaveBlock\";\n  };\n\n  Object.defineProperty(WaveBlock.prototype, \"input\", {\n    /**\n     * Gets the input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(WaveBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WaveBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n\n    switch (this.kind) {\n      case WaveBlockKind.SawTooth:\n        {\n          state.compilationString += this._declareOutput(output, state) + \" = \".concat(this.input.associatedVariableName, \" - floor(0.5 + \").concat(this.input.associatedVariableName, \");\\r\\n\");\n          break;\n        }\n\n      case WaveBlockKind.Square:\n        {\n          state.compilationString += this._declareOutput(output, state) + \" = 1.0 - 2.0 * round(fract(\".concat(this.input.associatedVariableName, \"));\\r\\n\");\n          break;\n        }\n\n      case WaveBlockKind.Triangle:\n        {\n          state.compilationString += this._declareOutput(output, state) + \" = 2.0 * abs(2.0 * (\".concat(this.input.associatedVariableName, \" - floor(0.5 + \").concat(this.input.associatedVariableName, \"))) - 1.0;\\r\\n\");\n          break;\n        }\n    }\n\n    return this;\n  };\n\n  WaveBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.kind = this.kind;\n    return serializationObject;\n  };\n\n  WaveBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.kind = serializationObject.kind;\n  };\n\n  return WaveBlock;\n}(NodeMaterialBlock);\n\nexport { WaveBlock };\nRegisterClass(\"BABYLON.WaveBlock\", WaveBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","WaveBlockKind","__extends","name","_super","Neutral","_this","SawTooth","registerInput","AutoDetect","registerOutput","BasedOnInput","_outputs","_typeConnectionSource","_inputs","excludedConnectionPointTypes","push","Matrix","WaveBlock","Object","state","_buildBlock","call","output","kind","compilationString","_declareOutput","input","associatedVariableName","concat","Square","Triangle","serializationObject","serialize","scene","rootUrl","_deserialize"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/waveBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport type { Scene } from \"../../../scene\";\r\n\r\n/**\r\n * Operations supported by the Wave block\r\n */\r\nexport enum WaveBlockKind {\r\n    /** SawTooth */\r\n    SawTooth,\r\n    /** Square */\r\n    Square,\r\n    /** Triangle */\r\n    Triangle,\r\n}\r\n\r\n/**\r\n * Block used to apply wave operation to floats\r\n */\r\nexport class WaveBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Gets or sets the kibnd of wave to be applied by the block\r\n     */\r\n    public kind = WaveBlockKind.SawTooth;\r\n\r\n    /**\r\n     * Creates a new WaveBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"WaveBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the input component\r\n     */\r\n    public get input(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        switch (this.kind) {\r\n            case WaveBlockKind.SawTooth: {\r\n                state.compilationString += this._declareOutput(output, state) + ` = ${this.input.associatedVariableName} - floor(0.5 + ${this.input.associatedVariableName});\\r\\n`;\r\n                break;\r\n            }\r\n            case WaveBlockKind.Square: {\r\n                state.compilationString += this._declareOutput(output, state) + ` = 1.0 - 2.0 * round(fract(${this.input.associatedVariableName}));\\r\\n`;\r\n                break;\r\n            }\r\n            case WaveBlockKind.Triangle: {\r\n                state.compilationString +=\r\n                    this._declareOutput(output, state) +\r\n                    ` = 2.0 * abs(2.0 * (${this.input.associatedVariableName} - floor(0.5 + ${this.input.associatedVariableName}))) - 1.0;\\r\\n`;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.kind = this.kind;\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.kind = serializationObject.kind;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.WaveBlock\", WaveBlock);\r\n"]},"metadata":{},"sourceType":"module"}