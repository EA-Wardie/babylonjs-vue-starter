{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nvar name = \"samplerFragmentAlternateDeclaration\";\nvar shader = \"#ifdef _DEFINENAME_\\n#if _DEFINENAME_DIRECTUV==1\\n#define v_VARYINGNAME_UV vMainUV1\\n#elif _DEFINENAME_DIRECTUV==2\\n#define v_VARYINGNAME_UV vMainUV2\\n#elif _DEFINENAME_DIRECTUV==3\\n#define v_VARYINGNAME_UV vMainUV3\\n#elif _DEFINENAME_DIRECTUV==4\\n#define v_VARYINGNAME_UV vMainUV4\\n#elif _DEFINENAME_DIRECTUV==5\\n#define v_VARYINGNAME_UV vMainUV5\\n#elif _DEFINENAME_DIRECTUV==6\\n#define v_VARYINGNAME_UV vMainUV6\\n#else\\nvarying vec2 v_VARYINGNAME_UV;\\n#endif\\n#endif\\n\"; // Sideeffect\n\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\n\nexport var samplerFragmentAlternateDeclaration = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,8BAA5B;AAEA,IAAMC,IAAI,GAAG,qCAAb;AACA,IAAMC,MAAM,GAAG,wdAAf,C,CAkBA;;AACAF,WAAW,CAACG,oBAAZ,CAAiCF,IAAjC,IAAyCC,MAAzC;AACA;;AACA,OAAO,IAAME,mCAAmC,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAA5C","names":["ShaderStore","name","shader","IncludesShadersStore","samplerFragmentAlternateDeclaration"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"samplerFragmentAlternateDeclaration\";\nconst shader = `#ifdef _DEFINENAME_\n#if _DEFINENAME_DIRECTUV==1\n#define v_VARYINGNAME_UV vMainUV1\n#elif _DEFINENAME_DIRECTUV==2\n#define v_VARYINGNAME_UV vMainUV2\n#elif _DEFINENAME_DIRECTUV==3\n#define v_VARYINGNAME_UV vMainUV3\n#elif _DEFINENAME_DIRECTUV==4\n#define v_VARYINGNAME_UV vMainUV4\n#elif _DEFINENAME_DIRECTUV==5\n#define v_VARYINGNAME_UV vMainUV5\n#elif _DEFINENAME_DIRECTUV==6\n#define v_VARYINGNAME_UV vMainUV6\n#else\nvarying vec2 v_VARYINGNAME_UV;\r#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport const samplerFragmentAlternateDeclaration = { name, shader };\n"]},"metadata":{},"sourceType":"module"}