{"ast":null,"code":"/** @hidden */\nvar DrawWrapper =\n/** @class */\nfunction () {\n  function DrawWrapper(engine, createMaterialContext) {\n    if (createMaterialContext === void 0) {\n      createMaterialContext = true;\n    }\n\n    this.effect = null;\n    this.defines = null;\n    this.drawContext = engine.createDrawContext();\n\n    if (createMaterialContext) {\n      this.materialContext = engine.createMaterialContext();\n    }\n  }\n\n  DrawWrapper.IsWrapper = function (effect) {\n    return effect.getPipelineContext === undefined;\n  };\n\n  DrawWrapper.GetEffect = function (effect) {\n    return effect.getPipelineContext === undefined ? effect.effect : effect;\n  };\n\n  DrawWrapper.prototype.setEffect = function (effect, defines, resetContext) {\n    var _a;\n\n    if (resetContext === void 0) {\n      resetContext = true;\n    }\n\n    this.effect = effect;\n\n    if (defines !== undefined) {\n      this.defines = defines;\n    }\n\n    if (resetContext) {\n      (_a = this.drawContext) === null || _a === void 0 ? void 0 : _a.reset();\n    }\n  };\n\n  DrawWrapper.prototype.dispose = function () {\n    var _a;\n\n    (_a = this.drawContext) === null || _a === void 0 ? void 0 : _a.dispose();\n  };\n\n  return DrawWrapper;\n}();\n\nexport { DrawWrapper };","map":{"version":3,"mappings":"AAQA;AACA;AAAA;AAAA;AAcI,uBAAYA,MAAZ,EAAgCC,qBAAhC,EAA4D;AAA5B;AAAAA;AAA4B;;AACxD,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,WAAL,GAAmBJ,MAAM,CAACK,iBAAP,EAAnB;;AACA,QAAIJ,qBAAJ,EAA2B;AACvB,WAAKK,eAAL,GAAuBN,MAAM,CAACC,qBAAP,EAAvB;AACH;AACJ;;AAfaM,0BAAd,UAAwBL,MAAxB,EAAoD;AAChD,WAAQA,MAAiB,CAACM,kBAAlB,KAAyCC,SAAjD;AACH,GAFa;;AAIAF,0BAAd,UAAwBL,MAAxB,EAAoD;AAChD,WAAQA,MAAiB,CAACM,kBAAlB,KAAyCC,SAAzC,GAAsDP,MAAsB,CAACA,MAA7E,GAAuFA,MAA/F;AACH,GAFa;;AAaPK,oCAAP,UAAiBL,MAAjB,EAA2CC,OAA3C,EAAyFO,YAAzF,EAA4G;;;AAAnB;AAAAA;AAAmB;;AACxG,SAAKR,MAAL,GAAcA,MAAd;;AACA,QAAIC,OAAO,KAAKM,SAAhB,EAA2B;AACvB,WAAKN,OAAL,GAAeA,OAAf;AACH;;AACD,QAAIO,YAAJ,EAAkB;AACd,iBAAKN,WAAL,MAAgB,IAAhB,IAAgBO,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEC,KAAF,EAAhB;AACH;AACJ,GARM;;AAUAL,kCAAP;;;AACI,eAAKH,WAAL,MAAgB,IAAhB,IAAgBO,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEE,OAAF,EAAhB;AACH,GAFM;;AAGX;AAAC,CApCD","names":["engine","createMaterialContext","effect","defines","drawContext","createDrawContext","materialContext","DrawWrapper","getPipelineContext","undefined","resetContext","_a","reset","dispose"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Materials/drawWrapper.ts"],"sourcesContent":["import type { IDrawContext } from \"../Engines/IDrawContext\";\r\nimport type { IMaterialContext } from \"../Engines/IMaterialContext\";\r\nimport type { Nullable } from \"../types\";\r\n\r\ndeclare type ThinEngine = import(\"../Engines/thinEngine\").ThinEngine;\r\ndeclare type Effect = import(\"./effect\").Effect;\r\ndeclare type MaterialDefines = import(\"./materialDefines\").MaterialDefines;\r\n\r\n/** @hidden */\r\nexport class DrawWrapper {\r\n    public effect: Nullable<Effect>;\r\n    public defines: Nullable<string | MaterialDefines>;\r\n    public materialContext?: IMaterialContext;\r\n    public drawContext?: IDrawContext;\r\n\r\n    public static IsWrapper(effect: Effect | DrawWrapper): effect is DrawWrapper {\r\n        return (effect as Effect).getPipelineContext === undefined;\r\n    }\r\n\r\n    public static GetEffect(effect: Effect | DrawWrapper): Nullable<Effect> {\r\n        return (effect as Effect).getPipelineContext === undefined ? (effect as DrawWrapper).effect : (effect as Effect);\r\n    }\r\n\r\n    constructor(engine: ThinEngine, createMaterialContext = true) {\r\n        this.effect = null;\r\n        this.defines = null;\r\n        this.drawContext = engine.createDrawContext();\r\n        if (createMaterialContext) {\r\n            this.materialContext = engine.createMaterialContext();\r\n        }\r\n    }\r\n\r\n    public setEffect(effect: Nullable<Effect>, defines?: Nullable<string | MaterialDefines>, resetContext = true): void {\r\n        this.effect = effect;\r\n        if (defines !== undefined) {\r\n            this.defines = defines;\r\n        }\r\n        if (resetContext) {\r\n            this.drawContext?.reset();\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.drawContext?.dispose();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}