{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ShaderDefineExpression } from \"../shaderDefineExpression.js\";\n/** @hidden */\n\nvar ShaderDefineIsDefinedOperator =\n/** @class */\nfunction (_super) {\n  __extends(ShaderDefineIsDefinedOperator, _super);\n\n  function ShaderDefineIsDefinedOperator(define, not) {\n    if (not === void 0) {\n      not = false;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.define = define;\n    _this.not = not;\n    return _this;\n  }\n\n  ShaderDefineIsDefinedOperator.prototype.isTrue = function (preprocessors) {\n    var condition = preprocessors[this.define] !== undefined;\n\n    if (this.not) {\n      condition = !condition;\n    }\n\n    return condition;\n  };\n\n  return ShaderDefineIsDefinedOperator;\n}(ShaderDefineExpression);\n\nexport { ShaderDefineIsDefinedOperator };","map":{"version":3,"mappings":";AAAA,SAASA,sBAAT,QAAuC,8BAAvC;AAEA;;AACA;AAAA;AAAA;AAAmDC;;AAC/C,yCAA0BC,MAA1B,EAAiDC,GAAjD,EAAqE;AAApB;AAAAA;AAAoB;;AAArE,gBACIC,qBAAO,IADX;;AAA0BC;AAAuBA;;AAEhD;;AAEMC,mDAAP,UAAcC,aAAd,EAAsD;AAClD,QAAIC,SAAS,GAAGD,aAAa,CAAC,KAAKL,MAAN,CAAb,KAA+BO,SAA/C;;AAEA,QAAI,KAAKN,GAAT,EAAc;AACVK,eAAS,GAAG,CAACA,SAAb;AACH;;AAED,WAAOA,SAAP;AACH,GARM;;AASX;AAAC,CAdD,CAAmDR,sBAAnD","names":["ShaderDefineExpression","__extends","define","not","_super","_this","ShaderDefineIsDefinedOperator","preprocessors","condition","undefined"],"sourceRoot":"","sources":["../../../../../../../../lts/core/generated/Engines/Processors/Expressions/Operators/shaderDefineIsDefinedOperator.ts"],"sourcesContent":["import { ShaderDefineExpression } from \"../shaderDefineExpression\";\r\n\r\n/** @hidden */\r\nexport class ShaderDefineIsDefinedOperator extends ShaderDefineExpression {\r\n    public constructor(public define: string, public not: boolean = false) {\r\n        super();\r\n    }\r\n\r\n    public isTrue(preprocessors: { [key: string]: string }) {\r\n        let condition = preprocessors[this.define] !== undefined;\r\n\r\n        if (this.not) {\r\n            condition = !condition;\r\n        }\r\n\r\n        return condition;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}