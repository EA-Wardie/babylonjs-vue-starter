{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nvar name = \"morphTargetsVertexGlobalDeclaration\";\nvar shader = \"#ifdef MORPHTARGETS\\nuniform morphTargetInfluences : array<f32,NUM_MORPH_INFLUENCERS>;\\n#ifdef MORPHTARGETS_TEXTURE \\nuniform morphTargetTextureIndices : array<f32,NUM_MORPH_INFLUENCERS>;\\nuniform morphTargetTextureInfo : vec3<f32>;\\nvar morphTargets : texture_2d_array<f32>;\\nvar morphTargetsSampler : sampler;\\nfn readVector3FromRawSampler(targetIndex : i32,vertexIndex : f32)->vec3<f32>\\n{ \\nlet y=floor(vertexIndex/uniforms.morphTargetTextureInfo.y);\\nlet x=vertexIndex-y*uniforms.morphTargetTextureInfo.y;\\nlet textureUV=vec2<f32>((x+0.5)/uniforms.morphTargetTextureInfo.y,(y+0.5)/uniforms.morphTargetTextureInfo.z);\\nreturn textureSampleLevel(morphTargets,morphTargetsSampler,textureUV,i32(uniforms.morphTargetTextureIndices[targetIndex]),0.0).xyz;\\n}\\n#endif\\n#endif\\n\"; // Sideeffect\n\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @hidden */\n\nexport var morphTargetsVertexGlobalDeclaration = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,8BAA5B;AAEA,IAAMC,IAAI,GAAG,qCAAb;AACA,IAAMC,MAAM,GAAG,ywBAAf,C,CAiBA;;AACAF,WAAW,CAACG,wBAAZ,CAAqCF,IAArC,IAA6CC,MAA7C;AACA;;AACA,OAAO,IAAME,mCAAmC,GAAG;AAAEH,MAAI,MAAN;AAAQC,QAAM;AAAd,CAA5C","names":["ShaderStore","name","shader","IncludesShadersStoreWGSL","morphTargetsVertexGlobalDeclaration"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/morphTargetsVertexGlobalDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"morphTargetsVertexGlobalDeclaration\";\nconst shader = `#ifdef MORPHTARGETS\nuniform morphTargetInfluences : array<f32,NUM_MORPH_INFLUENCERS>;\r#ifdef MORPHTARGETS_TEXTURE \nuniform morphTargetTextureIndices : array<f32,NUM_MORPH_INFLUENCERS>;\runiform morphTargetTextureInfo : vec3<f32>;\rvar morphTargets : texture_2d_array<f32>;\rvar morphTargetsSampler : sampler;\rfn readVector3FromRawSampler(targetIndex : i32,vertexIndex : f32)->vec3<f32>\r{ \rlet y=floor(vertexIndex/uniforms.morphTargetTextureInfo.y);\rlet x=vertexIndex-y*uniforms.morphTargetTextureInfo.y;\rlet textureUV=vec2<f32>((x+0.5)/uniforms.morphTargetTextureInfo.y,(y+0.5)/uniforms.morphTargetTextureInfo.z);\rreturn textureSampleLevel(morphTargets,morphTargetsSampler,textureUV,i32(uniforms.morphTargetTextureIndices[targetIndex]),0.0).xyz;\r}\r#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @hidden */\nexport const morphTargetsVertexGlobalDeclaration = { name, shader };\n"]},"metadata":{},"sourceType":"module"}