{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ShaderCodeNode } from \"./shaderCodeNode.js\";\n/** @hidden */\n\nvar ShaderCodeConditionNode =\n/** @class */\nfunction (_super) {\n  __extends(ShaderCodeConditionNode, _super);\n\n  function ShaderCodeConditionNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ShaderCodeConditionNode.prototype.process = function (preprocessors, options) {\n    for (var index = 0; index < this.children.length; index++) {\n      var node = this.children[index];\n\n      if (node.isValid(preprocessors)) {\n        return node.process(preprocessors, options);\n      }\n    }\n\n    return \"\";\n  };\n\n  return ShaderCodeConditionNode;\n}(ShaderCodeNode);\n\nexport { ShaderCodeConditionNode };","map":{"version":3,"mappings":";AAAA,SAASA,cAAT,QAA+B,qBAA/B;AAGA;;AACA;AAAA;AAAA;AAA6CC;;AAA7C;;AAYC;;AAXGC,wDAAQC,aAAR,EAAkDC,OAAlD,EAA4E;AACxE,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKC,QAAL,CAAcC,MAA1C,EAAkDF,KAAK,EAAvD,EAA2D;AACvD,UAAMG,IAAI,GAAG,KAAKF,QAAL,CAAcD,KAAd,CAAb;;AAEA,UAAIG,IAAI,CAACC,OAAL,CAAaN,aAAb,CAAJ,EAAiC;AAC7B,eAAOK,IAAI,CAACE,OAAL,CAAaP,aAAb,EAA4BC,OAA5B,CAAP;AACH;AACJ;;AAED,WAAO,EAAP;AACH,GAVD;;AAWJ;AAAC,CAZD,CAA6CJ,cAA7C","names":["ShaderCodeNode","__extends","ShaderCodeConditionNode","preprocessors","options","index","children","length","node","isValid","process"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/Processors/shaderCodeConditionNode.ts"],"sourcesContent":["import { ShaderCodeNode } from \"./shaderCodeNode\";\r\nimport type { ProcessingOptions } from \"./shaderProcessingOptions\";\r\n\r\n/** @hidden */\r\nexport class ShaderCodeConditionNode extends ShaderCodeNode {\r\n    process(preprocessors: { [key: string]: string }, options: ProcessingOptions) {\r\n        for (let index = 0; index < this.children.length; index++) {\r\n            const node = this.children[index];\r\n\r\n            if (node.isValid(preprocessors)) {\r\n                return node.process(preprocessors, options);\r\n            }\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}