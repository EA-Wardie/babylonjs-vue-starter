{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-0cf3a102\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  id: \"canvasRenderer\",\n  ref: \"canvasRenderer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", _hoisted_1, null, 512\n  /* NEED_PATCH */\n  );\n}","map":{"version":3,"mappings":";;;;;;;AACUA,IAAE,EAAC;AAAiBC,KAAG,EAAC;;;uBAAhCC,oBAA0D,QAA1D,cAA0D,IAA1D,EAA0D;AAAA;AAA1D","names":["id","ref","_createElementBlock"],"sourceRoot":"","sources":["/home/ea/Development/Babylon/red/src/framework/GameRenderer.vue"],"sourcesContent":["<template>\n  <canvas id=\"canvasRenderer\" ref=\"canvasRenderer\"></canvas>\n</template>\n\n<script>\nimport GameInitializer from \"@/framework/GameInitializer\";\n\nexport default {\n  name: \"GameRenderer\",\n  mixins: [GameInitializer],\n  mounted() {\n    this.initGame(this.$refs.canvasRenderer);\n  },\n}\n</script>\n\n<style scoped>\n#canvasRenderer {\n  width: 100%;\n  height: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}