{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { NodeMaterialSystemValues } from \"../Enums/nodeMaterialSystemValues.js\";\nimport { InputBlock } from \"./Input/inputBlock.js\";\n/**\n * Block used to get the view direction\n */\n\nvar ViewDirectionBlock =\n/** @class */\nfunction (_super) {\n  __extends(ViewDirectionBlock, _super);\n  /**\n   * Creates a new ViewDirectionBlock\n   * @param name defines the block name\n   */\n\n\n  function ViewDirectionBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"worldPosition\", NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    _this.registerInput(\"cameraPosition\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  ViewDirectionBlock.prototype.getClassName = function () {\n    return \"ViewDirectionBlock\";\n  };\n\n  Object.defineProperty(ViewDirectionBlock.prototype, \"worldPosition\", {\n    /**\n     * Gets the world position component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ViewDirectionBlock.prototype, \"cameraPosition\", {\n    /**\n     * Gets the camera position component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ViewDirectionBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ViewDirectionBlock.prototype.autoConfigure = function (material) {\n    if (!this.cameraPosition.isConnected) {\n      var cameraPositionInput = material.getInputBlockByPredicate(function (b) {\n        return b.systemValue === NodeMaterialSystemValues.CameraPosition;\n      });\n\n      if (!cameraPositionInput) {\n        cameraPositionInput = new InputBlock(\"cameraPosition\");\n        cameraPositionInput.setAsSystemValue(NodeMaterialSystemValues.CameraPosition);\n      }\n\n      cameraPositionInput.output.connectTo(this.cameraPosition);\n    }\n  };\n\n  ViewDirectionBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + \" = normalize(\".concat(this.cameraPosition.associatedVariableName, \" - \").concat(this.worldPosition.associatedVariableName, \".xyz);\\r\\n\");\n    return this;\n  };\n\n  return ViewDirectionBlock;\n}(NodeMaterialBlock);\n\nexport { ViewDirectionBlock };\nRegisterClass(\"BABYLON.ViewDirectionBlock\", ViewDirectionBlock);","map":{"version":3,"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,yBAAlC;AACA,SAASC,qCAAT,QAAsD,mDAAtD;AAGA,SAASC,wBAAT,QAAyC,sCAAzC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,SAASC,wBAAT,QAAyC,sCAAzC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA;;;;AAGA;AAAA;AAAA;AAAwCC;AACpC;;;;;;AAIA,8BAAmBC,IAAnB,EAA+B;AAA/B,gBACIC,kBAAMD,IAAN,EAAYL,wBAAwB,CAACO,OAArC,KAA6C,IADjD;;AAGIC,SAAI,CAACC,aAAL,CAAmB,eAAnB,EAAoCV,qCAAqC,CAACW,OAA1E;;AACAF,SAAI,CAACC,aAAL,CAAmB,gBAAnB,EAAqCV,qCAAqC,CAACY,OAA3E;;AAEAH,SAAI,CAACI,cAAL,CAAoB,QAApB,EAA8Bb,qCAAqC,CAACY,OAApE;;;AACH;AAED;;;;;;AAIOE,8CAAP;AACI,WAAO,oBAAP;AACH,GAFM;;AAOPC,wBAAWD,4BAAX,EAAW,eAAX,EAAwB;AAHxB;;;SAGA;AACI,aAAO,KAAKE,OAAL,CAAa,CAAb,CAAP;AACH,KAFuB;qBAAA;;AAAA,GAAxB;AAOAD,wBAAWD,4BAAX,EAAW,gBAAX,EAAyB;AAHzB;;;SAGA;AACI,aAAO,KAAKE,OAAL,CAAa,CAAb,CAAP;AACH,KAFwB;qBAAA;;AAAA,GAAzB;AAOAD,wBAAWD,4BAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA;AACI,aAAO,KAAKG,QAAL,CAAc,CAAd,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;;AAIOH,+CAAP,UAAqBI,QAArB,EAA2C;AACvC,QAAI,CAAC,KAAKC,cAAL,CAAoBC,WAAzB,EAAsC;AAClC,UAAIC,mBAAmB,GAAGH,QAAQ,CAACI,wBAAT,CAAkC,UAACC,CAAD,EAAE;AAAK,gBAAC,CAACC,WAAF,KAAkBrB,wBAAwB,CAACsB,cAA3C;AAAyD,OAAlG,CAA1B;;AAEA,UAAI,CAACJ,mBAAL,EAA0B;AACtBA,2BAAmB,GAAG,IAAIjB,UAAJ,CAAe,gBAAf,CAAtB;AACAiB,2BAAmB,CAACK,gBAApB,CAAqCvB,wBAAwB,CAACsB,cAA9D;AACH;;AACDJ,yBAAmB,CAACM,MAApB,CAA2BC,SAA3B,CAAqC,KAAKT,cAA1C;AACH;AACJ,GAVM;;AAYGL,6CAAV,UAAsBe,KAAtB,EAAmD;AAC/CtB,qBAAMuB,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBF,KAAlB;;AAEA,QAAMF,MAAM,GAAG,KAAKV,QAAL,CAAc,CAAd,CAAf;AAEAY,SAAK,CAACG,iBAAN,IACI,KAAKC,cAAL,CAAoBN,MAApB,EAA4BE,KAA5B,IAAqC,uBAAgB,KAAKV,cAAL,CAAoBe,sBAApC,EAA0D,KAA1D,EAA0DC,MAA1D,CAAgE,KAAKC,aAAL,CAAmBF,sBAAnF,EAAyG,YAAzG,CADzC;AAGA,WAAO,IAAP;AACH,GATS;;AAUd;AAAC,CAjED,CAAwCnC,iBAAxC;;;AAmEAG,aAAa,CAAC,4BAAD,EAA+BY,kBAA/B,CAAb","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","NodeMaterialSystemValues","InputBlock","__extends","name","_super","Neutral","_this","registerInput","Vector4","Vector3","registerOutput","ViewDirectionBlock","Object","_inputs","_outputs","material","cameraPosition","isConnected","cameraPositionInput","getInputBlockByPredicate","b","systemValue","CameraPosition","setAsSystemValue","output","connectTo","state","_buildBlock","call","compilationString","_declareOutput","associatedVariableName","concat","worldPosition"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/viewDirectionBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport type { NodeMaterial } from \"../nodeMaterial\";\r\nimport { NodeMaterialSystemValues } from \"../Enums/nodeMaterialSystemValues\";\r\nimport { InputBlock } from \"./Input/inputBlock\";\r\n/**\r\n * Block used to get the view direction\r\n */\r\nexport class ViewDirectionBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new ViewDirectionBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"worldPosition\", NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this.registerInput(\"cameraPosition\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"ViewDirectionBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the world position component\r\n     */\r\n    public get worldPosition(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the camera position component\r\n     */\r\n    public get cameraPosition(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    public autoConfigure(material: NodeMaterial) {\r\n        if (!this.cameraPosition.isConnected) {\r\n            let cameraPositionInput = material.getInputBlockByPredicate((b) => b.systemValue === NodeMaterialSystemValues.CameraPosition);\r\n\r\n            if (!cameraPositionInput) {\r\n                cameraPositionInput = new InputBlock(\"cameraPosition\");\r\n                cameraPositionInput.setAsSystemValue(NodeMaterialSystemValues.CameraPosition);\r\n            }\r\n            cameraPositionInput.output.connectTo(this.cameraPosition);\r\n        }\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        state.compilationString +=\r\n            this._declareOutput(output, state) + ` = normalize(${this.cameraPosition.associatedVariableName} - ${this.worldPosition.associatedVariableName}.xyz);\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.ViewDirectionBlock\", ViewDirectionBlock);\r\n"]},"metadata":{},"sourceType":"module"}