{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { Vector2 } from \"../../../Maths/math.vector.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator.js\";\n/**\n * Block used to remap a float from a range to a new one\n */\n\nvar RemapBlock =\n/** @class */\nfunction (_super) {\n  __extends(RemapBlock, _super);\n  /**\n   * Creates a new RemapBlock\n   * @param name defines the block name\n   */\n\n\n  function RemapBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /**\n     * Gets or sets the source range\n     */\n\n\n    _this.sourceRange = new Vector2(-1, 1);\n    /**\n     * Gets or sets the target range\n     */\n\n    _this.targetRange = new Vector2(0, 1);\n\n    _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerInput(\"sourceMin\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerInput(\"sourceMax\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerInput(\"targetMin\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerInput(\"targetMax\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n    return _this;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n\n\n  RemapBlock.prototype.getClassName = function () {\n    return \"RemapBlock\";\n  };\n\n  Object.defineProperty(RemapBlock.prototype, \"input\", {\n    /**\n     * Gets the input component\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"sourceMin\", {\n    /**\n     * Gets the source min input component\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"sourceMax\", {\n    /**\n     * Gets the source max input component\n     */\n    get: function get() {\n      return this._inputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"targetMin\", {\n    /**\n     * Gets the target min input component\n     */\n    get: function get() {\n      return this._inputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"targetMax\", {\n    /**\n     * Gets the target max input component\n     */\n    get: function get() {\n      return this._inputs[4];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"output\", {\n    /**\n     * Gets the output component\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RemapBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    var sourceMin = this.sourceMin.isConnected ? this.sourceMin.associatedVariableName : this._writeFloat(this.sourceRange.x);\n    var sourceMax = this.sourceMax.isConnected ? this.sourceMax.associatedVariableName : this._writeFloat(this.sourceRange.y);\n    var targetMin = this.targetMin.isConnected ? this.targetMin.associatedVariableName : this._writeFloat(this.targetRange.x);\n    var targetMax = this.targetMax.isConnected ? this.targetMax.associatedVariableName : this._writeFloat(this.targetRange.y);\n    state.compilationString += this._declareOutput(output, state) + \" = \".concat(targetMin, \" + (\").concat(this._inputs[0].associatedVariableName, \" - \").concat(sourceMin, \") * (\").concat(targetMax, \" - \").concat(targetMin, \") / (\").concat(sourceMax, \" - \").concat(sourceMin, \");\\r\\n\");\n    return this;\n  };\n\n  RemapBlock.prototype._dumpPropertiesCode = function () {\n    var codeString = _super.prototype._dumpPropertiesCode.call(this) + \"\".concat(this._codeVariableName, \".sourceRange = new BABYLON.Vector2(\").concat(this.sourceRange.x, \", \").concat(this.sourceRange.y, \");\\r\\n\");\n    codeString += \"\".concat(this._codeVariableName, \".targetRange = new BABYLON.Vector2(\").concat(this.targetRange.x, \", \").concat(this.targetRange.y, \");\\r\\n\");\n    return codeString;\n  };\n\n  RemapBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.sourceRange = this.sourceRange.asArray();\n    serializationObject.targetRange = this.targetRange.asArray();\n    return serializationObject;\n  };\n\n  RemapBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.sourceRange = Vector2.FromArray(serializationObject.sourceRange);\n    this.targetRange = Vector2.FromArray(serializationObject.targetRange);\n  };\n\n  __decorate([editableInPropertyPage(\"From\", PropertyTypeForEdition.Vector2)], RemapBlock.prototype, \"sourceRange\", void 0);\n\n  __decorate([editableInPropertyPage(\"To\", PropertyTypeForEdition.Vector2)], RemapBlock.prototype, \"targetRange\", void 0);\n\n  return RemapBlock;\n}(NodeMaterialBlock);\n\nexport { RemapBlock };\nRegisterClass(\"BABYLON.RemapBlock\", RemapBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","Vector2","editableInPropertyPage","PropertyTypeForEdition","__extends","name","_super","Neutral","_this","registerInput","AutoDetect","Float","registerOutput","BasedOnInput","_outputs","_typeConnectionSource","_inputs","RemapBlock","Object","state","_buildBlock","call","output","sourceMin","isConnected","associatedVariableName","_writeFloat","sourceRange","x","sourceMax","y","targetMin","targetRange","targetMax","compilationString","_declareOutput","concat","codeString","_dumpPropertiesCode","_codeVariableName","serializationObject","serialize","asArray","scene","rootUrl","_deserialize","FromArray","__decorate"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/remapBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { Vector2 } from \"../../../Maths/math.vector\";\r\nimport type { Scene } from \"../../../scene\";\r\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator\";\r\n/**\r\n * Block used to remap a float from a range to a new one\r\n */\r\nexport class RemapBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Gets or sets the source range\r\n     */\r\n    @editableInPropertyPage(\"From\", PropertyTypeForEdition.Vector2)\r\n    public sourceRange = new Vector2(-1, 1);\r\n\r\n    /**\r\n     * Gets or sets the target range\r\n     */\r\n    @editableInPropertyPage(\"To\", PropertyTypeForEdition.Vector2)\r\n    public targetRange = new Vector2(0, 1);\r\n\r\n    /**\r\n     * Creates a new RemapBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerInput(\"sourceMin\", NodeMaterialBlockConnectionPointTypes.Float, true);\r\n        this.registerInput(\"sourceMax\", NodeMaterialBlockConnectionPointTypes.Float, true);\r\n        this.registerInput(\"targetMin\", NodeMaterialBlockConnectionPointTypes.Float, true);\r\n        this.registerInput(\"targetMax\", NodeMaterialBlockConnectionPointTypes.Float, true);\r\n\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"RemapBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the input component\r\n     */\r\n    public get input(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the source min input component\r\n     */\r\n    public get sourceMin(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the source max input component\r\n     */\r\n    public get sourceMax(): NodeMaterialConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the target min input component\r\n     */\r\n    public get targetMin(): NodeMaterialConnectionPoint {\r\n        return this._inputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the target max input component\r\n     */\r\n    public get targetMax(): NodeMaterialConnectionPoint {\r\n        return this._inputs[4];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        const sourceMin = this.sourceMin.isConnected ? this.sourceMin.associatedVariableName : this._writeFloat(this.sourceRange.x);\r\n        const sourceMax = this.sourceMax.isConnected ? this.sourceMax.associatedVariableName : this._writeFloat(this.sourceRange.y);\r\n\r\n        const targetMin = this.targetMin.isConnected ? this.targetMin.associatedVariableName : this._writeFloat(this.targetRange.x);\r\n        const targetMax = this.targetMax.isConnected ? this.targetMax.associatedVariableName : this._writeFloat(this.targetRange.y);\r\n\r\n        state.compilationString +=\r\n            this._declareOutput(output, state) +\r\n            ` = ${targetMin} + (${this._inputs[0].associatedVariableName} - ${sourceMin}) * (${targetMax} - ${targetMin}) / (${sourceMax} - ${sourceMin});\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n\r\n    protected _dumpPropertiesCode() {\r\n        let codeString = super._dumpPropertiesCode() + `${this._codeVariableName}.sourceRange = new BABYLON.Vector2(${this.sourceRange.x}, ${this.sourceRange.y});\\r\\n`;\r\n\r\n        codeString += `${this._codeVariableName}.targetRange = new BABYLON.Vector2(${this.targetRange.x}, ${this.targetRange.y});\\r\\n`;\r\n\r\n        return codeString;\r\n    }\r\n\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.sourceRange = this.sourceRange.asArray();\r\n        serializationObject.targetRange = this.targetRange.asArray();\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.sourceRange = Vector2.FromArray(serializationObject.sourceRange);\r\n        this.targetRange = Vector2.FromArray(serializationObject.targetRange);\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.RemapBlock\", RemapBlock);\r\n"]},"metadata":{},"sourceType":"module"}