{"ast":null,"code":"import { WebGPUEngine } from \"../../webgpuEngine.js\";\n\nWebGPUEngine.prototype._readTexturePixels = function (texture, width, height, faceIndex, level, buffer, flushRenderer, noDataConversion, x, y) {\n  if (faceIndex === void 0) {\n    faceIndex = -1;\n  }\n\n  if (level === void 0) {\n    level = 0;\n  }\n\n  if (buffer === void 0) {\n    buffer = null;\n  }\n\n  if (flushRenderer === void 0) {\n    flushRenderer = true;\n  }\n\n  if (noDataConversion === void 0) {\n    noDataConversion = false;\n  }\n\n  if (x === void 0) {\n    x = 0;\n  }\n\n  if (y === void 0) {\n    y = 0;\n  }\n\n  var gpuTextureWrapper = texture._hardwareTexture;\n\n  if (flushRenderer) {\n    this.flushFramebuffer();\n  }\n\n  return this._textureHelper.readPixels(gpuTextureWrapper.underlyingResource, x, y, width, height, gpuTextureWrapper.format, faceIndex, level, buffer, noDataConversion);\n};\n\nWebGPUEngine.prototype._readTexturePixelsSync = function () {\n  throw \"_readTexturePixelsSync is unsupported in WebGPU!\";\n};","map":{"version":3,"mappings":"AAEA,SAASA,YAAT,QAA6B,uBAA7B;;AAGAA,YAAY,CAACC,SAAb,CAAuBC,kBAAvB,GAA4C,UACxCC,OADwC,EAExCC,KAFwC,EAGxCC,MAHwC,EAIxCC,SAJwC,EAKxCC,KALwC,EAMxCC,MANwC,EAOxCC,aAPwC,EAQxCC,gBARwC,EASxCC,CATwC,EAUxCC,CAVwC,EAUnC;AANL;AAAAN,iBAAa,CAAb;AAAc;;AACd;AAAAC;AAAS;;AACT;AAAAC;AAAwC;;AACxC;AAAAC;AAAoB;;AACpB;AAAAC;AAAwB;;AACxB;AAAAC;AAAK;;AACL;AAAAC;AAAK;;AAEL,MAAMC,iBAAiB,GAAGV,OAAO,CAACW,gBAAlC;;AAEA,MAAIL,aAAJ,EAAmB;AACf,SAAKM,gBAAL;AACH;;AAED,SAAO,KAAKC,cAAL,CAAoBC,UAApB,CAA+BJ,iBAAiB,CAACK,kBAAjD,EAAsEP,CAAtE,EAAyEC,CAAzE,EAA4ER,KAA5E,EAAmFC,MAAnF,EAA2FQ,iBAAiB,CAACM,MAA7G,EAAqHb,SAArH,EAAgIC,KAAhI,EAAuIC,MAAvI,EAA+IE,gBAA/I,CAAP;AACH,CAnBD;;AAqBAV,YAAY,CAACC,SAAb,CAAuBmB,sBAAvB,GAAgD;AAC5C,QAAM,kDAAN;AACH,CAFD","names":["WebGPUEngine","prototype","_readTexturePixels","texture","width","height","faceIndex","level","buffer","flushRenderer","noDataConversion","x","y","gpuTextureWrapper","_hardwareTexture","flushFramebuffer","_textureHelper","readPixels","underlyingResource","format","_readTexturePixelsSync"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Engines/WebGPU/Extensions/engine.readTexture.ts"],"sourcesContent":["import type { InternalTexture } from \"../../../Materials/Textures/internalTexture\";\r\nimport type { Nullable } from \"../../../types\";\r\nimport { WebGPUEngine } from \"../../webgpuEngine\";\r\nimport type { WebGPUHardwareTexture } from \"../webgpuHardwareTexture\";\r\n\r\nWebGPUEngine.prototype._readTexturePixels = function (\r\n    texture: InternalTexture,\r\n    width: number,\r\n    height: number,\r\n    faceIndex = -1,\r\n    level = 0,\r\n    buffer: Nullable<ArrayBufferView> = null,\r\n    flushRenderer = true,\r\n    noDataConversion = false,\r\n    x = 0,\r\n    y = 0\r\n): Promise<ArrayBufferView> {\r\n    const gpuTextureWrapper = texture._hardwareTexture as WebGPUHardwareTexture;\r\n\r\n    if (flushRenderer) {\r\n        this.flushFramebuffer();\r\n    }\r\n\r\n    return this._textureHelper.readPixels(gpuTextureWrapper.underlyingResource!, x, y, width, height, gpuTextureWrapper.format, faceIndex, level, buffer, noDataConversion);\r\n};\r\n\r\nWebGPUEngine.prototype._readTexturePixelsSync = function (): ArrayBufferView {\r\n    throw \"_readTexturePixelsSync is unsupported in WebGPU!\";\r\n};\r\n"]},"metadata":{},"sourceType":"module"}