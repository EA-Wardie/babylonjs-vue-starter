{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { Engine } from \"../Engines/engine.js\";\n/**\n * This groups all the flags used to control the materials channel.\n */\n\nvar MaterialFlags =\n/** @class */\nfunction () {\n  function MaterialFlags() {}\n\n  Object.defineProperty(MaterialFlags, \"DiffuseTextureEnabled\", {\n    /**\n     * Are diffuse textures enabled in the application.\n     */\n    get: function get() {\n      return this._DiffuseTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._DiffuseTextureEnabled === value) {\n        return;\n      }\n\n      this._DiffuseTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"DetailTextureEnabled\", {\n    /**\n     * Are detail textures enabled in the application.\n     */\n    get: function get() {\n      return this._DetailTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._DetailTextureEnabled === value) {\n        return;\n      }\n\n      this._DetailTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"AmbientTextureEnabled\", {\n    /**\n     * Are ambient textures enabled in the application.\n     */\n    get: function get() {\n      return this._AmbientTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._AmbientTextureEnabled === value) {\n        return;\n      }\n\n      this._AmbientTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"OpacityTextureEnabled\", {\n    /**\n     * Are opacity textures enabled in the application.\n     */\n    get: function get() {\n      return this._OpacityTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._OpacityTextureEnabled === value) {\n        return;\n      }\n\n      this._OpacityTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"ReflectionTextureEnabled\", {\n    /**\n     * Are reflection textures enabled in the application.\n     */\n    get: function get() {\n      return this._ReflectionTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._ReflectionTextureEnabled === value) {\n        return;\n      }\n\n      this._ReflectionTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"EmissiveTextureEnabled\", {\n    /**\n     * Are emissive textures enabled in the application.\n     */\n    get: function get() {\n      return this._EmissiveTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._EmissiveTextureEnabled === value) {\n        return;\n      }\n\n      this._EmissiveTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"SpecularTextureEnabled\", {\n    /**\n     * Are specular textures enabled in the application.\n     */\n    get: function get() {\n      return this._SpecularTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._SpecularTextureEnabled === value) {\n        return;\n      }\n\n      this._SpecularTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"BumpTextureEnabled\", {\n    /**\n     * Are bump textures enabled in the application.\n     */\n    get: function get() {\n      return this._BumpTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._BumpTextureEnabled === value) {\n        return;\n      }\n\n      this._BumpTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"LightmapTextureEnabled\", {\n    /**\n     * Are lightmap textures enabled in the application.\n     */\n    get: function get() {\n      return this._LightmapTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._LightmapTextureEnabled === value) {\n        return;\n      }\n\n      this._LightmapTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"RefractionTextureEnabled\", {\n    /**\n     * Are refraction textures enabled in the application.\n     */\n    get: function get() {\n      return this._RefractionTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._RefractionTextureEnabled === value) {\n        return;\n      }\n\n      this._RefractionTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"ColorGradingTextureEnabled\", {\n    /**\n     * Are color grading textures enabled in the application.\n     */\n    get: function get() {\n      return this._ColorGradingTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._ColorGradingTextureEnabled === value) {\n        return;\n      }\n\n      this._ColorGradingTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"FresnelEnabled\", {\n    /**\n     * Are fresnels enabled in the application.\n     */\n    get: function get() {\n      return this._FresnelEnabled;\n    },\n    set: function set(value) {\n      if (this._FresnelEnabled === value) {\n        return;\n      }\n\n      this._FresnelEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(4);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"ClearCoatTextureEnabled\", {\n    /**\n     * Are clear coat textures enabled in the application.\n     */\n    get: function get() {\n      return this._ClearCoatTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._ClearCoatTextureEnabled === value) {\n        return;\n      }\n\n      this._ClearCoatTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"ClearCoatBumpTextureEnabled\", {\n    /**\n     * Are clear coat bump textures enabled in the application.\n     */\n    get: function get() {\n      return this._ClearCoatBumpTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._ClearCoatBumpTextureEnabled === value) {\n        return;\n      }\n\n      this._ClearCoatBumpTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"ClearCoatTintTextureEnabled\", {\n    /**\n     * Are clear coat tint textures enabled in the application.\n     */\n    get: function get() {\n      return this._ClearCoatTintTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._ClearCoatTintTextureEnabled === value) {\n        return;\n      }\n\n      this._ClearCoatTintTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"SheenTextureEnabled\", {\n    /**\n     * Are sheen textures enabled in the application.\n     */\n    get: function get() {\n      return this._SheenTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._SheenTextureEnabled === value) {\n        return;\n      }\n\n      this._SheenTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"AnisotropicTextureEnabled\", {\n    /**\n     * Are anisotropic textures enabled in the application.\n     */\n    get: function get() {\n      return this._AnisotropicTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._AnisotropicTextureEnabled === value) {\n        return;\n      }\n\n      this._AnisotropicTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"ThicknessTextureEnabled\", {\n    /**\n     * Are thickness textures enabled in the application.\n     */\n    get: function get() {\n      return this._ThicknessTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._ThicknessTextureEnabled === value) {\n        return;\n      }\n\n      this._ThicknessTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"RefractionIntensityTextureEnabled\", {\n    /**\n     * Are refraction intensity textures enabled in the application.\n     */\n    get: function get() {\n      return this._ThicknessTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._RefractionIntensityTextureEnabled === value) {\n        return;\n      }\n\n      this._RefractionIntensityTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"TranslucencyIntensityTextureEnabled\", {\n    /**\n     * Are translucency intensity textures enabled in the application.\n     */\n    get: function get() {\n      return this._ThicknessTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._TranslucencyIntensityTextureEnabled === value) {\n        return;\n      }\n\n      this._TranslucencyIntensityTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MaterialFlags, \"IridescenceTextureEnabled\", {\n    /**\n     * Are translucency intensity textures enabled in the application.\n     */\n    get: function get() {\n      return this._IridescenceTextureEnabled;\n    },\n    set: function set(value) {\n      if (this._IridescenceTextureEnabled === value) {\n        return;\n      }\n\n      this._IridescenceTextureEnabled = value;\n      Engine.MarkAllMaterialsAsDirty(1);\n    },\n    enumerable: false,\n    configurable: true\n  }); // Flags used to enable or disable a type of texture for all Standard Materials\n\n  MaterialFlags._DiffuseTextureEnabled = true;\n  MaterialFlags._DetailTextureEnabled = true;\n  MaterialFlags._AmbientTextureEnabled = true;\n  MaterialFlags._OpacityTextureEnabled = true;\n  MaterialFlags._ReflectionTextureEnabled = true;\n  MaterialFlags._EmissiveTextureEnabled = true;\n  MaterialFlags._SpecularTextureEnabled = true;\n  MaterialFlags._BumpTextureEnabled = true;\n  MaterialFlags._LightmapTextureEnabled = true;\n  MaterialFlags._RefractionTextureEnabled = true;\n  MaterialFlags._ColorGradingTextureEnabled = true;\n  MaterialFlags._FresnelEnabled = true;\n  MaterialFlags._ClearCoatTextureEnabled = true;\n  MaterialFlags._ClearCoatBumpTextureEnabled = true;\n  MaterialFlags._ClearCoatTintTextureEnabled = true;\n  MaterialFlags._SheenTextureEnabled = true;\n  MaterialFlags._AnisotropicTextureEnabled = true;\n  MaterialFlags._ThicknessTextureEnabled = true;\n  MaterialFlags._RefractionIntensityTextureEnabled = true;\n  MaterialFlags._TranslucencyIntensityTextureEnabled = true;\n  MaterialFlags._IridescenceTextureEnabled = true;\n  return MaterialFlags;\n}();\n\nexport { MaterialFlags };","map":{"version":3,"mappings":"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","names":["Engine","Object","MaterialFlags","_DiffuseTextureEnabled","value","MarkAllMaterialsAsDirty","_DetailTextureEnabled","_AmbientTextureEnabled","_OpacityTextureEnabled","_ReflectionTextureEnabled","_EmissiveTextureEnabled","_SpecularTextureEnabled","_BumpTextureEnabled","_LightmapTextureEnabled","_RefractionTextureEnabled","_ColorGradingTextureEnabled","_FresnelEnabled","_ClearCoatTextureEnabled","_ClearCoatBumpTextureEnabled","_ClearCoatTintTextureEnabled","_SheenTextureEnabled","_AnisotropicTextureEnabled","_ThicknessTextureEnabled","_RefractionIntensityTextureEnabled","_TranslucencyIntensityTextureEnabled","_IridescenceTextureEnabled"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Materials/materialFlags.ts"],"sourcesContent":["import { Engine } from \"../Engines/engine\";\r\nimport { Constants } from \"../Engines/constants\";\r\n\r\n/**\r\n * This groups all the flags used to control the materials channel.\r\n */\r\nexport class MaterialFlags {\r\n    // Flags used to enable or disable a type of texture for all Standard Materials\r\n    private static _DiffuseTextureEnabled = true;\r\n    /**\r\n     * Are diffuse textures enabled in the application.\r\n     */\r\n    public static get DiffuseTextureEnabled(): boolean {\r\n        return this._DiffuseTextureEnabled;\r\n    }\r\n    public static set DiffuseTextureEnabled(value: boolean) {\r\n        if (this._DiffuseTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._DiffuseTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _DetailTextureEnabled = true;\r\n    /**\r\n     * Are detail textures enabled in the application.\r\n     */\r\n    public static get DetailTextureEnabled(): boolean {\r\n        return this._DetailTextureEnabled;\r\n    }\r\n    public static set DetailTextureEnabled(value: boolean) {\r\n        if (this._DetailTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._DetailTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _AmbientTextureEnabled = true;\r\n    /**\r\n     * Are ambient textures enabled in the application.\r\n     */\r\n    public static get AmbientTextureEnabled(): boolean {\r\n        return this._AmbientTextureEnabled;\r\n    }\r\n    public static set AmbientTextureEnabled(value: boolean) {\r\n        if (this._AmbientTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._AmbientTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _OpacityTextureEnabled = true;\r\n    /**\r\n     * Are opacity textures enabled in the application.\r\n     */\r\n    public static get OpacityTextureEnabled(): boolean {\r\n        return this._OpacityTextureEnabled;\r\n    }\r\n    public static set OpacityTextureEnabled(value: boolean) {\r\n        if (this._OpacityTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._OpacityTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ReflectionTextureEnabled = true;\r\n    /**\r\n     * Are reflection textures enabled in the application.\r\n     */\r\n    public static get ReflectionTextureEnabled(): boolean {\r\n        return this._ReflectionTextureEnabled;\r\n    }\r\n    public static set ReflectionTextureEnabled(value: boolean) {\r\n        if (this._ReflectionTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ReflectionTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _EmissiveTextureEnabled = true;\r\n    /**\r\n     * Are emissive textures enabled in the application.\r\n     */\r\n    public static get EmissiveTextureEnabled(): boolean {\r\n        return this._EmissiveTextureEnabled;\r\n    }\r\n    public static set EmissiveTextureEnabled(value: boolean) {\r\n        if (this._EmissiveTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._EmissiveTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _SpecularTextureEnabled = true;\r\n    /**\r\n     * Are specular textures enabled in the application.\r\n     */\r\n    public static get SpecularTextureEnabled(): boolean {\r\n        return this._SpecularTextureEnabled;\r\n    }\r\n    public static set SpecularTextureEnabled(value: boolean) {\r\n        if (this._SpecularTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._SpecularTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _BumpTextureEnabled = true;\r\n    /**\r\n     * Are bump textures enabled in the application.\r\n     */\r\n    public static get BumpTextureEnabled(): boolean {\r\n        return this._BumpTextureEnabled;\r\n    }\r\n    public static set BumpTextureEnabled(value: boolean) {\r\n        if (this._BumpTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._BumpTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _LightmapTextureEnabled = true;\r\n    /**\r\n     * Are lightmap textures enabled in the application.\r\n     */\r\n    public static get LightmapTextureEnabled(): boolean {\r\n        return this._LightmapTextureEnabled;\r\n    }\r\n    public static set LightmapTextureEnabled(value: boolean) {\r\n        if (this._LightmapTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._LightmapTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _RefractionTextureEnabled = true;\r\n    /**\r\n     * Are refraction textures enabled in the application.\r\n     */\r\n    public static get RefractionTextureEnabled(): boolean {\r\n        return this._RefractionTextureEnabled;\r\n    }\r\n    public static set RefractionTextureEnabled(value: boolean) {\r\n        if (this._RefractionTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._RefractionTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ColorGradingTextureEnabled = true;\r\n    /**\r\n     * Are color grading textures enabled in the application.\r\n     */\r\n    public static get ColorGradingTextureEnabled(): boolean {\r\n        return this._ColorGradingTextureEnabled;\r\n    }\r\n    public static set ColorGradingTextureEnabled(value: boolean) {\r\n        if (this._ColorGradingTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ColorGradingTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _FresnelEnabled = true;\r\n    /**\r\n     * Are fresnels enabled in the application.\r\n     */\r\n    public static get FresnelEnabled(): boolean {\r\n        return this._FresnelEnabled;\r\n    }\r\n    public static set FresnelEnabled(value: boolean) {\r\n        if (this._FresnelEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._FresnelEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_FresnelDirtyFlag);\r\n    }\r\n\r\n    private static _ClearCoatTextureEnabled = true;\r\n    /**\r\n     * Are clear coat textures enabled in the application.\r\n     */\r\n    public static get ClearCoatTextureEnabled(): boolean {\r\n        return this._ClearCoatTextureEnabled;\r\n    }\r\n    public static set ClearCoatTextureEnabled(value: boolean) {\r\n        if (this._ClearCoatTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ClearCoatTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ClearCoatBumpTextureEnabled = true;\r\n    /**\r\n     * Are clear coat bump textures enabled in the application.\r\n     */\r\n    public static get ClearCoatBumpTextureEnabled(): boolean {\r\n        return this._ClearCoatBumpTextureEnabled;\r\n    }\r\n    public static set ClearCoatBumpTextureEnabled(value: boolean) {\r\n        if (this._ClearCoatBumpTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ClearCoatBumpTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ClearCoatTintTextureEnabled = true;\r\n    /**\r\n     * Are clear coat tint textures enabled in the application.\r\n     */\r\n    public static get ClearCoatTintTextureEnabled(): boolean {\r\n        return this._ClearCoatTintTextureEnabled;\r\n    }\r\n    public static set ClearCoatTintTextureEnabled(value: boolean) {\r\n        if (this._ClearCoatTintTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ClearCoatTintTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _SheenTextureEnabled = true;\r\n    /**\r\n     * Are sheen textures enabled in the application.\r\n     */\r\n    public static get SheenTextureEnabled(): boolean {\r\n        return this._SheenTextureEnabled;\r\n    }\r\n    public static set SheenTextureEnabled(value: boolean) {\r\n        if (this._SheenTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._SheenTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _AnisotropicTextureEnabled = true;\r\n    /**\r\n     * Are anisotropic textures enabled in the application.\r\n     */\r\n    public static get AnisotropicTextureEnabled(): boolean {\r\n        return this._AnisotropicTextureEnabled;\r\n    }\r\n    public static set AnisotropicTextureEnabled(value: boolean) {\r\n        if (this._AnisotropicTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._AnisotropicTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ThicknessTextureEnabled = true;\r\n    /**\r\n     * Are thickness textures enabled in the application.\r\n     */\r\n    public static get ThicknessTextureEnabled(): boolean {\r\n        return this._ThicknessTextureEnabled;\r\n    }\r\n    public static set ThicknessTextureEnabled(value: boolean) {\r\n        if (this._ThicknessTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ThicknessTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _RefractionIntensityTextureEnabled = true;\r\n    /**\r\n     * Are refraction intensity textures enabled in the application.\r\n     */\r\n    public static get RefractionIntensityTextureEnabled(): boolean {\r\n        return this._ThicknessTextureEnabled;\r\n    }\r\n    public static set RefractionIntensityTextureEnabled(value: boolean) {\r\n        if (this._RefractionIntensityTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._RefractionIntensityTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _TranslucencyIntensityTextureEnabled = true;\r\n    /**\r\n     * Are translucency intensity textures enabled in the application.\r\n     */\r\n    public static get TranslucencyIntensityTextureEnabled(): boolean {\r\n        return this._ThicknessTextureEnabled;\r\n    }\r\n    public static set TranslucencyIntensityTextureEnabled(value: boolean) {\r\n        if (this._TranslucencyIntensityTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._TranslucencyIntensityTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _IridescenceTextureEnabled = true;\r\n    /**\r\n     * Are translucency intensity textures enabled in the application.\r\n     */\r\n    public static get IridescenceTextureEnabled(): boolean {\r\n        return this._IridescenceTextureEnabled;\r\n    }\r\n    public static set IridescenceTextureEnabled(value: boolean) {\r\n        if (this._IridescenceTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._IridescenceTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}