{"ast":null,"code":"/**\n * Composed of a frame, and an action function\n */\nvar AnimationEvent =\n/** @class */\nfunction () {\n  /**\n   * Initializes the animation event\n   * @param frame The frame for which the event is triggered\n   * @param action The event to perform when triggered\n   * @param onlyOnce Specifies if the event should be triggered only once\n   */\n  function AnimationEvent(\n  /** The frame for which the event is triggered **/\n  frame,\n  /** The event to perform when triggered **/\n  action,\n  /** Specifies if the event should be triggered only once**/\n  onlyOnce) {\n    this.frame = frame;\n    this.action = action;\n    this.onlyOnce = onlyOnce;\n    /**\n     * Specifies if the animation event is done\n     */\n\n    this.isDone = false;\n  }\n  /** @hidden */\n\n\n  AnimationEvent.prototype._clone = function () {\n    return new AnimationEvent(this.frame, this.action, this.onlyOnce);\n  };\n\n  return AnimationEvent;\n}();\n\nexport { AnimationEvent };","map":{"version":3,"mappings":"AAAA;;;AAGA;AAAA;AAAA;AAMI;;;;;;AAMA;AACI;AACOA,OAFX;AAGI;AACOC,QAJX;AAKI;AACOC,UANX,EAM6B;AAJlB;AAEA;AAEA;AAjBX;;;;AAGO,kBAAkB,KAAlB;AAeH;AAEJ;;;AACOC,oCAAP;AACI,WAAO,IAAIA,cAAJ,CAAmB,KAAKH,KAAxB,EAA+B,KAAKC,MAApC,EAA4C,KAAKC,QAAjD,CAAP;AACH,GAFM;;AAGX;AAAC,CAzBD","names":["frame","action","onlyOnce","AnimationEvent"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Animations/animationEvent.ts"],"sourcesContent":["/**\r\n * Composed of a frame, and an action function\r\n */\r\nexport class AnimationEvent {\r\n    /**\r\n     * Specifies if the animation event is done\r\n     */\r\n    public isDone: boolean = false;\r\n\r\n    /**\r\n     * Initializes the animation event\r\n     * @param frame The frame for which the event is triggered\r\n     * @param action The event to perform when triggered\r\n     * @param onlyOnce Specifies if the event should be triggered only once\r\n     */\r\n    constructor(\r\n        /** The frame for which the event is triggered **/\r\n        public frame: number,\r\n        /** The event to perform when triggered **/\r\n        public action: (currentFrame: number) => void,\r\n        /** Specifies if the event should be triggered only once**/\r\n        public onlyOnce?: boolean\r\n    ) {}\r\n\r\n    /** @hidden */\r\n    public _clone(): AnimationEvent {\r\n        return new AnimationEvent(this.frame, this.action, this.onlyOnce);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}